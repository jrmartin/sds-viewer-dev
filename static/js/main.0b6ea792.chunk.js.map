{"version":3,"sources":["constants.js","utils/Splinter.js","app/widgets.js","images/check.svg","components/FileUploader/UploadSubmit.js","images/tree/dataset.svg","images/tree/folder.svg","images/tree/file.svg","utils/nodesFactory.js","styles/constant.js","images/close.svg","components/DatasetsListViewer/DatasetsListSplinter.js","redux/actions.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","components/DatasetsListViewer/DatasetsListDialog.js","images/upload-icon.svg","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","components/FileUploader/UploadDialogHeader.js","components/FileUploader/UploadDialog.js","images/toggle-right.svg","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","images/plus.svg","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleLinkedChip.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/Views/SimpleChip.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/GroupDetails.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/store.js","redux/initialState.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","utils/filesHandler.js","utils/graphModel.js"],"names":["IMPORT_TEXT","ADD_DATASET","SPARC_DATASETS","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","maxFiles","detailsLabel","subject_key","protocols_key","contributors_key","GRAPH_SOURCE","TREE_SOURCE","N3","require","ttl2jsonld","parse","Splinter","jsonFile","turtleFile","filterNode","node","basename","includes","this","factory","NodesFactory","types","jsonData","levelsMap","turtleData","tree","undefined","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","store","Store","rdf_to_json","rdf_to_json_map","Map","tree_parents_map2","JSON","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","push","prefix","iri","String","forEach","toTrim","Array","isArray","RDF_TO_JSON_TYPES","some","item","key","id","replace","set","n","previousLevel","map","level","updateLevels","neighbors","processDataset","cleanLinks","self","link","find","l","source","target","a","b","links","maxLevel","Object","keys","reduce","length","filter","type","rdfTypes","UBERON","hierarchyVariant","extractTurtle","processJSON","data","extractJson","initialiseNodesEdges","processTurtle","convertRDFToJson","create_graph","create_tree","mergeData","generateData","typeFound","typesModel","unknown","owl","rdfType","NamedIndividual","Class","ontology","sparc","split","pop","sparcType","graph_node","get","additional_properties","console","error","attributes","name","value","proxies","properties","tree_reference","children_counter","collapsed","childLinks","proxy","Util","isBlankNode","subject","predicate","type_key","object","datatype","found","indexOf","update_node","dataset_node","ontology_node","get_type","typedNode","createNode","Unknown","delete","dataset","concat","updatedAbout","isAbout","NCBITaxon","PATO","label","updateTechniques","protocolEmploysTechnique","temp_edges","target_node","groups","parent","config","order","category","group","groupID","groupNode","nodeF","subjects","protocols","Protocol","contributors","contributor","temp","Subject","organise_subjects","Person","Sample","derivedFrom","source_node","chidLinks","Award","nodesToRemove","index","array","specimenHasIdentifier","subjectSpecies","biologicalSex","hasDerivedInformationAsParticipant","participantInPerformanceOf","hasUriHuman","File","uri_human","from","RRID","unshift","element","splice","Collection","img","src","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","children","hasFolderAboutIt","folder","jsonNode","newNode","buildFolder","folderChildren","child","linkToNode","child_node","tempChildren","copiedItem","newName","dataset_relative_path","new_node","buildNodeFromJson","node_id","identifier","relativePath","size","size_bytes","mimetype","updated","timestamp_updated","status","tree_root","generateLeaf","build_leaf","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","path","findReference","reference","NodeViewWidget","WidgetStatus","ACTIVE","component","panelName","enableClose","enableRename","enableDrag","UploadSubmit","handleClose","enabledButton","Button","variant","fullWidth","disableElevation","color","onClick","disabled","CHECK","alt","createImage","Image","extension","image","extractProperties","ttlTypes","property","type_property","json_prop","new_attribute","step","innerPath","trimType","parseFloat","Contributor","firstName","middleName","lastName","namesArray","Dataset","typed_node","vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","DELETE_DATASET","SET_DATASET_LIST","SELECT_INSTANCE","TRIGGER_ERROR","addDataset","deleteDataset","setDatasetsList","datasets","selectInstance","instance","triggerError","message","error_message","hot","module","queryParams","URLSearchParams","window","location","search","datasetID","doi","dispatch","useDispatch","useState","openUploadDialog","setOpenUploadDialog","openDatasetsListDialog","setOpenDatasetsListDialog","useSelector","state","sdsState","doiMatch","initialised","setInitialised","loading","setLoading","turtle_url","json_url","splinter","fillDataset","turtle","json","getDatasetId","getGraph","getTree","_dataset","graph","addWidget","substring","graph_id","loadFiles","datasets_url","FileHandler","get_remote_file","url","loadDatsetFromDOI","fileData","file","DatasetsListSplinter","hasDoi","match","useEffect","fileHandler","summaryURL","repository_url","available_datasets","theme","display","className","open","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","useStore","LayoutManager","setComponent","myManager","getLayoutManagerInstance","model","visitNodes","setEventListener","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","active","ErrorDialog","onClose","DatasetsListDialog","React","selectedIndex","setSelectedIndex","searchField","setSearchField","filteredDatasets","setFilteredDatasets","handleDone","getFormattedListTex","reg","RegExp","str","callback","hasUriApi","lowerCaseLabel","toLowerCase","loadDatasets","PaperProps","style","align","CLOSE","datasetsButtonText","datasetsButtonSubtitleText","datasetsDialogSearchText","onChange","lowerCaseSearch","filtered","selected","primary","dangerouslySetInnerHTML","__html","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","progress","errors","Box","Typography","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","UploadProgress","onDelete","setProgress","upload","CANCEL","cursor","UploadError","DELETE","FilesUploading","files","fileWrapper","totalFiles","Uploader","rdf","setRdf","setJson","onDrop","Math","random","nodeRef","useRef","fileObjects","e","showPreviewsInDropzone","accFiles","acceptedFiles","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","setFiles","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","fileHandler2","fileExt","curr","urls","base_url","shift","getJsonURL","CircularProgress","TabPanel","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","Tabs","Tab","UploadDialog","setValue","_json","_turtle","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","ToggleRight","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","nodeSelected","instance_selected","setNodes","setItems","widgets","layoutActions","globalId","matchingTitle","lowercaseSearch","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","justifyContent","Plus","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","flexDirection","margin","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","background","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","marginBottom","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","bottom","zIndex","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","collapsedFolder","TOP_DOWN","layout","maxNodesLevel","RADIAL_OUT","radialVariant","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","fill","GraphViewer","getPrunedTree","nodesById","fromEntries","visibleNodes","visibleLinks","traverseTree","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","selectedLayout","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","setCameraPosition","Boolean","setData","handleLayoutClose","handleLayoutChange","setForce","resetCamera","handleNodeRightClick","ggv","centerAt","zoom","zoomToFit","center","force","d3Force","distance","strength","d3","sqrt","setTimeout","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","log","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","fillText","collapsedNodes","d2","onEngineStop","cooldownTime","linkColor","has","linkWidth","dagLevelDistance","linkDirectionalParticles","forceRadial","warmupTicks","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","clear","add","nodeCanvasObject","d3VelocityDecay","nodeCanvasObjectMode","nodeVal","nodeRelSize","onNodeHover","neighbor","onNodeClick","Group","updatedData","handleNodeLeftClick","onNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Menu","anchorEl","keepMounted","MenuItem","zoomIn","zoomOut","NodeFooter","FILTER","PersonHeader","headingStyle","title","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","toString","DetailLinks","href","Link","LINKICON","SimpleChip","chips","Chip","FileDetails","latestUpdate","Date","DETAILS_LIST","Links","SimpleLinkedChip","checksums","hex","cypher","List","ListItemText","PersonDetails","iterateSimpleValue","simpleValue","SampleDetails","hasAssignedGroup","hasDigitalArtifactThatIsAboutIt","wasDerivedFromSubject","wasExtractedFromAnatomicalRegion","DatasetDetails","description","contactPerson","hasResponsiblePrincipalInvestigator","user","designation","USER","hasContactPerson","errorIndex","hasDatasetTemplateSchemaVersion","hasExperimentalModality","SubjectDetails","weightUnit","weightValue","hasAgeCategory","ageValue","ageUnit","ageBaseUnit","ageBaseValue","subjectStrain","ProtocolDetails","protocolHasNumberOfSteps","GroupDetails","tag","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","getElementById","scrollIntoView","behavior","Breadcrumbs","DIVIDER","pages","page","componentMap","otherDetails","nodeDetails","reverse","singleNode","getDetail","latestNodeVisited","close","reducers","action","Actions","ids","slice","LayoutActions","SET_LAYOUT","createStore","all_tree","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","hostname","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","axios","progressCallback","reader","FileReader","onload","response","result","onprogress","lengthComputable","parseInt","loaded","total","readAsText","errorCallback","crossDomain","responseType","onDownloadProgress","progressEvent","catch","ORCID","awards","collection","sample"],"mappings":"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","file":"static/js/main.0b6ea792.chunk.js","sourcesContent":["export const IMPORT_TEXT = 'Load a new dataset';\nexport const ADD_DATASET = 'Load Dataset';\nexport const LIST_DATASETS = 'List Datasets';\nexport const SPARC_DATASETS = 'SPARC Datasets';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['json', 'ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\n","import NodesFactory from './nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel,\n    RDF_TO_JSON_TYPES\n} from './graphModel';\n\nimport config from './../config/app.json';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key\n} from '../constants';\n\nconst N3 = require('n3');\nconst ttl2jsonld = require('@frogcat/ttl2jsonld').parse;\n\nconst TMP_FILE = \".tmp\";\n\nconst SUBJECTS_LEVEL = 2;\nconst PROTOCOLS_LEVEL = 2, CRONTRIBUTORS_LEVEL = 2;\n\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n        this.rdf_to_json = undefined;\n        this.rdf_to_json_map = undefined;\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n        this.tree_parents_map2 = new Map();\n        this.rdf_to_json_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    convertRDFToJson () {\n        this.rdf_to_json = ttl2jsonld(this.turtleFile);\n        this.rdf_to_json['@graph'].forEach(node => {\n            let found = false;\n            let toTrim = '';\n            if (Array.isArray(node['@type'])) {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'].includes(item.key)) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'] === item.key) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            if (found) {\n                let id = this.types[toTrim].iri.id + node['@id'].replace(toTrim + ':', '');\n                this.rdf_to_json_map.set(id, node);\n            }\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n    updateLevels(n, previousLevel) {\n        n?.map( node => {\n            if ( node?.level > previousLevel ){\n                this.updateLevels(node?.neighbors, node.level);\n                node.level = node.level + 1;\n            }\n        });\n\n        return;\n    }\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let cleanLinks = [];\n        let self = this;\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = self.forced_nodes.find( node => node.id === link.source );\n                const b = self.forced_nodes.find( node => node.id === link.target );\n                !a.neighbors && (a.neighbors = []);\n                !b.neighbors && (b.neighbors = []);\n                a.neighbors.push(b);\n                b.neighbors.push(a);\n\n                !a.links && (a.links = []);\n                !b.links && (b.links = []);\n                a.links.push(link);\n                b.links.push(link);\n\n                cleanLinks.push(link);\n            }\n        });\n\n        // Calculate level with max amount of nodes\n        let maxLevel = Object.keys(this.levelsMap).reduce((a, b) => this.levelsMap[a].length > this.levelsMap[b].length ? a : b);\n        return {\n            nodes: this.forced_nodes?.filter( n => n.type !== rdfTypes.UBERON.key),\n            links: cleanLinks,\n            levelsMap : this.levelsMap,\n            hierarchyVariant : maxLevel * 20\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.convertRDFToJson();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } if (type.type === this.types.owl.iri.id + \"Class\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.Class[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.Class[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        const additional_properties = this.rdf_to_json_map.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0,\n                collapsed: false,\n                childLinks : [],\n                additional_properties: additional_properties,\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        let updatedAbout = [];\n        dataset_node?.attributes?.isAbout?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updatedAbout.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updatedAbout.push({\"value\": a});\n                }\n            } else {\n                updatedAbout.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.isAbout = updatedAbout;\n\n        let updateTechniques = [];\n        dataset_node.attributes.protocolEmploysTechnique?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updateTechniques.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updateTechniques.push({\"value\": a});\n                }\n            } else {\n                updateTechniques.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.protocolEmploysTechnique = updateTechniques;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges?.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_subjects(target_node, link, groups){\n        let parent = this.nodes.get(subject_key);\n        config.groups.order.forEach( category => {\n            let group = Object.keys(category)[0];\n            if ( target_node.attributes[group]?.[0] ) {\n                let source = this.nodes.get(target_node.attributes[group]?.[0]);\n                if ( source !== undefined ) {\n                    target_node.attributes[group][0] = source.attributes.label[0];\n                }\n                \n                const groupID = parent.id + \"_\" + target_node.attributes[group]?.[0].replace(/\\s/g, \"\");\n\n                if ( this.nodes.get(groupID) === undefined ) {\n                    const groupNode = {\n                        id: groupID,\n                        name: target_node.attributes[group]?.[0],\n                        type: typesModel.NamedIndividual.group.type,\n                        properties: category[group],\n                        parent : parent,\n                        proxies: [],\n                        level: parent.level + 1,\n                        tree_reference: null,\n                        children_counter: 0,\n                        collapsed : false,\n                        childLinks : []\n                    };\n                    let nodeF = this.factory.createNode(groupNode);\n                    this.nodes.set(groupID, nodeF);\n                    groups.push({\n                        source: parent.id,\n                        target: nodeF.id\n                    });\n                    parent = groupNode;\n                } else {\n                    parent = this.nodes.get(groupID);\n                }\n            } else {\n                console.error(\"The group node already exists!\", group);\n            }\n        });\n        link.source = parent.id;\n        target_node.level = parent.level + 1;\n        target_node.parent = parent;\n        target_node.childLinks = [];\n        target_node.collapsed = target_node.parent.type === typesModel.NamedIndividual.subject.type;\n        this.nodes.set(target_node.id, target_node);\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.group.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        let groups = [];\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                this.organise_subjects(target_node, link, groups);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && target_node.type === rdfTypes.Sample.key) {\n                link.source = target_node.attributes.derivedFrom[0];\n                target_node.level = subjects.level + 2;\n                target_node.parent = this.nodes.get(target_node.attributes.derivedFrom[0]);\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.chidLinks = [];\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n\n        this.forced_edges = this.forced_edges.concat(groups);\n    }\n\n\n    fix_links() {\n        let nodesToRemove = [];\n\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.Subject.key) {\n                if (node.attributes?.specimenHasIdentifier !== undefined) {\n                    let source = this.nodes.get(node.attributes.specimenHasIdentifier[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.specimenHasIdentifier[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.subjectSpecies !== undefined) {\n                    let source = this.nodes.get(node.attributes.subjectSpecies[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.subjectSpecies[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.biologicalSex !== undefined) {\n                    let source = this.nodes.get(node.attributes.biologicalSex[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.biologicalSex[0] = source.attributes.label[0];\n                    }\n                }\n\n                if (node.attributes?.hasDerivedInformationAsParticipant !== undefined && node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.hasDerivedInformationAsParticipant[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n\n                if (node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.participantInPerformanceOf[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.File.key) {\n                if (node?.tree_reference?.uri_human  !== undefined) {\n                    node.tree_reference.uri_human = Array.from(this.nodes)[0][1].attributes.hasUriHuman[0];\n                }\n            }\n\n            if (node.type === rdfTypes.RRID.key || node.type === rdfTypes.NCBITaxon?.key || node.type === rdfTypes.PATO?.key) {\n                nodesToRemove.unshift(index);\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n\n        nodesToRemove.forEach(element => {\n            this.forced_nodes.splice(element, 1);\n        })\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Collection.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                value.attributes.hasFolderAboutIt.forEach(folder => {\n                    let jsonNode = this.tree_map.get(folder);\n                    let newNode = this.buildFolder(jsonNode, value);\n                    let folderChildren = this.tree_parents_map2.get(newNode.parent_id)?.map(child => {\n                        child.parent_id = newNode.uri_api\n                        return child;\n                    });\n\n                    if (!this.filterNode(newNode) && (this.nodes.get(newNode.remote_id)) === undefined) {\n                        this.linkToNode(newNode, value);\n                    }\n\n                    if (this.tree_parents_map2.get(newNode.uri_api) === undefined) {\n                        this.tree_parents_map2.set(newNode.uri_api, folderChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        folderChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    } else {\n                        let tempChildren = folderChildren === undefined ? [...this.tree_parents_map2.get(newNode.uri_api)] : [...this.tree_parents_map2.get(newNode.uri_api), ...folderChildren];;\n                        this.tree_parents_map2.set(newNode.uri_api, tempChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        tempChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    buildFolder(item) {\n        let copiedItem = {...item};\n        let newName = copiedItem.dataset_relative_path.split('/')[0];\n        copiedItem.parent_id = copiedItem.remote_id;\n        copiedItem.remote_id = copiedItem.basename + '_' + newName;\n        copiedItem.uri_api = copiedItem.remote_id;\n        copiedItem.basename = newName;\n        // copiedItem.basename = copiedItem.remote_id;\n        return copiedItem;\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        new_node.childLinks = [];\n        new_node.collapsed = new_node.parent.type === typesModel.NamedIndividual.subject.type\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map2.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root?.remote_id);\n        this.tree_parents_map?.delete(tree_root?.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node?.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node?.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose, enabledButton }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n      disabled={enabledButton}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)].image : rdfTypes.Unknown.image\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node.additional_properties) {\n        for (const json_prop of rdfTypes[node.type].additional_properties) {\n            let new_attribute = node.additional_properties;\n            for (const step of json_prop.path) {\n                if (new_attribute[step] !== undefined) {\n                    new_attribute = new_attribute[step];\n                } else {\n                    new_attribute = undefined;\n                    break;\n                }\n            }\n            if (new_attribute !== undefined) {\n                if (typeof new_attribute === 'object' && new_attribute !== null && new_attribute[json_prop.innerPath]) {\n                    new_attribute = new_attribute[json_prop.innerPath];\n                }\n\n                node.attributes[json_prop.property] = [];\n                if (json_prop.type === 'string') {\n                    node.attributes[json_prop.property].push(new_attribute.replace(json_prop.trimType, ''));\n                } else {\n                    node.attributes[json_prop.property].push(parseFloat(new_attribute));\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: 8,\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: 'rgba(46, 58, 89, 0.4)',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n};\n\nexport default vars;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","import NodesFactory from './../../utils/nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel\n} from './../../utils/graphModel';\n\nconst N3 = require('n3');\n\nconst TMP_FILE = \".tmp\";\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.proxies_map = undefined;\n        this.forced_nodes = undefined;\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.proxies_map = new Map();\n    }\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        return {\n            nodes: this.forced_nodes\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.create_graph();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if (target_node.type === rdfTypes.Dataset.key){\n                return true;\n            }\n            return false;\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n                value.proxies.every(proxy => {\n                    return true;\n                })\n            \n            return value;\n        })\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SET_DATASET_LIST = 'SET_DATASET_LIST'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const setDatasetsList = datasets => ({\n    type: SET_DATASET_LIST,\n    data: { datasets: datasets },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});","import './flexlayout.css';\nimport theme from './theme';\nimport { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport Splinter from './utils/Splinter';\nimport MainLayout from './app/mainLayout';\nimport FileHandler from './utils/filesHandler';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport DatasetsListDialog from './components/DatasetsListViewer/DatasetsListDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { addDataset } from './redux/actions';\nimport { NodeViewWidget } from './app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport DatasetsListSplinter from \"./components/DatasetsListViewer/DatasetsListSplinter\";\n\nimport config from './config/app.json';\n\nconst App = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const datasetID = queryParams.get('id');\n  const doi = queryParams.get('doi');\n\n  const dispatch = useDispatch();\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  const [openDatasetsListDialog, setOpenDatasetsListDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n  const [_turtle, setTurtle] = useState(undefined);\n  const [_json, setJson] = useState(undefined);\n  const [doiMatch, setDoiMatch] = useState(true);\n  const [initialised, setInitialised] = useState(false);\n  const [loading, setLoading] = useState(() => {\n    if (datasetID && datasetID !== \"\") {\n      return true;\n    }\n    if (doi && doi !== \"\") {\n      return true;\n    }\n    return false;\n  });\n\n\n  let turtle_url = '';\n  let json_url = '';\n  let splinter = undefined;\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(addWidget({\n      id: _dataset.id,\n      name: _dataset.id.substring(0,10) + \"... Graph\",\n      component: \"graphComponent\",\n      panelName: \"leftPanel\",\n      enableClose: true,\n      enableRename: true,\n      enableDrag: true,\n      status: WidgetStatus.ACTIVE,\n      config: {\n        graph_id: _dataset.id,\n        component: \"graphComponent\",\n      }\n    }));\n    dispatch(addWidget(NodeViewWidget));\n    setLoading(false);\n  }\n\n  const loadTurtleFile = async () => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n    const ttlHandler = new FileHandler();\n    ttlHandler.get_remote_file(turtle_url, (url, data) => {\n      if (data) {\n        setTurtle(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadJSONFile = async (datasetID) => {\n    json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n    const jsonHandler = new FileHandler();\n    jsonHandler.get_remote_file(json_url, (url, data) => {\n      if (data) {\n        setJson(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadFiles = async(datasetID) => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n      const ttlHandler = new FileHandler();\n      ttlHandler.get_remote_file(turtle_url, (url, turtleData) => {\n        if (turtleData) {\n          json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n          const jsonHandler = new FileHandler();\n          jsonHandler.get_remote_file(json_url, (url, jsonData) => {\n            if (turtleData && jsonData && !initialised) {\n              fillDataset(turtleData, jsonData);\n              setInitialised(true);\n            }\n          }, () => {\n            setLoading(false);\n          });\n        }\n      },null);\n  }\n\n  const loadDatsetFromDOI = async (url, fileData) => {\n    let file = {\n      id: \"ttl\",\n      url: url,\n      data: fileData,\n      file: { name: \"ttl\", type: \"text/turtle\" },\n    };\n    const splinter = new DatasetsListSplinter(undefined, file.data);\n    let graph = await splinter.getGraph();\n    let datasets = graph.nodes.filter((node) => node?.attributes?.hasDoi);\n    const match = datasets.find( node => node.attributes?.hasDoi?.[0]?.includes(doi));\n    if ( match ) {\n      const datasetID = match.name;\n      loadFiles(datasetID);\n    } else {\n      setLoading(false);\n      setInitialised(false);\n    }\n  };\n\n  useEffect(() => {\n    if (datasetID && datasetID !== \"\" ) {\n      loadFiles(datasetID);\n    }\n\n    if (doi && doi !== \"\" ) {\n      if ( doiMatch ){\n        const fileHandler = new FileHandler();\n        const summaryURL = config.repository_url + config.available_datasets;\n        fileHandler.get_remote_file(summaryURL, loadDatsetFromDOI);\n      }\n    }\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" className='main-structure'>\n        <Sidebar\n          openUploadDialog={openUploadDialog}\n          setOpenUploadDialog={setOpenUploadDialog}\n          openDatasetsListDialog={openDatasetsListDialog}\n          setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n        />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                loading={loading}\n                openUploadDialog={openUploadDialog}\n                setOpenUploadDialog={setOpenUploadDialog}\n                openDatasetsListDialog={openDatasetsListDialog}\n                setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openUploadDialog}\n        handleClose={() => setOpenUploadDialog(false)}\n      />\n\n      <DatasetsListDialog\n        open={openDatasetsListDialog}\n        handleClose={() => setOpenDatasetsListDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    const event = new CustomEvent('nodeResized', {\n                        detail: node\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport Loader from '@metacell/geppetto-meta-ui/loader/Loader';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT, SPARC_DATASETS } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      { (props.loading)\n        ? <>\n          <Loader active={props.loading} />\n        </>\n        : <>\n            <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n            <Button\n              variant='outlined'\n              disableElevation\n              color='primary'\n              onClick={() => props.setOpenDatasetsListDialog(true)}\n            >\n              + { SPARC_DATASETS }\n            </Button>\n        </>\n      }\n\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Dialog,\n  DialogActions,\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  TextField,\n  DialogTitle,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { addDataset, setDatasetsList } from \"../../redux/actions\";\nimport Splinter from \"./../../utils/Splinter\";\nimport { NodeViewWidget } from \"../../app/widgets\";\nimport { addWidget } from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport DatasetsListSplinter from \"./DatasetsListSplinter\";\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport FileHandler from \"../../utils/filesHandler\";\nimport UploadSubmit from \"./../FileUploader/UploadSubmit\";\nimport CLOSE from '../../images/close.svg';\n\nimport config from \"./../../config/app.json\";\n\nconst DatasetsListDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(undefined);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const datasets = useSelector((state) => state.sdsState.available_datasets);\n  const [filteredDatasets, setFilteredDatasets] = React.useState(datasets);\n\n  let turtle_url = \"\";\n  let json_url = \"\";\n  let splinter = undefined;\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter,\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(\n      addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0, 10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        },\n      })\n    );\n    dispatch(addWidget(NodeViewWidget));\n  };\n\n  const handleDone = (dataset) => {\n    turtle_url =\n      config.datasets_url + dataset + \"/LATEST/curation-export.ttl\";\n    const fileHandler = new FileHandler();\n    fileHandler.get_remote_file(turtle_url, (url, turtleData) => {\n      if (turtleData) {\n        json_url =\n          config.datasets_url +\n          dataset +\n          \"/LATEST/path-metadata.json\";\n        fileHandler.get_remote_file(json_url, (url, data) => {\n          if (data) {\n            fillDataset(turtleData, data);\n            setFilteredDatasets(datasets);\n            setSelectedIndex(undefined);\n            handleClose();\n          }\n        });\n      }\n    });\n  };\n\n  const loadDatasets = () => {\n    const fileHandler = new FileHandler();\n    const callback = async (url, fileData) => {\n      let file = {\n        id: \"ttl\",\n        url: url,\n        data: fileData,\n        file: { name: \"ttl\", type: \"text/turtle\" },\n      };\n      const splinter = new DatasetsListSplinter(undefined, file.data);\n      let graph = await splinter.getGraph();\n      let datasets = graph.nodes.filter((node) => node?.attributes?.hasUriApi);\n      datasets.forEach( node => node.attributes ? node.attributes.lowerCaseLabel = node.attributes?.label?.[0]?.toLowerCase() : null );\n      dispatch(setDatasetsList(datasets));\n      setFilteredDatasets(datasets);\n    };\n    const summaryURL = config.repository_url + config.available_datasets;\n    fileHandler.get_remote_file(summaryURL, callback);\n  };\n\n  const handleChange = (event) => {\n    const lowerCaseSearch = event.target.value.toLowerCase();\n    let filtered = datasets.filter((dataset) =>\n      dataset.attributes.lowerCaseLabel.includes(lowerCaseSearch) || dataset.name.includes(lowerCaseSearch)\n    );\n    setSearchField(lowerCaseSearch);\n    setFilteredDatasets(filtered);\n  };\n\n  const closeDialog = () => {\n    setFilteredDatasets(datasets);\n    setSelectedIndex(undefined);\n    handleClose();\n  }\n\n  const getFormattedListTex = (label) => {\n    const reg = new RegExp(searchField, 'gi');\n\n    return searchField === undefined || searchField === \"\" \n      ? \n      label \n      :\n      label.replace(reg, function(str) {return '<b>'+str+'</b>'});\n  }\n\n  useEffect(() => {\n    open && datasets.length === 0 && loadDatasets();\n  });\n\n  return (\n    <Dialog \n      className=\"datasets_dialog\"\n      open={open}\n      handleClose={closeDialog}\n      PaperProps={{\n        style: {\n          width : '50rem'\n        },\n      }}\n    >\n      <DialogTitle align=\"center\">\n        <img\n          className=\"dialog_close\"\n          src={CLOSE}\n          onClick={handleClose}\n          alt=\"Close\"\n        />\n        <Typography variant=\"h3\">{config.text.datasetsButtonText}</Typography>\n        <Typography variant=\"subtitle1\">{config.text.datasetsButtonSubtitleText}</Typography>\n      </DialogTitle>\n      {datasets.length > 0 ? (\n        <>\n          <Box className=\"datasets_list\">\n            <TextField\n              fullWidth\n              disabled={datasets.length === 0}\n              label={config.text.datasetsDialogSearchText}\n              id=\"fullWidth\"\n              onChange={handleChange}\n            />\n          </Box>\n          {filteredDatasets.length > 0 ? (\n            <Box className=\"datasets_list datasets_list_results\" align=\"right\">\n              <Typography>{filteredDatasets.length} found</Typography>\n            </Box>\n          )\n          :\n          null\n          }\n          <Box className=\"datasets_list\">\n            <Paper className=\"datasets_dialog_list\">\n              <List className=\"datasets_list\">\n                {filteredDatasets.map((dataset) => (\n                  <>\n                    <ListItem\n                      className=\"dataset_item\"\n                      key={`item-${dataset.name}`}\n                      selected={selectedIndex === dataset.name}\n                      onClick={(event) =>\n                        handleListItemClick(event, dataset.name)\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            type=\"caption\"\n                            className=\"dataset_list_text\"\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                getFormattedListTex(dataset.attributes?.label[0])\n                            }}\n                          />\n                        }\n                      />\n                    </ListItem>\n                    <Divider />\n                  </>\n                ))}\n              </List>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <Box className=\"datasets_list\">\n          <CircularProgress className=\"datasets_loader\" />\n        </Box>\n      )}\n      <Box className=\"datasets_list\">\n        <UploadSubmit\n          handleClose={() => handleDone(selectedIndex)}\n          enabledButton={selectedIndex === undefined}\n        />\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default DatasetsListDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport FileHandler from '../../../utils/filesHandler';\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Done'\n        />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [rdf, setRdf] = useState(undefined);\n  const [json, setJson] = useState(undefined);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf({\n        ...rdf, data\n      })\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson({\n        ...json, data\n      })\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  }\n\n  const onDelete = (file)  => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf(undefined);\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson(undefined);\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  };\n\n  const onDrop = (files, accept = true) => {\n    for (const file of files) {\n      if (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1]) {\n        setRdf({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else if (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0]) {\n        setJson({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else {\n        console.error(\"something weird happened!\")\n      }\n    }\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  const files = [rdf, json].filter(item => item !== undefined);\n\n  return (\n    <>\n      {json !== undefined && rdf !== undefined \n        ? <> </>\n        : <DropzoneArea\n        fileObjects={files.map(item => item.file)}\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      /> }\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {json !== undefined && rdf !== undefined && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\nimport FileHandler from '../../utils/filesHandler';\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback, () => {});\n    fileHandler2.get_remote_file(getJsonURL(url), callback, () => {});\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/toggle-right.ce5f8e9f.svg\";","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport ToggleRight from '../../images/toggle-right.svg';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\n\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)}>\n          <img src={!expand ? ToggleRight : ToggleLeft} alt='Toggle' />\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if (nodeIds.length === 0) {\n      return;\n    }\n\n    if ((nodes.length !== nodeIds.length) && (nodes[0] === nodeIds[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n        selected={[nodeSelected?.tree_node?.id]}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '../../images/search.svg';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\n\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n        >\n          <img src={Search} alt='Search' />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","export default __webpack_public_path__ + \"static/media/plus.f6839d16.svg\";","import Plus from '../../images/plus.svg';\nimport { ADD_DATASET } from '../../constants';\nimport { Box, Button } from '@material-ui/core';\nimport config from \"./../../config/app.json\";\n\nconst SidebarFooter = (props) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\",\"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenUploadDialog(true)}\n      >\n        <img src={Plus} alt='Plus' />\n        {ADD_DATASET}\n      </Button>\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\", \"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenDatasetsListDialog(true)}\n      >\n        {config.text.datasetsButtonText}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openUploadDialog={props.openUploadDialog}\n        setOpenUploadDialog={props.setOpenUploadDialog}\n        openDatasetsListDialog={props.openDatasetsListDialog}\n        setOpenDatasetsListDialog={props.setOpenDatasetsListDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.25rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0 .375rem',\n          fontSize: '.75rem',\n          color: primaryTextColor,\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: lightBorderColor,\n        height: '2.375rem',\n        borderRadius: `${radius}px !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: lightBorderColor,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: inputTextColor,\n        '&::placeholder': {\n          color: inputTextColor,\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: secondaryColor,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              fontSize: 0,\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: lightBorderColor,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: noInstanceColor,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: noInstanceColor,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                color: placeHolderColor,\n                cursor: 'pointer',\n                lineHeight: 'normal',\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '0',\n          zIndex: '100',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import * as d3 from 'd3-force-3d'\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState, useEffect } from 'react';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { selectInstance } from '../../redux/actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport { GRAPH_SOURCE } from '../../constants';\nimport { rdfTypes } from '../../utils/graphModel';\n\nconst NODE_FONT = '500 5px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 3000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n  collapsedFolder : 'red'\n};\nconst TOP_DOWN = {\n  label : \"Top Down\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n  const getPrunedTree = () => {\n    let nodesById = Object.fromEntries(window.datasets[props.graph_id].graph?.nodes?.map(node => [node.id, node]));\n    window.datasets[props.graph_id].graph?.links?.forEach(link => {\n      const source = (typeof link.source) === 'object' ? link.source.id : link.source;\n      const target = (typeof link.target) === 'object' ? link.target.id : link.target;\n      const linkFound = !nodesById[source]?.childLinks?.find( l =>\n        source === ((typeof l.source) === 'object' ? l.source.id : l.source) && target === ((typeof l.target) === 'object' ? l.target.id : l.target) \n      );\n      if ( linkFound ) {\n        nodesById[source]?.childLinks?.push(link);\n      }\n    });\n  \n    const visibleNodes = [];\n    const visibleLinks = [];\n\n    (function traverseTree(node = nodesById[window.datasets[props.graph_id].graph?.nodes?.[0].id]) {\n      visibleNodes.push(node);\n      if (node.collapsed) return;\n      visibleLinks.push(...node.childLinks);\n      let nodes = node.childLinks.map(link => (typeof link.target) === 'object' ? link.target : nodesById[link.target]);\n      nodes?.forEach(traverseTree);\n    })(); // IIFE\n\n    return { nodes : visibleNodes, links : visibleLinks, levelsMap : window.datasets[props.graph_id].graph.levelsMap, hierarchyVariant : window.datasets[props.graph_id].graph.hierarchyVariant };\n  };\n\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(RADIAL_OUT);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState(getPrunedTree());\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n    setForce();\n  };\n\n  \n  const handleNodeLeftClick = (node, event) => {\n    if ( node?.id === selectedNode?.id ) {\n      if ( node.type === rdfTypes.Subject.key || node.type === rdfTypes.Collection.key \n        || node.type === rdfTypes.Group.key || node.type === rdfTypes.Sample.key ) {\n        node.collapsed = !node.collapsed;\n        const updatedData = getPrunedTree();\n        setData(updatedData);\n      }\n    }\n    dispatch(selectInstance({\n      dataset_id: props.graph_id,\n      graph_node: node.id,\n      tree_node: node?.tree_reference?.id,\n      source: GRAPH_SOURCE\n    }));\n    setSelectedNode(node);\n    setTimeout( () => node?.id === selectedNode?.id && handleNodeRightClick(node), data?.nodes?.length + data?.links?.length );\n  };\n\n  useEffect(() => {\n    resetCamera();\n    setForce();\n  }, []);\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n    let center =  graphRef?.current?.ggv?.current.centerAt();\n    setCameraPosition({ x :  center?.x , y :  center?.y });\n  };\n\n  const setForce = () => {\n    let force = -150;\n    if ( selectedLayout.layout === TOP_DOWN.layout ) {\n      force = -150;\n    } else if ( selectedLayout.layout === RADIAL_OUT.layout ) {\n      force = -100;\n    } \n    graphRef?.current?.ggv?.current.d3Force('link').distance(0).strength(1);\n    graphRef?.current?.ggv?.current.d3Force(\"charge\").strength(force * 2);\n    graphRef?.current?.ggv?.current.d3Force('collision', d3.forceCollide(20)); \n    graphRef?.current?.ggv?.current.d3Force('x', d3.forceX());\n    graphRef?.current?.ggv?.current.d3Force('y', d3.forceY());\n    graphRef?.current?.ggv?.current.d3Force('center', d3.forceCenter(0,0));\n    graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(node => force * Math.sqrt(100 / graphRef?.current?.props?.data?.levelsMap[node.level]?.length )));\n  }\n\n  const onEngineStop = () => {\n    setForce();\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setForce();\n\n    setTimeout ( () => { \n      setLoading(false);\n      setForce();\n    }, LOADING_TIME);\n  }, []);\n\n  useEffect(() => {\n    setForce();\n},[selectedLayout]) \n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 7.5;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 4.2, size * 4.2];\n      const hoverRectPosition = [node.x - hoverRectDimensions[0]/2, node.y - hoverRectDimensions[1]/2];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1],\n      ];\n      const hoverRectBorderRadius = 1;\n      ctx.beginPath();\n\n      try {\n        node.type === rdfTypes.Sample.key && console.log(\"Node \", node);\n        ctx.drawImage(\n          node?.img,\n          node.x - size,\n          node.y - size,\n          ...nodeImageSize\n        );\n      } catch (error) {\n        const img = new Image();\n        img.src = rdfTypes.Unknown.image;\n        node.img = img;\n        console.log(\"Node \", node);\n\n        // Add default icon if new icon wasn't found under images\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      }\n\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 9).concat('...');\n      } else if ( Array.isArray(nodeName) ){\n        nodeName = nodeName[0]?.substr(0, 9).concat('...');\n      }\n      const textProps = [nodeName, node.x, textHoverPosition[1]];\n      if (node === hoverNode || node?.id === selectedNode?.id || node?.id === nodeSelected?.id ) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0],\n          hoverRectDimensions[1] / 4,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n      if ( node.childLinks?.length && node.collapsed ) {\n        const collapsedNodes = [node.childLinks?.length, node.x, textHoverPosition[1]];\n        ctx.fillStyle = GRAPH_COLORS.collapsedFolder;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'bottom';\n        ctx.fillText(...collapsedNodes);\n      }\n    },\n    [hoverNode]\n  );\n\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={ graphRef }\n        // Graph data with Nodes and Links to populate\n        data={data}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        onEngineStop={onEngineStop}\n        cooldownTime={data?.nodes?.length + data?.links?.length * 10}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        dagLevelDistance={selectedLayout.layout === TOP_DOWN.layout ? 60 : 0}\n        linkDirectionalParticles={1}\n        forceRadial={15}\n        warmupTicks={data?.nodes?.length + data?.links?.length}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        d3VelocityDecay={0.3}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => \n          100 / (node.level + 1)\n        }\n        nodeRelSize={2.5}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div className='graph-view_controls'>\n            <IconButton aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <FormatAlignCenterIcon />\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n            </Menu>\n            <IconButton onClick={(e) => zoomIn()}>\n              <ZoomInIcon />\n            </IconButton>\n            <IconButton onClick={(e) => zoomOut()}>\n              <ZoomOutIcon />\n            </IconButton>\n            <IconButton onClick={(e) => resetCamera()}>\n              <RefreshIcon />\n            </IconButton>\n            <LayersIcon />\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => (item?.link === undefined\n        ? (<Chip key={`${item?.value}_${index}`} label={item?.value} />)\n        : (<Chip key={`${item?.value}_${index}`} label={item?.value} onClick={() => window.open(item.link, '_blank')}/>)))\n      }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.tree_node?.timestamp_updated !== undefined) {\n        latestUpdate = new Date(node?.tree_node?.timestamp_updated.split(\",\")[0]);\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Type',\n            value: node?.tree_node?.type\n        },\n        {\n            title: 'Mimetype',\n            value: node?.tree_node?.mimetype\n        },\n        {\n            title: 'Size Bytes',\n            value: node?.tree_node?.size_bytes\n        }\n    ];\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"File Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node?.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'File Details'} />)\n                }\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node?.graph_node?.attributes?.isAbout} />\n                </Box>\n                { node?.tree_node?.uri_human !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.tree_node?.uri_human} title=\"Human URI\" />\n                       </Box>)\n                    : (<> </>)\n                }\n\n                { node?.tree_node?.checksums !== undefined\n                    ? (<>\n                            <SimpleLabelValue label={'Checksum'} value={node?.tree_node?.checksums[0].hex} />\n                            <SimpleLabelValue label={'Checksum Algorithm'} value={node?.tree_node?.checksums[0].cypher} />\n                        </>)\n                    : (<> </>)\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node?.graph_node?.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node?.graph_node?.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <Typography component=\"h3\">Person Details</Typography>\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Name</Typography>\n                    <Links key={`name_href_link`} href={node.graph_node?.id} title={title.toString()} />\n                    {/* <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} /> */}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={item} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const simpleValue = (label, value) => {\n    if (value !== undefined) {\n        return (<SimpleLabelValue key={label} label={label} value={value} />);\n    } else {\n        return (<> </>);\n    }\n}\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label ? node.graph_node.attributes?.label[0] : \"\";\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined Sample name\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Sample Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Sample Details'} />)\n                }\n\n                { iterateSimpleValue('Assigned group', node?.graph_node?.attributes?.hasAssignedGroup) }\n                {\n                    <Box className=\"tab-content-row\">\n                        <Typography component=\"label\">{\"Derived Information\"}</Typography>\n                        <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                    </Box>\n                }\n                { iterateSimpleValue('Digital artifact', node?.graph_node?.attributes?.hasDigitalArtifactThatIsAboutIt) }\n                { iterateSimpleValue('Participant in performance of', node?.graph_node?.attributes?.participantInPerformanceOf) }\n                { iterateSimpleValue('Derived from subject', node?.graph_node?.attributes?.wasDerivedFromSubject) }\n                { iterateSimpleValue('Extracted from Anatomical region', node?.graph_node?.attributes?.wasExtractedFromAnatomicalRegion) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport USER from \"../../../images/user.svg\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n    const nodes = window.datasets[node.dataset_id].splinter.nodes;\n\n    let title = \"\";\n    let label = \"\";\n    let idDetails = \"\";\n    let description = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node?.graph_node.attributes?.label[0];\n        title = node?.graph_node.attributes?.title[0];\n        description = node?.graph_node.attributes?.description[0];\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        label = node?.tree_node?.basename;\n        idDetails = node?.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node.graph_node?.attributes?.label[0];\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.graph_node?.attributes?.latestUpdate !== undefined) {\n        latestUpdate = new Date(node.graph_node.attributes?.latestUpdate[0])\n    }\n\n    let contactPerson = [];\n    if (node.graph_node.attributes?.hasResponsiblePrincipalInvestigator !== undefined) {\n        node.graph_node.attributes?.hasResponsiblePrincipalInvestigator.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Principal Investigator',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    if (node.graph_node.attributes?.hasContactPerson !== undefined) {\n        node.graph_node.attributes?.hasContactPerson.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Contributor',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Error Index',\n            value: node.graph_node.attributes?.errorIndex\n        },\n        {\n            title: 'Template Schema Version',\n            value: node.graph_node.attributes?.hasDatasetTemplateSchemaVersion\n        },\n        {\n            title: 'Experiment Modality',\n            value: node.graph_node.attributes?.hasExperimentalModality\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Title'} value={title} heading={'Dataset Details'} />\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={label} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={label} />)\n                }\n                <SimpleLabelValue label={'Description'} value={description} />\n\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.isAbout} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Protocol Techniques</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.protocolEmploysTechnique} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node.graph_node.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node.graph_node.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => <Chip key={`${item}_${index}`} label={item} /> ) }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue, simpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node.tree_node && node.graph_node) {\n        idDetails = node?.tree_node?.id + detailsLabel;\n        title = node?.tree_node?.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node?.graph_node?.id + detailsLabel;\n        title = node.graph_node.name;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Weight Unit',\n            value: node.graph_node.attributes?.weightUnit\n        },\n        {\n            title: 'Weight Value',\n            value: node.graph_node.attributes?.weightValue\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Subject Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Subject Details'} />)\n                }\n\n                { iterateSimpleValue('Age Category', node?.graph_node?.attributes?.hasAgeCategory) }\n                { (node.graph_node.attributes?.ageValue && node.graph_node.attributes?.ageUnit)\n                    ? simpleValue('Age', node.graph_node.attributes?.ageValue + ' ' + node.graph_node.attributes?.ageUnit)\n                    : (node.graph_node.attributes?.ageBaseUnit && node.graph_node.attributes?.ageBaseValue)\n                        ? simpleValue('Age', node.graph_node.attributes?.ageBaseValue + ' ' + node.graph_node.attributes?.ageBaseUnit)\n                        : <> </>\n                }\n\n                { (node.graph_node.attributes?.weightUnit && node.graph_node.attributes?.weightValue)\n                    ? simpleValue('Weight', node.graph_node.attributes?.weightValue + ' ' + node.graph_node.attributes?.weightUnit)\n                    : <> </>\n                }\n\n                { iterateSimpleValue('Biological Sex', node?.graph_node?.attributes?.biologicalSex) }\n                { iterateSimpleValue('Specimen identifier', node?.graph_node?.attributes?.specimenHasIdentifier) }\n\n                { node.graph_node?.attributes?.subjectSpecies && node.graph_node?.attributes?.subjectSpecies.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Species</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectSpecies} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.subjectStrain && node.graph_node?.attributes?.subjectStrain.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Strains</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectStrain} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.hasAssignedGroup && node.graph_node?.attributes?.hasAssignedGroup.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Assigned Groups</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.hasAssignedGroup} />\n                        </Box>)\n                    : <> </>\n                }\n                { node?.graph_node?.attributes?.hasDerivedInformationAsParticipant !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                        </Box>)\n                    : <></>\n                }\n                { node?.graph_node?.attributes?.participantInPerformanceOf !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.graph_node?.attributes?.participantInPerformanceOf} title=\"Participant in performance of\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Protocol Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />)\n                }\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst GroupDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Inner Folder/Files '} value={node?.graph_node?.childLinks?.length} heading={node?.graph_node?.name + ' group details'} />\n                <SimpleLabelValue label={'Group tag '} value={node?.graph_node?.properties?.tag} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default GroupDetails;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport CollectionDetails from './Details/CollectionDetails';\nimport GroupDetails from './Details/GroupDetails';\n\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Group.key:\n                details = new Group(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                {/* <CollectionDetails node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} />\n                <CollectionDetails node={node} /> */}\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Group = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <GroupDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <GroupDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        separator={<img src={DIVIDER} alt=\"DIVIDER\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography variant=\"subtitle2\" onClick={() => {goToLink(links?.current.id)}} className=\"breadcrumb_selected\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport { useSelector } from 'react-redux'\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\n\nconst NodeDetailView = (props) => {\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  if (nodeSelected.tree_node !== undefined && nodeSelected.tree_node !== null) {\n    path = [...nodeSelected.tree_node.path]\n    path.shift();\n    otherDetails = path.reverse().map( singleNode => {\n      const tree_node = window.datasets[nodeSelected.dataset_id].splinter.tree_map.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: tree_node.graph_reference,\n        tree_node: tree_node\n      }\n      // I don't like the check on primary and derivative below since this depends on the data\n      // but it's coming as a feature request, so I guess it can stay there.\n      if (new_node.tree_node.id !== subject_key\n        && new_node.tree_node.id !== contributors_key\n        && new_node.tree_node.id !== protocols_key\n        && new_node.tree_node.basename !== 'primary'\n        && new_node.tree_node.basename !== 'derivative') {\n        links.pages.push({\n          id: singleNode,\n          title: tree_node.text,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.tree_node.id,\n      text: nodeSelected.tree_node.text\n    };\n  } else {\n    path = [];\n    var latestNodeVisited = nodeSelected;\n    while ( latestNodeVisited.graph_node.parent !== undefined ) {\n      path.push(latestNodeVisited.graph_node.parent.id);\n      latestNodeVisited = {\n        tree_node: undefined,\n        graph_node: latestNodeVisited.graph_node.parent\n      };\n    };\n\n    otherDetails = path.reverse().map( singleNode => {\n      const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: graph_node,\n        tree_node: graph_node.tree_reference\n      }\n      if (new_node.graph_node.id !== subject_key\n        && new_node.graph_node.id !== contributors_key\n        && new_node.graph_node.id !== protocols_key) {\n        links.pages.push({\n          id: singleNode,\n          title: graph_node.name,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.graph_node.id,\n      text: nodeSelected.graph_node.name\n    };\n  }\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\">\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      {/**{ nodeDetails.getHeader() }*/}\n      { otherDetails }\n      { nodeDetails.getDetail() }\n      <NodeFooter />\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        available_datasets : [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {}\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n            case Actions.SET_DATASET_LIST:\n                return {\n                    ...state,\n                    available_datasets: action.data.datasets\n                };\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        default:\n            return state;\n    }\n}\n","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        case Actions.SET_DATASET_LIST:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nexport default class FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback, errorCallback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            errorCallback && errorCallback(undefined);\n        });\n    }\n}\n","export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\n\nexport const RDF_TO_JSON_TYPES = [\n    {key: 'sparc:Subject', toTrim: 'subject'}\n];\n\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Group\": {\n        \"image\": \"./images/graph/group.svg\",\n        \"key\": \"Group\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"title\",\n                \"property\": \"title\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"description\",\n                \"property\": \"description\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDoi\",\n                \"property\": \"hasDoi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriApi\",\n                \"property\": \"hasUriApi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasProtocol\",\n                \"property\": \"hasProtocol\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"subjectSpecies\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"subjectStrain\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"age\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"biologicalSex\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ],\n        \"additional_properties\": [\n            {\n                \"label\": \"Age unit\",\n                \"property\": \"ageUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age value\",\n                \"property\": \"ageValue\",\n                \"path\": [ \"TEMP:hasAge\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Age base unit\",\n                \"property\": \"ageBaseUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age base value\",\n                \"property\": \"ageBaseValue\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Weight unit\",\n                \"property\": \"weightUnit\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Weight value\",\n                \"property\": \"weightValue\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"rdf:value\", \"@value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            }\n        ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from the subject\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"To be filled\"\n            },\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"RRID\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"RRID\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"NCBITaxon\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"NCBITaxon\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"PATO\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"PATO\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"UBERON\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"UBERON\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        group: {\n            \"type\": \"Group\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        },\n        RRID: {\n            \"type\": \"RRID\",\n        }\n    },\n    \"Class\": {\n        NCBITaxon: {\n            \"type\": \"NCBITaxon\",\n        },\n        PATO: {\n            \"type\": \"PATO\",\n        },\n        UBERON: {\n            \"type\": \"UBERON\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n"],"sourceRoot":""}
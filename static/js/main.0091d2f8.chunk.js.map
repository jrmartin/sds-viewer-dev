{"version":3,"sources":["constants.js","utils/graphModel.js","utils/Splinter.js","app/widgets.js","images/check.svg","components/FileUploader/UploadSubmit.js","images/tree/dataset.svg","images/tree/folder.svg","styles/constant.js","images/tree/file.svg","utils/nodesFactory.js","images/close.svg","redux/actions.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","images/upload-icon.svg","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","components/FileUploader/UploadDialogHeader.js","components/FileUploader/UploadDialog.js","images/toggle-right.svg","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","images/plus.svg","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","components/DatasetsListViewer/DatasetsListSplinter.js","components/DatasetsListViewer/DatasetsListDialog.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleChip.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/CollectionDetails.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/store.js","redux/initialState.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","utils/filesHandler.js"],"names":["IMPORT_TEXT","ADD_DATASET","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","maxFiles","detailsLabel","subject_key","protocols_key","contributors_key","GRAPH_SOURCE","TREE_SOURCE","type_key","RDF_TO_JSON_TYPES","key","toTrim","rdfTypes","typesModel","ORCID","awards","collection","contributor","dataset","sample","subject","RRID","Protocol","N3","require","ttl2jsonld","parse","Splinter","jsonFile","turtleFile","filterNode","node","basename","includes","this","factory","NodesFactory","types","jsonData","levelsMap","turtleData","tree","undefined","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","store","Store","rdf_to_json","rdf_to_json_map","Map","JSON","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","push","prefix","iri","String","forEach","Array","isArray","some","item","id","replace","set","a","processDataset","cleanLinks","self","link","find","l","source","target","b","neighbors","links","maxLevel","Object","keys","reduce","length","nodeSpace","furthestLeft","Math","ceil","positionsMap","levelsMapKeys","level","sort","attributes","relativePath","localeCompare","parent","type","reverse","n","index","filter","neighbor","xPos","radialVariant","hierarchyVariant","extractTurtle","processJSON","data","extractJson","initialiseNodesEdges","processTurtle","convertRDFToJson","create_graph","create_tree","mergeData","generateData","typeFound","unknown","owl","rdfType","NamedIndividual","ontology","sparc","split","pop","sparcType","graph_node","get","additional_properties","console","error","name","value","proxies","properties","tree_reference","children_counter","proxy","Util","isBlankNode","predicate","object","datatype","found","indexOf","update_node","dataset_node","ontology_node","get_type","typedNode","createNode","Unknown","delete","concat","temp_edges","map","subjects","protocols","contributors","temp","target_node","Subject","Person","source_node","Award","nodesToRemove","array","Sample","derivedFrom","specimenHasIdentifier","label","unshift","element","splice","img","src","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","children","hasFolderAboutIt","child","linkToNode","new_node","buildNodeFromJson","node_id","identifier","dataset_relative_path","size","size_bytes","mimetype","updated","timestamp_updated","status","tree_root","generateLeaf","build_leaf","from","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","Collection","File","path","findReference","reference","NodeViewWidget","WidgetStatus","ACTIVE","component","panelName","enableClose","enableRename","enableDrag","UploadSubmit","handleClose","enabledButton","Button","variant","fullWidth","disableElevation","color","onClick","disabled","CHECK","alt","vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","createImage","Image","extension","image","extractProperties","ttlTypes","property","type_property","json_prop","new_attribute","step","trimType","parseFloat","Contributor","firstName","middleName","lastName","namesArray","Dataset","typed_node","DELETE_DATASET","SET_DATASET_LIST","SELECT_INSTANCE","TRIGGER_ERROR","addDataset","deleteDataset","setDatasetsList","datasets","selectInstance","instance","triggerError","message","error_message","hot","module","URLSearchParams","window","location","search","dispatch","useDispatch","useState","openUploadDialog","setOpenUploadDialog","openDatasetsListDialog","setOpenDatasetsListDialog","useSelector","state","sdsState","_turtle","setTurtle","_json","setJson","initialised","setInitialised","loading","setLoading","turtle_url","json_url","splinter","fillDataset","getDatasetId","getGraph","getTree","_dataset","graph","addWidget","substring","config","graph_id","datasets_url","FileHandler","get_remote_file","url","theme","display","className","open","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","useStore","LayoutManager","setComponent","useEffect","myManager","getLayoutManagerInstance","model","visitNodes","setEventListener","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","active","ErrorDialog","onClose","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","progress","file","errors","Box","Typography","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","fileData","UploadProgress","onDelete","setProgress","upload","CANCEL","style","cursor","UploadError","DELETE","FilesUploading","files","fileWrapper","totalFiles","Uploader","handleDone","rdf","setRdf","json","onDrop","random","nodeRef","React","useRef","fileObjects","onChange","e","showPreviewsInDropzone","accFiles","acceptedFiles","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","setFiles","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","fileHandler","fileHandler2","callback","fileExt","curr","urls","base_url","shift","getJsonURL","CircularProgress","TabPanel","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","CLOSE","Tabs","Tab","UploadDialog","setValue","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","ToggleRight","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","nodeSelected","instance_selected","setNodes","setItems","widgets","layoutActions","globalId","matchingTitle","lowercaseSearch","toLowerCase","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","selected","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","justifyContent","Plus","datasetsButtonText","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","flexDirection","margin","order","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","background","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","marginBottom","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","bottom","zIndex","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","DatasetsListDialog","selectedIndex","setSelectedIndex","searchField","setSearchField","available_datasets","filteredDatasets","setFilteredDatasets","turtle","getFormattedListTex","reg","RegExp","str","DatasetsListSplinter","hasUriApi","lowerCaseLabel","summaryURL","repository_url","loadDatasets","PaperProps","DialogTitle","align","datasetsButtonSubtitleText","TextField","datasetsDialogSearchText","lowerCaseSearch","filtered","Paper","List","ListItem","ListItemText","primary","dangerouslySetInnerHTML","__html","Divider","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","TOP_DOWN","layout","maxNodesLevel","RADIAL_OUT","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","fill","GraphViewer","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","selectedLayout","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","cameraPosition","setCameraPosition","Boolean","handleLayoutClose","handleLayoutChange","handleNodeRightClick","ggv","centerAt","zoom","resetCamera","zoomToFit","center","setTimeout","d3Force","d3","strength","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","fillText","d2","warmupTicks","cooldownTicks","onEngineStop","linkColor","has","linkWidth","forceChargeStrength","collideSize","linkDirectionalParticles","linkCurvature","curve","fx","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","clear","add","nodeCanvasObject","nodeCanvasObjectMode","nodeVal","fy","onNodeHover","onNodeClick","handleNodeLeftClick","onNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Menu","anchorEl","keepMounted","MenuItem","zoomIn","zoomOut","NodeFooter","FILTER","PersonHeader","headingStyle","title","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","toString","DetailLinks","href","Link","LINKICON","SimpleChip","chips","Chip","FileDetails","latestUpdate","Date","DETAILS_LIST","isAbout","uri_human","Links","checksums","hex","cypher","hasUriHuman","PersonDetails","iterateSimpleValue","simpleValue","SampleDetails","hasAssignedGroup","hasDerivedInformationAsParticipant","hasDigitalArtifactThatIsAboutIt","participantInPerformanceOf","wasDerivedFromSubject","wasExtractedFromAnatomicalRegion","DatasetDetails","contactPerson","hasResponsiblePrincipalInvestigator","user","designation","USER","hasContactPerson","errorIndex","hasDatasetTemplateSchemaVersion","hasExperimentalModality","protocolEmploysTechnique","SubjectDetails","weightUnit","weightValue","hasAgeCategory","ageValue","ageUnit","ageBaseUnit","ageBaseValue","biologicalSex","subjectSpecies","subjectStrain","ProtocolDetails","protocolHasNumberOfSteps","CollectionDetails","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","getElementById","scrollIntoView","behavior","Breadcrumbs","DIVIDER","pages","page","componentMap","otherDetails","nodeDetails","singleNode","getDetail","latestNodeVisited","close","reducers","action","Actions","ids","slice","LayoutActions","SET_LAYOUT","createStore","all_tree","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","hostname","match","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","axios","progressCallback","reader","FileReader","onload","response","result","onprogress","lengthComputable","parseInt","loaded","total","readAsText","errorCallback","crossDomain","responseType","onDownloadProgress","progressEvent","catch","log"],"mappings":"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","file":"static/js/main.0091d2f8.chunk.js","sourcesContent":["export const IMPORT_TEXT = 'Load a new dataset';\nexport const ADD_DATASET = 'Load Dataset';\nexport const LIST_DATASETS = 'List Datasets';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['json', 'ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\n","export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\nexport const RDF_TO_JSON_TYPES = [\n    {key: 'sparc:Subject', toTrim: 'subject'}\n];\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": []\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": []\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": []\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasContactPerson\",\n                \"property\": \"hasContactPerson\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriApi\",\n                \"property\": \"hasUriApi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": []\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"subjectSpecies\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"subjectStrain\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"age\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"biologicalSex\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            }\n        ],\n        \"additional_properties\": [\n            {\n                \"label\": \"Age unit\",\n                \"property\": \"ageUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age value\",\n                \"property\": \"ageValue\",\n                \"path\": [ \"TEMP:hasAge\", \"rdf:value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Age base unit\",\n                \"property\": \"ageBaseUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age base value\",\n                \"property\": \"ageBaseValue\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"rdf:value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Weight unit\",\n                \"property\": \"weightUnit\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Weight value\",\n                \"property\": \"weightValue\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"rdf:value\", \"@value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            }\n        ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from the subject\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Unique instance identifier\"\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"To be filled\"\n            },\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"RRID\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"RRID\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"Specifier label\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        },\n        RRID: {\n            \"type\": \"RRID\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n","import NodesFactory from './nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel,\n    RDF_TO_JSON_TYPES\n} from './graphModel';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key\n} from '../constants';\n\nconst N3 = require('n3');\nconst ttl2jsonld = require('@frogcat/ttl2jsonld').parse;\n\nconst TMP_FILE = \".tmp\";\n\nconst SUBJECTS_LEVEL = 4;\nconst PROTOCOLS_LEVEL = 2, CRONTRIBUTORS_LEVEL = 2;\n\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n        this.rdf_to_json = undefined;\n        this.rdf_to_json_map = undefined;\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n        this.rdf_to_json_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    convertRDFToJson () {\n        this.rdf_to_json = ttl2jsonld(this.turtleFile);\n        this.rdf_to_json['@graph'].forEach(node => {\n            let found = false;\n            let toTrim = '';\n            if (Array.isArray(node['@type'])) {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'].includes(item.key)) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'] === item.key) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            if (found) {\n                let id = this.types[toTrim].iri.id + node['@id'].replace(toTrim + ':', '');\n                this.rdf_to_json_map.set(id, node);\n            }\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let cleanLinks = [];\n        let self = this;\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = self.forced_nodes.find( node => node.id === link.source );\n                const b = self.forced_nodes.find( node => node.id === link.target );\n                !a.neighbors && (a.neighbors = []);\n                !b.neighbors && (b.neighbors = []);\n                a.neighbors.push(b);\n                b.neighbors.push(a);\n\n                !a.links && (a.links = []);\n                !b.links && (b.links = []);\n                a.links.push(link);\n                b.links.push(link);\n\n                cleanLinks.push(link);\n            }\n        });\n\n        // Calculate level with max amount of nodes\n        let maxLevel = Object.keys(this.levelsMap).reduce((a, b) => this.levelsMap[a].length > this.levelsMap[b].length ? a : b);\n        // Space between nodes\n        let nodeSpace = 100;\n        // The furthestLeft a node can be\n        let furthestLeft = 0 - (Math.ceil(this.levelsMap[maxLevel].length)/2  * nodeSpace );\n        let positionsMap = {};\n\n        let levelsMapKeys = Object.keys(this.levelsMap);\n\n        levelsMapKeys.forEach( level => {\n            positionsMap[level] = furthestLeft + nodeSpace/2;\n            this.levelsMap[level].sort((a, b) => a.attributes?.relativePath?.localeCompare(b.attributes?.relativePath));\n        });\n\n        // Sort second and third level nodes\n        this.levelsMap[3]?.sort((a, b) => a.parent?.type?.localeCompare(b.parent?.type));\n        this.levelsMap[2]?.sort((a, b) => b.neighbors.length - a.neighbors.length );\n\n        // Start assigning the graph from the bottom up\n        let neighbors = 0;\n        levelsMapKeys.reverse().forEach( level => {\n            this.levelsMap[level].forEach ( (n, index) => {\n                neighbors = n?.neighbors?.filter(neighbor => { return neighbor.level > n.level });\n                if ( neighbors.length > 0 ) {\n                    n.xPos = neighbors[0].xPos + (neighbors[neighbors.length-1].xPos - neighbors[0].xPos) * .5;\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                } else {\n                    n.xPos = positionsMap[n.level] + nodeSpace;\n                    positionsMap[n.level] = n.xPos;\n                }\n            })\n        });\n\n        return {\n            nodes: this.forced_nodes,\n            links: cleanLinks,\n            radialVariant : this.levelsMap[maxLevel].length,\n            hierarchyVariant : maxLevel * 20\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.convertRDFToJson();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        const additional_properties = this.rdf_to_json_map.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0,\n                additional_properties: additional_properties,\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.subject.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                link.source = subject_key;\n                target_node.level = subjects.level + 1;\n                target_node.parent = subjects;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n\n    fix_links() {\n        let nodesToRemove = [];\n\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.Subject.key) {\n                if (node.attributes?.specimenHasIdentifier !== undefined) {\n                    let source = this.nodes.get(node.attributes.specimenHasIdentifier[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.specimenHasIdentifier[0] = source.attributes.label[0];\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.RRID.key) {\n                nodesToRemove.unshift(index);\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n\n        nodesToRemove.forEach(element => {\n            this.forced_nodes.splice(element, 1);\n        })\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root?.remote_id);\n        this.tree_parents_map?.delete(tree_root?.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node?.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node?.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose, enabledButton }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n      disabled={enabledButton}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: 8,\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: 'rgba(46, 58, 89, 0.4)',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n};\n\nexport default vars;\n","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)].image : rdfTypes.Unknown.image\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node.additional_properties) {\n        for (const json_prop of rdfTypes[node.type].additional_properties) {\n            let new_attribute = node.additional_properties;\n            for (const step of json_prop.path) {\n                if (new_attribute[step] !== undefined) {\n                    new_attribute = new_attribute[step];\n                } else {\n                    new_attribute = undefined;\n                    break;\n                }\n            }\n            if (new_attribute !== undefined) {\n                node.attributes[json_prop.property] = [];\n                if (json_prop.type === 'string') {\n                    node.attributes[json_prop.property].push(new_attribute.replace(json_prop.trimType, ''));\n                } else {\n                    node.attributes[json_prop.property].push(parseFloat(new_attribute));\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SET_DATASET_LIST = 'SET_DATASET_LIST'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const setDatasetsList = datasets => ({\n    type: SET_DATASET_LIST,\n    data: { datasets: datasets },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});","import './flexlayout.css';\nimport theme from './theme';\nimport { useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport Splinter from './utils/Splinter';\nimport MainLayout from './app/mainLayout';\nimport FileHandler from './utils/filesHandler';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport DatasetsListDialog from './components/DatasetsListViewer/DatasetsListDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { addDataset } from './redux/actions';\nimport { NodeViewWidget } from './app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nimport config from './config/app.json';\n\nconst App = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const id = queryParams.get('id');\n\n  const dispatch = useDispatch();\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  const [openDatasetsListDialog, setOpenDatasetsListDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n  const [_turtle, setTurtle] = useState(undefined);\n  const [_json, setJson] = useState(undefined);\n  const [initialised, setInitialised] = useState(false);\n  const [loading, setLoading] = useState(() => {\n    if (id && id !== \"\") {\n      return true;\n    }\n    return false;\n  });\n\n\n  let turtle_url = '';\n  let json_url = '';\n  let splinter = undefined;\n\n  const fillDataset = async () => {\n    splinter = new Splinter(_json, _turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(addWidget({\n      id: _dataset.id,\n      name: _dataset.id.substring(0,10) + \"... Graph\",\n      component: \"graphComponent\",\n      panelName: \"leftPanel\",\n      enableClose: true,\n      enableRename: true,\n      enableDrag: true,\n      status: WidgetStatus.ACTIVE,\n      config: {\n        graph_id: _dataset.id,\n        component: \"graphComponent\",\n      }\n    }));\n    dispatch(addWidget(NodeViewWidget));\n    setLoading(false);\n  }\n\n  if (id && id !== \"\" && _turtle === undefined) {\n    turtle_url = config.datasets_url + id + \"/LATEST/curation-export.ttl\";\n    const ttlHandler = new FileHandler();\n    ttlHandler.get_remote_file(turtle_url, (url, data) => {\n      if (data) {\n        setTurtle(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  }\n\n  if (id && id !== \"\" && _json === undefined) {\n    json_url = config.datasets_url + id + '/LATEST/path-metadata.json';    \n    const jsonHandler = new FileHandler();\n    jsonHandler.get_remote_file(json_url, (url, data) => {\n      if (data) {\n        setJson(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  }\n\n  if (_turtle && _json && !initialised) {\n    fillDataset();\n    setInitialised(true);\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" className='main-structure'>\n        <Sidebar\n          openUploadDialog={openUploadDialog}\n          setOpenUploadDialog={setOpenUploadDialog}\n          openDatasetsListDialog={openDatasetsListDialog}\n          setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n        />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                loading={loading}\n                openUploadDialog={openUploadDialog}\n                setOpenUploadDialog={setOpenUploadDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openUploadDialog}\n        handleClose={() => setOpenUploadDialog(false)}\n      />\n\n      <DatasetsListDialog\n        open={openDatasetsListDialog}\n        handleClose={() => setOpenDatasetsListDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    const event = new CustomEvent('nodeResized', {\n                        detail: node\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport Loader from '@metacell/geppetto-meta-ui/loader/Loader';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      { (props.loading)\n        ? <>\n          <Loader active={props.loading} />\n        </>\n        : <>\n            <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n            <Button\n              variant='outlined'\n              color='primary'\n              onClick={() => props.setOpenUploadDialog(true)}\n            >\n              + {IMPORT_TEXT}\n            </Button>\n        </>\n      }\n\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport FileHandler from '../../../utils/filesHandler';\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Done'\n        />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [rdf, setRdf] = useState(undefined);\n  const [json, setJson] = useState(undefined);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf({\n        ...rdf, data\n      })\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson({\n        ...json, data\n      })\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  }\n\n  const onDelete = (file)  => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf(undefined);\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson(undefined);\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  };\n\n  const onDrop = (files, accept = true) => {\n    for (const file of files) {\n      if (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1]) {\n        setRdf({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else if (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0]) {\n        setJson({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else {\n        console.error(\"something weird happened!\")\n      }\n    }\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  const files = [rdf, json].filter(item => item !== undefined);\n\n  return (\n    <>\n      {json !== undefined && rdf !== undefined \n        ? <> </>\n        : <DropzoneArea\n        fileObjects={files.map(item => item.file)}\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      /> }\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {json !== undefined && rdf !== undefined && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\nimport FileHandler from '../../utils/filesHandler';\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback, () => {});\n    fileHandler2.get_remote_file(getJsonURL(url), callback, () => {});\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/toggle-right.ce5f8e9f.svg\";","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport ToggleRight from '../../images/toggle-right.svg';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\n\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)}>\n          <img src={!expand ? ToggleRight : ToggleLeft} alt='Toggle' />\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if (nodeIds.length === 0) {\n      return;\n    }\n\n    if ((nodes.length !== nodeIds.length) && (nodes[0] === nodeIds[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n        selected={[nodeSelected?.tree_node?.id]}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '../../images/search.svg';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\n\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n        >\n          <img src={Search} alt='Search' />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","export default __webpack_public_path__ + \"static/media/plus.f6839d16.svg\";","import Plus from '../../images/plus.svg';\nimport { ADD_DATASET } from '../../constants';\nimport { Box, Button } from '@material-ui/core';\nimport config from \"./../../config/app.json\";\n\nconst SidebarFooter = (props) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\",\"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenUploadDialog(true)}\n      >\n        <img src={Plus} alt='Plus' />\n        {ADD_DATASET}\n      </Button>\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\", \"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenDatasetsListDialog(true)}\n      >\n        {config.text.datasetsButtonText}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openUploadDialog={props.openUploadDialog}\n        setOpenUploadDialog={props.setOpenUploadDialog}\n        openDatasetsListDialog={props.openDatasetsListDialog}\n        setOpenDatasetsListDialog={props.setOpenDatasetsListDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.25rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0 .375rem',\n          fontSize: '.75rem',\n          color: primaryTextColor,\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: lightBorderColor,\n        height: '2.375rem',\n        borderRadius: `${radius}px !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: lightBorderColor,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: inputTextColor,\n        '&::placeholder': {\n          color: inputTextColor,\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: secondaryColor,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              fontSize: 0,\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: lightBorderColor,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: noInstanceColor,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: noInstanceColor,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                color: placeHolderColor,\n                cursor: 'pointer',\n                lineHeight: 'normal',\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '0',\n          zIndex: '100',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import NodesFactory from './../../utils/nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel\n} from './../../utils/graphModel';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key\n} from './../../constants';\n\nconst N3 = require('n3');\n\nconst TMP_FILE = \".tmp\";\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.proxies_map = undefined;\n        this.forced_nodes = undefined;\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.proxies_map = new Map();\n    }\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        return {\n            nodes: this.forced_nodes\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.create_graph();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.subject.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                link.source = subject_key;\n                target_node.level = subjects.level + 1;\n                target_node.parent = subjects;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    fix_links() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n                value.proxies.every(proxy => {\n                    return true;\n                })\n            \n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Dialog,\n  DialogActions,\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  TextField,\n  DialogTitle,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { addDataset, setDatasetsList } from \"../../redux/actions\";\nimport Splinter from \"./../../utils/Splinter\";\nimport { NodeViewWidget } from \"../../app/widgets\";\nimport { addWidget } from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport DatasetsListSplinter from \"./DatasetsListSplinter\";\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport FileHandler from \"../../utils/filesHandler\";\nimport UploadSubmit from \"./../FileUploader/UploadSubmit\";\nimport CLOSE from '../../images/close.svg';\n\nimport config from \"./../../config/app.json\";\n\nconst DatasetsListDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(undefined);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const datasets = useSelector((state) => state.sdsState.available_datasets);\n  const [filteredDatasets, setFilteredDatasets] = React.useState(datasets);\n\n  let turtle_url = \"\";\n  let json_url = \"\";\n  let splinter = undefined;\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter,\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(\n      addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0, 10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        },\n      })\n    );\n    dispatch(addWidget(NodeViewWidget));\n  };\n\n  const handleDone = (dataset) => {\n    turtle_url =\n      config.datasets_url + dataset + \"/LATEST/curation-export.ttl\";\n    const fileHandler = new FileHandler();\n    fileHandler.get_remote_file(turtle_url, (url, turtleData) => {\n      if (turtleData) {\n        json_url =\n          config.datasets_url +\n          dataset +\n          \"/LATEST/path-metadata.json\";\n        fileHandler.get_remote_file(json_url, (url, data) => {\n          if (data) {\n            fillDataset(turtleData, data);\n            setFilteredDatasets(datasets);\n            setSelectedIndex(undefined);\n            handleClose();\n          }\n        });\n      }\n    });\n  };\n\n  const loadDatasets = () => {\n    const fileHandler = new FileHandler();\n    const callback = async (url, fileData) => {\n      let file = {\n        id: \"ttl\",\n        url: url,\n        data: fileData,\n        file: { name: \"ttl\", type: \"text/turtle\" },\n      };\n      const splinter = new DatasetsListSplinter(undefined, file.data);\n      let graph = await splinter.getGraph();\n      let datasets = graph.nodes.filter((node) => node?.attributes?.hasUriApi);\n      datasets.forEach( node => node.attributes ? node.attributes.lowerCaseLabel = node.attributes?.label?.[0]?.toLowerCase() : null );\n      dispatch(setDatasetsList(datasets));\n      setFilteredDatasets(datasets);\n    };\n    const summaryURL = config.repository_url + config.available_datasets;\n    fileHandler.get_remote_file(summaryURL, callback);\n  };\n\n  const handleChange = (event) => {\n    const lowerCaseSearch = event.target.value.toLowerCase();\n    let filtered = datasets.filter((dataset) =>\n      dataset.attributes.lowerCaseLabel.includes(lowerCaseSearch) || dataset.name.includes(lowerCaseSearch)\n    );\n    setSearchField(lowerCaseSearch);\n    setFilteredDatasets(filtered);\n  };\n\n  const closeDialog = () => {\n    setFilteredDatasets(datasets);\n    setSelectedIndex(undefined);\n    handleClose();\n  }\n\n  const getFormattedListTex = (label) => {\n    const reg = new RegExp(searchField, 'gi');\n\n    return searchField === undefined || searchField === \"\" \n      ? \n      label \n      :\n      label.replace(reg, function(str) {return '<b>'+str+'</b>'});\n  }\n\n  useEffect(() => {\n    open && datasets.length === 0 && loadDatasets();\n  });\n\n  return (\n    <Dialog \n      className=\"datasets_dialog\"\n      open={open}\n      handleClose={closeDialog}\n      PaperProps={{\n        style: {\n          width : '50rem'\n        },\n      }}\n    >\n      <DialogTitle align=\"center\">\n        <img\n          className=\"dialog_close\"\n          src={CLOSE}\n          onClick={handleClose}\n          alt=\"Close\"\n        />\n        <Typography variant=\"h3\">{config.text.datasetsButtonText}</Typography>\n        <Typography variant=\"subtitle1\">{config.text.datasetsButtonSubtitleText}</Typography>\n      </DialogTitle>\n      {datasets.length > 0 ? (\n        <>\n          <Box className=\"datasets_list\">\n            <TextField\n              fullWidth\n              disabled={datasets.length === 0}\n              label={config.text.datasetsDialogSearchText}\n              id=\"fullWidth\"\n              onChange={handleChange}\n            />\n          </Box>\n          {filteredDatasets.length > 0 ? (\n            <Box className=\"datasets_list datasets_list_results\" align=\"right\">\n              <Typography>{filteredDatasets.length} found</Typography>\n            </Box>\n          )\n          :\n          null\n          }\n          <Box className=\"datasets_list\">\n            <Paper className=\"datasets_dialog_list\">\n              <List className=\"datasets_list\">\n                {filteredDatasets.map((dataset) => (\n                  <>\n                    <ListItem\n                      className=\"dataset_item\"\n                      key={`item-${dataset.name}`}\n                      selected={selectedIndex === dataset.name}\n                      onClick={(event) =>\n                        handleListItemClick(event, dataset.name)\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            type=\"caption\"\n                            className=\"dataset_list_text\"\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                getFormattedListTex(dataset.attributes?.label[0])\n                            }}\n                          />\n                        }\n                      />\n                    </ListItem>\n                    <Divider />\n                  </>\n                ))}\n              </List>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <Box className=\"datasets_list\">\n          <CircularProgress className=\"datasets_loader\" />\n        </Box>\n      )}\n      <Box className=\"datasets_list\">\n        <UploadSubmit\n          handleClose={() => handleDone(selectedIndex)}\n          enabledButton={selectedIndex === undefined}\n        />\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default DatasetsListDialog;\n","import * as d3 from 'd3';\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState, useEffect } from 'react';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { selectInstance } from '../../redux/actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport { GRAPH_SOURCE } from '../../constants';\nimport { rdfTypes } from '../../utils/graphModel';\n\nconst NODE_FONT = '500 6px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 3000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n};\nconst TOP_DOWN = {\n  label : \"Top Down\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(TOP_DOWN);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n  const layout = useSelector(state => state.sdsState.layout);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n  };\n\n  const handleNodeLeftClick = (node, event) => {\n    dispatch(selectInstance({\n      dataset_id: props.graph_id,\n      graph_node: node.id,\n      tree_node: node?.tree_reference?.id,\n      source: GRAPH_SOURCE\n    }));\n  };\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n    let center =  graphRef?.current?.ggv?.current.centerAt();\n    setCameraPosition({ x :  center.x , y :  center.y });\n  };\n\n  const onEngineStop = () => {\n    resetCamera();\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout ( () => setLoading(false) , LOADING_TIME);\n  }, []);\n\n  useEffect(() => {\n    if (nodeSelected && nodeSelected?.id !== selectedNode?.id) {\n      let node = graphRef?.current?.props?.data?.nodes.find( item => item.id === nodeSelected.id && item.parent?.id === nodeSelected.parent?.id );\n      if (node) {\n        handleNodeRightClick(node, null);\n        setSelectedNode(node);\n        setHoverNode(node);\n      }\n    }\n  }, [nodeSelected]);\n\n  //Resume animation after component is updated, fixes issue with graphics going crazy.\n  useEffect(() => {\n    // selectedNode && handleNodeRightClick(selectedNode, null);\n    graphRef?.current?.ggv?.current.centerAt(cameraPosition.x, cameraPosition.y);\n    graphRef?.current?.ggv?.current.d3Force('collide', d3.forceCollide(4));\n    graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(-100))\n  },[layout]);\n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 10;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 4, size * 4];\n      const hoverRectPosition = [node.x - 20, node.y - 14];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1] + 2,\n      ];\n      const hoverRectBorderRadius = 2;\n      ctx.beginPath();\n\n      try {\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      } catch (error) {\n        const img = new Image();\n        img.src = rdfTypes.Unknown.image;\n        node.img = img;\n\n        // Add default icon if new icon wasn't found under images\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      }\n\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 10).concat('...');\n      }\n      const textProps = [nodeName, node.x + 2, textHoverPosition[1] + 4.5];\n      if (node === hoverNode || node?.id === selectedNode?.id || node?.id === nodeSelected?.id ) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0],\n          hoverRectDimensions[0] / 4,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n    },\n    [hoverNode]\n  );\n\n  let maxNodesLevel = selectedLayout.maxNodesLevel(window.datasets[props.graph_id].graph);\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={graphRef}\n        // Graph data with Nodes and Links to populate\n        data={window.datasets[props.graph_id].graph}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        warmupTicks={1000}\n        cooldownTicks={50}\n        onEngineStop={onEngineStop}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        forceChargeStrength={maxNodesLevel * -20}\n        collideSize={5}\n        linkDirectionalParticles={1}\n        linkCurvature={link => {\n          let curve = 0;\n\n          if ( selectedLayout.layout !== RADIAL_OUT.layout ){\n            if ( link.source.fx > link.target.fx ) {\n              curve = curve * -1;\n            }\n            else if ( link.source.fx === link.target.fx ) {\n              curve = 0;\n            } else if ( link.source.fx >= link.target.fx ) {\n              curve = -.05;\n            } else {\n              curve = .05;\n            }\n          }\n\n          return curve;\n        }}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => {\n          if ( selectedLayout.layout !== RADIAL_OUT.layout ){\n            node.fx = node.xPos;\n            node.fy = 100 * node.level;\n          }\n        }}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div className='graph-view_controls'>\n            <IconButton aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <FormatAlignCenterIcon />\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n            </Menu>\n            <IconButton onClick={(e) => zoomIn()}>\n              <ZoomInIcon />\n            </IconButton>\n            <IconButton onClick={(e) => zoomOut()}>\n              <ZoomOutIcon />\n            </IconButton>\n            <IconButton onClick={(e) => resetCamera()}>\n              <RefreshIcon />\n            </IconButton>\n            <LayersIcon />\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => <Chip key={`${item}_${index}`} label={item} /> ) }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.tree_node?.timestamp_updated !== undefined) {\n        latestUpdate = new Date(node?.tree_node?.timestamp_updated.split(\",\")[0]);\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Type',\n            value: node?.tree_node?.type\n        },\n        {\n            title: 'Mimetype',\n            value: node?.tree_node?.mimetype\n        },\n        {\n            title: 'Size Bytes',\n            value: node?.tree_node?.size_bytes\n        }\n    ];\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'File Details'} />\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleChip chips={node?.graph_node?.attributes?.isAbout} />\n                </Box>\n                { node?.tree_node?.uri_human !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.tree_node?.uri_human} title=\"Human URI\" />\n                       </Box>)\n                    : (<> </>)\n                }\n\n                { node?.tree_node?.checksums !== undefined\n                    ? (<>\n                            <SimpleLabelValue label={'Checksum'} value={node?.tree_node?.checksums[0].hex} />\n                            <SimpleLabelValue label={'Checksum Algorithm'} value={node?.tree_node?.checksums[0].cypher} />\n                        </>)\n                    : (<> </>)\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node?.graph_node?.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node?.graph_node?.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={value} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const simpleValue = (label, value) => {\n    if (value !== undefined) {\n        return (<SimpleLabelValue key={label} label={label} value={value} />);\n    } else {\n        return (<> </>);\n    }\n}","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label ? node.graph_node.attributes?.label[0] : \"\";\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined Sample name\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Sample Details'} />\n\n                { iterateSimpleValue('Assigned group', node?.graph_node?.attributes?.hasAssignedGroup) }\n                { <Box className=\"tab-content-row\">\n                    <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                  </Box>\n                }\n                { iterateSimpleValue('Digital artifact', node?.graph_node?.attributes?.hasDigitalArtifactThatIsAboutIt) }\n                { iterateSimpleValue('Participant in performance of', node?.graph_node?.attributes?.participantInPerformanceOf) }\n                { iterateSimpleValue('Derived from subject', node?.graph_node?.attributes?.wasDerivedFromSubject) }\n                { iterateSimpleValue('Extracted from Anatomical region', node?.graph_node?.attributes?.wasExtractedFromAnatomicalRegion) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleChip from './Views/SimpleChip';\nimport USER from \"../../../images/user.svg\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n    const nodes = window.datasets[node.dataset_id].splinter.nodes;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.graph_node?.id + detailsLabel;\n        title = node?.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node?.tree_node?.basename;\n        idDetails = node?.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.graph_node?.id + detailsLabel;\n        title = node.graph_node?.attributes?.label[0];\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.graph_node?.attributes?.latestUpdate !== undefined) {\n        latestUpdate = new Date(node.graph_node.attributes?.latestUpdate[0])\n    }\n\n    let contactPerson = [];\n    if (node.graph_node.attributes?.hasResponsiblePrincipalInvestigator !== undefined) {\n        node.graph_node.attributes?.hasResponsiblePrincipalInvestigator.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Principal Investigator',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    if (node.graph_node.attributes?.hasContactPerson !== undefined) {\n        node.graph_node.attributes?.hasContactPerson.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Contributor',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Error Index',\n            value: node.graph_node.attributes?.errorIndex\n        },\n        {\n            title: 'Template Schema Version',\n            value: node.graph_node.attributes?.hasDatasetTemplateSchemaVersion\n        },\n        {\n            title: 'Experiment Modality',\n            value: node.graph_node.attributes?.hasExperimentalModality\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Dataset Details'} />\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleChip chips={node.graph_node.attributes?.isAbout} />\n                </Box>\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node.graph_node.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node.graph_node.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                            <Links key={`detail_protocol_technique`} href={node.graph_node.attributes?.protocolEmploysTechnique} title=\"Protocol Technique\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue, simpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node.tree_node && node.graph_node) {\n        idDetails = node?.tree_node?.id + detailsLabel;\n        title = node?.tree_node?.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node?.graph_node?.id + detailsLabel;\n        title = node.graph_node.name;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Weight Unit',\n            value: node.graph_node.attributes?.weightUnit\n        },\n        {\n            title: 'Weight Value',\n            value: node.graph_node.attributes?.weightValue\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Subject Details'} />\n\n                { iterateSimpleValue('Age Category', node?.graph_node?.attributes?.hasAgeCategory) }\n                { (node.graph_node.attributes?.ageValue && node.graph_node.attributes?.ageUnit)\n                    ? simpleValue('Age', node.graph_node.attributes?.ageValue + ' ' + node.graph_node.attributes?.ageUnit)\n                    : (node.graph_node.attributes?.ageBaseUnit && node.graph_node.attributes?.ageBaseValue)\n                        ? simpleValue('Age', node.graph_node.attributes?.ageBaseValue + ' ' + node.graph_node.attributes?.ageBaseUnit)\n                        : <> </>\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => {\n                                if (item.value !== undefined) {\n                                    return (<ListItemText key={`detail_list_${index}`}>\n                                                <Typography component=\"label\">{item?.title}</Typography>\n                                                <Typography>{item?.value}</Typography>\n                                        </ListItemText>);\n                                } else {\n                                    return <></>\n                                }\n                            })\n                        }\n                    </List>\n                </Box>\n\n                { iterateSimpleValue('Biological Sex', node?.graph_node?.attributes?.biologicalSex) }\n                {\n                    <Box className=\"tab-content-row\">\n                        <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                    </Box>\n                }\n                {\n                    <Box className=\"tab-content-row\">\n                        <Links href={node?.graph_node?.attributes?.participantInPerformanceOf} title=\"Participant in performance of\" />\n                    </Box>\n                }\n                { iterateSimpleValue('Specimen identifier', node?.graph_node?.attributes?.specimenHasIdentifier) }\n\n                { node.graph_node?.attributes?.subjectSpecies && node.graph_node?.attributes?.subjectSpecies.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Species</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectSpecies} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.subjectStrain && node.graph_node?.attributes?.subjectStrain.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Strains</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectStrain} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.hasAssignedGroup && node.graph_node?.attributes?.hasAssignedGroup.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Assigned Groups</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.hasAssignedGroup} />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst CollectionDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Collection Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default CollectionDetails;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport CollectionDetails from './Details/CollectionDetails';\n\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <CollectionDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <CollectionDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        separator={<img src={DIVIDER} alt=\"DIVIDER\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography variant=\"subtitle2\" onClick={() => {goToLink(links?.current.id)}} className=\"breadcrumb_selected\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport { useSelector } from 'react-redux'\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\n\nconst NodeDetailView = (props) => {\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  if (nodeSelected.tree_node !== undefined && nodeSelected.tree_node !== null) {\n    path = [...nodeSelected.tree_node.path]\n    path.shift();\n    otherDetails = path.reverse().map( singleNode => {\n      const tree_node = window.datasets[nodeSelected.dataset_id].splinter.tree_map.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: tree_node.graph_reference,\n        tree_node: tree_node\n      }\n      // I don't like the check on primary and derivative below since this depends on the data\n      // but it's coming as a feature request, so I guess it can stay there.\n      if (new_node.tree_node.id !== subject_key\n        && new_node.tree_node.id !== contributors_key\n        && new_node.tree_node.id !== protocols_key\n        && new_node.tree_node.basename !== 'primary'\n        && new_node.tree_node.basename !== 'derivative') {\n        links.pages.push({\n          id: singleNode,\n          title: tree_node.text,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.tree_node.id,\n      text: nodeSelected.tree_node.text\n    };\n  } else {\n    path = [];\n    var latestNodeVisited = nodeSelected;\n    while ( latestNodeVisited.graph_node.parent !== undefined ) {\n      path.push(latestNodeVisited.graph_node.parent.id);\n      latestNodeVisited = {\n        tree_node: undefined,\n        graph_node: latestNodeVisited.graph_node.parent\n      };\n    };\n\n    otherDetails = path.reverse().map( singleNode => {\n      const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: graph_node,\n        tree_node: graph_node.tree_reference\n      }\n      if (new_node.graph_node.id !== subject_key\n        && new_node.graph_node.id !== contributors_key\n        && new_node.graph_node.id !== protocols_key) {\n        links.pages.push({\n          id: singleNode,\n          title: graph_node.name,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.graph_node.id,\n      text: nodeSelected.graph_node.name\n    };\n  }\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\">\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      {/**{ nodeDetails.getHeader() }*/}\n      { otherDetails }\n      { nodeDetails.getDetail() }\n      <NodeFooter />\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        available_datasets : [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {}\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n            case Actions.SET_DATASET_LIST:\n                return {\n                    ...state,\n                    available_datasets: action.data.datasets\n                };\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        default:\n            return state;\n    }\n}\n","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        case Actions.SET_DATASET_LIST:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nexport default class FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback, errorCallback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            errorCallback && errorCallback(undefined);\n        });\n    }\n}\n"],"sourceRoot":""}
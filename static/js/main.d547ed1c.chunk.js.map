{"version":3,"sources":["constants.js","utils/Splinter.js","app/widgets.js","images/check.svg","components/FileUploader/UploadSubmit.js","images/tree/dataset.svg","images/tree/folder.svg","images/tree/file.svg","utils/nodesFactory.js","styles/constant.js","images/close.svg","components/DatasetsListViewer/DatasetsListSplinter.js","redux/actions.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","components/DatasetsListViewer/DatasetsListDialog.js","images/upload-icon.svg","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","components/FileUploader/UploadDialogHeader.js","components/FileUploader/UploadDialog.js","images/toggle-right.svg","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","images/plus.svg","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleLinkedChip.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/Views/SimpleChip.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/GroupDetails.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/store.js","redux/initialState.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","utils/filesHandler.js","utils/graphModel.js"],"names":["IMPORT_TEXT","ADD_DATASET","SPARC_DATASETS","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","maxFiles","detailsLabel","subject_key","protocols_key","contributors_key","GRAPH_SOURCE","TREE_SOURCE","N3","require","ttl2jsonld","parse","Splinter","jsonFile","turtleFile","filterNode","node","basename","includes","this","factory","NodesFactory","types","jsonData","levelsMap","turtleData","tree","undefined","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","store","Store","rdf_to_json","rdf_to_json_map","Map","tree_parents_map2","JSON","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","push","prefix","iri","String","forEach","toTrim","Array","isArray","RDF_TO_JSON_TYPES","some","item","key","id","replace","set","n","previousLevel","map","level","updateLevels","neighbors","processDataset","filteredNodes","filter","type","rdfTypes","UBERON","Collection","children_counter","cleanLinks","link","find","l","source","target","a","b","links","maxLevel","Object","keys","reduce","length","furthestLeft","Math","ceil","positionsMap","levelsMapKeys","nodeSpace","sort","attributes","relativePath","localeCompare","i","aSubject","parent","bSubject","console","log","reverse","index","neighbor","SUBJECTS_LEVEL","max","Number","MIN_SAFE_INTEGER","min","MAX_SAFE_INTEGER","xPos","hierarchyVariant","extractTurtle","processJSON","data","extractJson","initialiseNodesEdges","processTurtle","convertRDFToJson","create_graph","create_tree","mergeData","generateData","typeFound","typesModel","unknown","owl","rdfType","NamedIndividual","Class","ontology","sparc","split","pop","sparcType","graph_node","get","additional_properties","error","name","value","proxies","properties","tree_reference","collapsed","childLinks","proxy","Util","isBlankNode","subject","predicate","type_key","object","datatype","found","indexOf","update_node","dataset_node","ontology_node","get_type","typedNode","createNode","Unknown","delete","dataset","concat","updatedAbout","isAbout","NCBITaxon","PATO","label","updateTechniques","protocolEmploysTechnique","temp_edges","target_node","groups","config","order","category","group","groupID","groupNode","nodeF","subjects","protocols","Protocol","contributors","contributor","temp","Subject","organise_subjects","Person","Sample","derivedFrom","source_node","chidLinks","Award","nodesToRemove","array","specimenHasIdentifier","subjectSpecies","biologicalSex","hasDerivedInformationAsParticipant","participantInPerformanceOf","hasUriHuman","File","uri_human","from","RRID","unshift","element","splice","img","src","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","children","hasFolderAboutIt","folder","jsonNode","newNode","buildFolder","folderChildren","child","linkToNode","child_node","tempChildren","copiedItem","newName","dataset_relative_path","new_node","buildNodeFromJson","node_id","identifier","size","size_bytes","mimetype","updated","timestamp_updated","status","tree_root","generateLeaf","build_leaf","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","path","findReference","reference","NodeViewWidget","WidgetStatus","ACTIVE","component","panelName","enableClose","enableRename","enableDrag","UploadSubmit","handleClose","enabledButton","Button","variant","fullWidth","disableElevation","color","onClick","disabled","CHECK","alt","createImage","Image","extension","image","extractProperties","ttlTypes","property","type_property","json_prop","new_attribute","step","innerPath","trimType","parseFloat","Contributor","firstName","middleName","lastName","namesArray","Dataset","typed_node","vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","DELETE_DATASET","SET_DATASET_LIST","SELECT_INSTANCE","TRIGGER_ERROR","addDataset","deleteDataset","setDatasetsList","datasets","selectInstance","instance","triggerError","message","error_message","hot","module","queryParams","URLSearchParams","window","location","search","datasetID","doi","dispatch","useDispatch","useState","openUploadDialog","setOpenUploadDialog","openDatasetsListDialog","setOpenDatasetsListDialog","useSelector","state","sdsState","doiMatch","initialised","setInitialised","loading","setLoading","turtle_url","json_url","splinter","fillDataset","turtle","json","getDatasetId","getGraph","getTree","_dataset","graph","addWidget","substring","graph_id","loadFiles","datasets_url","FileHandler","get_remote_file","url","loadDatsetFromDOI","fileData","file","DatasetsListSplinter","hasDoi","match","useEffect","fileHandler","summaryURL","repository_url","available_datasets","theme","display","className","open","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","useStore","LayoutManager","setComponent","myManager","getLayoutManagerInstance","model","visitNodes","setEventListener","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","active","ErrorDialog","onClose","DatasetsListDialog","React","selectedIndex","setSelectedIndex","searchField","setSearchField","filteredDatasets","setFilteredDatasets","handleDone","getFormattedListTex","reg","RegExp","str","callback","hasUriApi","lowerCaseLabel","toLowerCase","loadDatasets","PaperProps","style","align","CLOSE","datasetsButtonText","datasetsButtonSubtitleText","datasetsDialogSearchText","onChange","lowerCaseSearch","filtered","selected","primary","dangerouslySetInnerHTML","__html","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","progress","errors","Box","Typography","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","UploadProgress","onDelete","setProgress","upload","CANCEL","cursor","UploadError","DELETE","FilesUploading","files","fileWrapper","totalFiles","Uploader","rdf","setRdf","setJson","onDrop","random","nodeRef","useRef","fileObjects","e","showPreviewsInDropzone","accFiles","acceptedFiles","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","setFiles","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","fileHandler2","fileExt","curr","urls","base_url","shift","getJsonURL","CircularProgress","TabPanel","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","Tabs","Tab","UploadDialog","setValue","_json","_turtle","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","ToggleRight","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","nodeSelected","instance_selected","setNodes","setItems","widgets","layoutActions","globalId","matchingTitle","lowercaseSearch","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","justifyContent","Plus","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","flexDirection","margin","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","background","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","marginBottom","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","bottom","zIndex","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","collapsedFolder","TOP_DOWN","layout","maxNodesLevel","RADIAL_OUT","radialVariant","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","fill","GraphViewer","getPrunedTree","nodesById","fromEntries","visibleNodes","visibleLinks","traverseTree","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","selectedLayout","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","setCameraPosition","Boolean","setData","setCollapsed","handleLayoutClose","handleLayoutChange","setForce","resetCamera","handleNodeRightClick","ggv","centerAt","zoom","zoomToFit","center","force","d3Force","distance","strength","d3","sqrt","setTimeout","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","fillText","collapsedNodes","d2","onEngineStop","cooldownTime","linkColor","has","linkWidth","dagLevelDistance","linkDirectionalParticles","forceRadial","warmupTicks","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","clear","add","nodeCanvasObject","nodeCanvasObjectMode","nodeVal","fx","fy","nodeRelSize","onNodeHover","onNodeClick","Group","updatedData","handleNodeLeftClick","onNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Tooltip","title","Menu","anchorEl","keepMounted","MenuItem","zoomIn","zoomOut","expandAll","NodeFooter","FILTER","PersonHeader","headingStyle","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","toString","DetailLinks","href","Link","LINKICON","SimpleChip","chips","Chip","FileDetails","latestUpdate","Date","DETAILS_LIST","Links","SimpleLinkedChip","checksums","hex","cypher","List","ListItemText","PersonDetails","iterateSimpleValue","simpleValue","SampleDetails","hasAssignedGroup","hasDigitalArtifactThatIsAboutIt","wasExtractedFromAnatomicalRegion","DatasetDetails","description","contactPerson","hasResponsiblePrincipalInvestigator","user","designation","USER","hasContactPerson","errorIndex","hasDatasetTemplateSchemaVersion","hasExperimentalModality","SubjectDetails","weightUnit","weightValue","hasAgeCategory","ageValue","ageUnit","ageBaseUnit","ageBaseValue","subjectStrain","ProtocolDetails","protocolHasNumberOfSteps","GroupDetails","tag","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","getElementById","scrollIntoView","behavior","Breadcrumbs","DIVIDER","pages","page","componentMap","otherDetails","nodeDetails","singleNode","getDetail","latestNodeVisited","close","reducers","action","Actions","ids","slice","LayoutActions","SET_LAYOUT","createStore","all_tree","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","hostname","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","axios","progressCallback","reader","FileReader","onload","response","result","onprogress","lengthComputable","parseInt","loaded","total","readAsText","errorCallback","crossDomain","responseType","onDownloadProgress","progressEvent","catch","ORCID","awards","collection","sample"],"mappings":"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","file":"static/js/main.d547ed1c.chunk.js","sourcesContent":["export const IMPORT_TEXT = 'Load a new dataset';\nexport const ADD_DATASET = 'Load Dataset';\nexport const LIST_DATASETS = 'List Datasets';\nexport const SPARC_DATASETS = 'SPARC Datasets';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['json', 'ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\n","import NodesFactory from './nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel,\n    RDF_TO_JSON_TYPES\n} from './graphModel';\n\nimport config from './../config/app.json';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key\n} from '../constants';\n\nconst N3 = require('n3');\nconst ttl2jsonld = require('@frogcat/ttl2jsonld').parse;\n\nconst TMP_FILE = \".tmp\";\n\nconst SUBJECTS_LEVEL = 2;\nconst PROTOCOLS_LEVEL = 2, CRONTRIBUTORS_LEVEL = 2;\n\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n        this.rdf_to_json = undefined;\n        this.rdf_to_json_map = undefined;\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n        this.tree_parents_map2 = new Map();\n        this.rdf_to_json_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    convertRDFToJson () {\n        this.rdf_to_json = ttl2jsonld(this.turtleFile);\n        this.rdf_to_json['@graph'].forEach(node => {\n            let found = false;\n            let toTrim = '';\n            if (Array.isArray(node['@type'])) {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'].includes(item.key)) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'] === item.key) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            if (found) {\n                let id = this.types[toTrim].iri.id + node['@id'].replace(toTrim + ':', '');\n                this.rdf_to_json_map.set(id, node);\n            }\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n    updateLevels(n, previousLevel) {\n        n?.map( node => {\n            if ( node?.level > previousLevel ){\n                this.updateLevels(node?.neighbors, node.level);\n                node.level = node.level + 1;\n            }\n        });\n\n        return;\n    }\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let filteredNodes = this.forced_nodes?.filter( n => n.type !== rdfTypes.UBERON.key && !(n.type === rdfTypes.Collection.key && n.children_counter === 0));\n        let cleanLinks = [];\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = filteredNodes.find( node => node.id === link.source );\n                const b = filteredNodes.find( node => node.id === link.target );\n                if ( a && b ) {\n                    !a.neighbors && (a.neighbors = []);\n                    !b.neighbors && (b.neighbors = []);\n                    a.neighbors.push(b);\n                    b.neighbors.push(a);\n\n                    !a.links && (a.links = []);\n                    !b.links && (b.links = []);\n                    a.links.push(link);\n                    b.links.push(link);\n\n                    cleanLinks.push(link);\n                }\n            }\n        });\n\n        // Calculate level with max amount of nodes\n        let maxLevel = Object.keys(this.levelsMap).reduce((a, b) => this.levelsMap[a].length > this.levelsMap[b].length ? a : b);\n        // Space between nodes\n        let nodeSpace = 50;\n        // The furthestLeft a node can be\n        let furthestLeft = 0 - (Math.ceil(this.levelsMap[maxLevel].length)/2  * nodeSpace );\n        let positionsMap = {};\n\n        let levelsMapKeys = Object.keys(this.levelsMap);\n\n        levelsMapKeys.forEach( level => {\n            positionsMap[level] = furthestLeft + nodeSpace/2;\n            this.levelsMap[level].sort((a, b) => a.attributes?.relativePath?.localeCompare(b.attributes?.relativePath));\n        });\n\n        for ( let i = SUBJECTS_LEVEL; i <= maxLevel ; i++ ){\n            this.levelsMap[i]?.sort( (a, b) => { \n                let aSubject = a\n                while (aSubject?.type !== \"Subject\" && aSubject){\n                    aSubject = aSubject?.parent;\n                }\n                let bSubject = b;\n                while (bSubject?.type !== \"Subject\" && bSubject){\n                    bSubject = bSubject?.parent;\n                }\n                return aSubject?.id > bSubject?.id ? 1 : -1;\n            });            \n        }\n        console.log(\"Levels map \", this.levelsMap);\n\n        // Start assigning the graph from the bottom up\n        let neighbors = 0;\n        levelsMapKeys.reverse().forEach( level => {\n            this.levelsMap[level].forEach ( (n, index) => {\n                neighbors = n?.neighbors?.filter(neighbor => { return neighbor.level > n.level });\n                // FIXME : Fix this, beter way to create positioning\n                if ( n.level === SUBJECTS_LEVEL + 1 ){\n                    this.updateLevels(n.neighbors, n.level);\n                    if ( neighbors?.length > 0 ) n.level = n.level + 1;\n                }\n                if ( neighbors?.length > 0 ) {\n                    let max = Number.MIN_SAFE_INTEGER, min = Number.MAX_SAFE_INTEGER;\n                    neighbors.forEach( neighbor => {\n                        if ( neighbor.xPos > max ) { max = neighbor.xPos };\n                        if ( neighbor.xPos < min ) { min = neighbor.xPos };\n                    });\n                    n.xPos = min === max ? min : min + (max - min) * .5;\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                } else {\n                    n.xPos = positionsMap[n.level] + nodeSpace;\n                    positionsMap[n.level] = n.xPos;\n                }\n            })\n        });\n\n        console.log(this.levelsMap);\n\n        return {\n            nodes: filteredNodes,\n            links: cleanLinks,\n            levelsMap : this.levelsMap,\n            hierarchyVariant : maxLevel * 20\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.convertRDFToJson();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } if (type.type === this.types.owl.iri.id + \"Class\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.Class[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.Class[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        const additional_properties = this.rdf_to_json_map.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0,\n                collapsed: false,\n                childLinks : [],\n                additional_properties: additional_properties,\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        let updatedAbout = [];\n        dataset_node?.attributes?.isAbout?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updatedAbout.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updatedAbout.push({\"value\": a});\n                }\n            } else {\n                updatedAbout.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.isAbout = updatedAbout;\n\n        let updateTechniques = [];\n        dataset_node.attributes.protocolEmploysTechnique?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updateTechniques.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updateTechniques.push({\"value\": a});\n                }\n            } else {\n                updateTechniques.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.protocolEmploysTechnique = updateTechniques;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges?.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_subjects(target_node, link, groups){\n        let parent = this.nodes.get(subject_key);\n        config.groups.order.forEach( category => {\n            let group = Object.keys(category)[0];\n            if ( target_node.attributes[group]?.[0] ) {\n                let source = this.nodes.get(target_node.attributes[group]?.[0]);\n                if ( source !== undefined ) {\n                    target_node.attributes[group][0] = source.attributes.label[0];\n                }\n                \n                const groupID = parent.id + \"_\" + target_node.attributes[group]?.[0].replace(/\\s/g, \"\");\n\n                if ( this.nodes.get(groupID) === undefined ) {\n                    const groupNode = {\n                        id: groupID,\n                        name: target_node.attributes[group]?.[0],\n                        type: typesModel.NamedIndividual.group.type,\n                        properties: category[group],\n                        parent : parent,\n                        proxies: [],\n                        level: parent.level + 1,\n                        tree_reference: null,\n                        children_counter: 0,\n                        collapsed : false,\n                        childLinks : []\n                    };\n                    let nodeF = this.factory.createNode(groupNode);\n                    this.nodes.set(groupID, nodeF);\n                    groups.push({\n                        source: parent.id,\n                        target: nodeF.id\n                    });\n                    parent = groupNode;\n                } else {\n                    parent = this.nodes.get(groupID);\n                }\n            } else {\n                console.error(\"The group node already exists!\", group);\n            }\n        });\n        link.source = parent.id;\n        target_node.level = parent.level + 1;\n        target_node.parent = parent;\n        target_node.childLinks = [];\n        target_node.collapsed = target_node.parent.type === typesModel.NamedIndividual.subject.type;\n        this.nodes.set(target_node.id, target_node);\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.group.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        let groups = [];\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                this.organise_subjects(target_node, link, groups);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && target_node.type === rdfTypes.Sample.key) {\n                link.source = target_node.attributes.derivedFrom[0];\n                target_node.level = subjects.level + 2;\n                target_node.parent = this.nodes.get(target_node.attributes.derivedFrom[0]);\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.chidLinks = [];\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n\n        this.forced_edges = this.forced_edges.concat(groups);\n    }\n\n\n    fix_links() {\n        let nodesToRemove = [];\n\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.Subject.key) {\n                if (node.attributes?.specimenHasIdentifier !== undefined) {\n                    let source = this.nodes.get(node.attributes.specimenHasIdentifier[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.specimenHasIdentifier[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.subjectSpecies !== undefined) {\n                    let source = this.nodes.get(node.attributes.subjectSpecies[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.subjectSpecies[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.biologicalSex !== undefined) {\n                    let source = this.nodes.get(node.attributes.biologicalSex[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.biologicalSex[0] = source.attributes.label[0];\n                    }\n                }\n\n                if (node.attributes?.hasDerivedInformationAsParticipant !== undefined && node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.hasDerivedInformationAsParticipant[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n\n                if (node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.participantInPerformanceOf[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.File.key) {\n                if (node?.tree_reference?.uri_human  !== undefined) {\n                    node.tree_reference.uri_human = Array.from(this.nodes)[0][1].attributes.hasUriHuman[0];\n                }\n            }\n\n            if (node.type === rdfTypes.RRID.key || node.type === rdfTypes.NCBITaxon?.key || node.type === rdfTypes.PATO?.key) {\n                nodesToRemove.unshift(index);\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n\n        nodesToRemove.forEach(element => {\n            this.forced_nodes.splice(element, 1);\n        })\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                value.attributes.hasFolderAboutIt.forEach(folder => {\n                    let jsonNode = this.tree_map.get(folder);\n                    let newNode = this.buildFolder(jsonNode, value);\n                    let folderChildren = this.tree_parents_map2.get(newNode.parent_id)?.map(child => {\n                        child.parent_id = newNode.uri_api\n                        return child;\n                    });\n\n                    if (!this.filterNode(newNode) && (this.nodes.get(newNode.remote_id)) === undefined) {\n                        this.linkToNode(newNode, value);\n                    }\n\n                    if (this.tree_parents_map2.get(newNode.uri_api) === undefined) {\n                        this.tree_parents_map2.set(newNode.uri_api, folderChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        folderChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    } else {\n                        let tempChildren = folderChildren === undefined ? [...this.tree_parents_map2.get(newNode.uri_api)] : [...this.tree_parents_map2.get(newNode.uri_api), ...folderChildren];;\n                        this.tree_parents_map2.set(newNode.uri_api, tempChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        tempChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    buildFolder(item) {\n        let copiedItem = {...item};\n        let newName = copiedItem.dataset_relative_path.split('/')[0];\n        copiedItem.parent_id = copiedItem.remote_id;\n        copiedItem.remote_id = copiedItem.basename + '_' + newName;\n        copiedItem.uri_api = copiedItem.remote_id;\n        copiedItem.basename = newName;\n        // copiedItem.basename = copiedItem.remote_id;\n        return copiedItem;\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        new_node.childLinks = [];\n        new_node.collapsed = new_node.parent.type === typesModel.NamedIndividual.subject.type\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map2.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root?.remote_id);\n        this.tree_parents_map?.delete(tree_root?.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node?.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node?.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose, enabledButton }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n      disabled={enabledButton}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)].image : rdfTypes.Unknown.image\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node.additional_properties) {\n        for (const json_prop of rdfTypes[node.type].additional_properties) {\n            let new_attribute = node.additional_properties;\n            for (const step of json_prop.path) {\n                if (new_attribute[step] !== undefined) {\n                    new_attribute = new_attribute[step];\n                } else {\n                    new_attribute = undefined;\n                    break;\n                }\n            }\n            if (new_attribute !== undefined) {\n                if (typeof new_attribute === 'object' && new_attribute !== null && new_attribute[json_prop.innerPath]) {\n                    new_attribute = new_attribute[json_prop.innerPath];\n                }\n\n                node.attributes[json_prop.property] = [];\n                if (json_prop.type === 'string') {\n                    node.attributes[json_prop.property].push(new_attribute.replace(json_prop.trimType, ''));\n                } else {\n                    node.attributes[json_prop.property].push(parseFloat(new_attribute));\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: 8,\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: 'rgba(46, 58, 89, 0.4)',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n};\n\nexport default vars;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","import NodesFactory from './../../utils/nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel\n} from './../../utils/graphModel';\n\nconst N3 = require('n3');\n\nconst TMP_FILE = \".tmp\";\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.proxies_map = undefined;\n        this.forced_nodes = undefined;\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.proxies_map = new Map();\n    }\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        return {\n            nodes: this.forced_nodes\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.create_graph();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if (target_node.type === rdfTypes.Dataset.key){\n                return true;\n            }\n            return false;\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n                value.proxies.every(proxy => {\n                    return true;\n                })\n            \n            return value;\n        })\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SET_DATASET_LIST = 'SET_DATASET_LIST'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const setDatasetsList = datasets => ({\n    type: SET_DATASET_LIST,\n    data: { datasets: datasets },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});","import './flexlayout.css';\nimport theme from './theme';\nimport { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport Splinter from './utils/Splinter';\nimport MainLayout from './app/mainLayout';\nimport FileHandler from './utils/filesHandler';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport DatasetsListDialog from './components/DatasetsListViewer/DatasetsListDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { addDataset } from './redux/actions';\nimport { NodeViewWidget } from './app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport DatasetsListSplinter from \"./components/DatasetsListViewer/DatasetsListSplinter\";\n\nimport config from './config/app.json';\n\nconst App = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const datasetID = queryParams.get('id');\n  const doi = queryParams.get('doi');\n\n  const dispatch = useDispatch();\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  const [openDatasetsListDialog, setOpenDatasetsListDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n  const [_turtle, setTurtle] = useState(undefined);\n  const [_json, setJson] = useState(undefined);\n  const [doiMatch, setDoiMatch] = useState(true);\n  const [initialised, setInitialised] = useState(false);\n  const [loading, setLoading] = useState(() => {\n    if (datasetID && datasetID !== \"\") {\n      return true;\n    }\n    if (doi && doi !== \"\") {\n      return true;\n    }\n    return false;\n  });\n\n\n  let turtle_url = '';\n  let json_url = '';\n  let splinter = undefined;\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter\n    };\n    console.log(\"Graph \", _dataset.graph);\n\n    dispatch(addDataset(_dataset));\n    dispatch(addWidget({\n      id: _dataset.id,\n      name: _dataset.id.substring(0,10) + \"... Graph\",\n      component: \"graphComponent\",\n      panelName: \"leftPanel\",\n      enableClose: true,\n      enableRename: true,\n      enableDrag: true,\n      status: WidgetStatus.ACTIVE,\n      config: {\n        graph_id: _dataset.id,\n        component: \"graphComponent\",\n      }\n    }));\n    dispatch(addWidget(NodeViewWidget));\n    setLoading(false);\n  }\n\n  const loadTurtleFile = async () => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n    const ttlHandler = new FileHandler();\n    ttlHandler.get_remote_file(turtle_url, (url, data) => {\n      if (data) {\n        setTurtle(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadJSONFile = async (datasetID) => {\n    json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n    const jsonHandler = new FileHandler();\n    jsonHandler.get_remote_file(json_url, (url, data) => {\n      if (data) {\n        setJson(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadFiles = async(datasetID) => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n      const ttlHandler = new FileHandler();\n      ttlHandler.get_remote_file(turtle_url, (url, turtleData) => {\n        if (turtleData) {\n          json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n          const jsonHandler = new FileHandler();\n          jsonHandler.get_remote_file(json_url, (url, jsonData) => {\n            if (turtleData && jsonData && !initialised) {\n              fillDataset(turtleData, jsonData);\n              setInitialised(true);\n            }\n          }, () => {\n            setLoading(false);\n          });\n        }\n      },null);\n  }\n\n  const loadDatsetFromDOI = async (url, fileData) => {\n    let file = {\n      id: \"ttl\",\n      url: url,\n      data: fileData,\n      file: { name: \"ttl\", type: \"text/turtle\" },\n    };\n    const splinter = new DatasetsListSplinter(undefined, file.data);\n    let graph = await splinter.getGraph();\n    console.log(\"Graph \", graph);\n    let datasets = graph.nodes.filter((node) => node?.attributes?.hasDoi);\n    const match = datasets.find( node => node.attributes?.hasDoi?.[0]?.includes(doi));\n    if ( match ) {\n      const datasetID = match.name;\n      loadFiles(datasetID);\n    } else {\n      setLoading(false);\n      setInitialised(false);\n    }\n  };\n\n  useEffect(() => {\n    if (datasetID && datasetID !== \"\" ) {\n      loadFiles(datasetID);\n    }\n\n    if (doi && doi !== \"\" ) {\n      if ( doiMatch ){\n        const fileHandler = new FileHandler();\n        const summaryURL = config.repository_url + config.available_datasets;\n        fileHandler.get_remote_file(summaryURL, loadDatsetFromDOI);\n      }\n    }\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" className='main-structure'>\n        <Sidebar\n          openUploadDialog={openUploadDialog}\n          setOpenUploadDialog={setOpenUploadDialog}\n          openDatasetsListDialog={openDatasetsListDialog}\n          setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n        />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                loading={loading}\n                openUploadDialog={openUploadDialog}\n                setOpenUploadDialog={setOpenUploadDialog}\n                openDatasetsListDialog={openDatasetsListDialog}\n                setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openUploadDialog}\n        handleClose={() => setOpenUploadDialog(false)}\n      />\n\n      <DatasetsListDialog\n        open={openDatasetsListDialog}\n        handleClose={() => setOpenDatasetsListDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    const event = new CustomEvent('nodeResized', {\n                        detail: node\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport Loader from '@metacell/geppetto-meta-ui/loader/Loader';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT, SPARC_DATASETS } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      { (props.loading)\n        ? <>\n          <Loader active={props.loading} />\n        </>\n        : <>\n            <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n            <Button\n              variant='outlined'\n              disableElevation\n              color='primary'\n              onClick={() => props.setOpenDatasetsListDialog(true)}\n            >\n              + { SPARC_DATASETS }\n            </Button>\n        </>\n      }\n\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Dialog,\n  DialogActions,\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  TextField,\n  DialogTitle,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { addDataset, setDatasetsList } from \"../../redux/actions\";\nimport Splinter from \"./../../utils/Splinter\";\nimport { NodeViewWidget } from \"../../app/widgets\";\nimport { addWidget } from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport DatasetsListSplinter from \"./DatasetsListSplinter\";\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport FileHandler from \"../../utils/filesHandler\";\nimport UploadSubmit from \"./../FileUploader/UploadSubmit\";\nimport CLOSE from '../../images/close.svg';\n\nimport config from \"./../../config/app.json\";\n\nconst DatasetsListDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(undefined);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const datasets = useSelector((state) => state.sdsState.available_datasets);\n  const [filteredDatasets, setFilteredDatasets] = React.useState(datasets);\n\n  let turtle_url = \"\";\n  let json_url = \"\";\n  let splinter = undefined;\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter,\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(\n      addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0, 10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        },\n      })\n    );\n    dispatch(addWidget(NodeViewWidget));\n  };\n\n  const handleDone = (dataset) => {\n    turtle_url =\n      config.datasets_url + dataset + \"/LATEST/curation-export.ttl\";\n    const fileHandler = new FileHandler();\n    fileHandler.get_remote_file(turtle_url, (url, turtleData) => {\n      if (turtleData) {\n        json_url =\n          config.datasets_url +\n          dataset +\n          \"/LATEST/path-metadata.json\";\n        fileHandler.get_remote_file(json_url, (url, data) => {\n          if (data) {\n            fillDataset(turtleData, data);\n            setFilteredDatasets(datasets);\n            setSelectedIndex(undefined);\n            handleClose();\n          }\n        });\n      }\n    });\n  };\n\n  const loadDatasets = () => {\n    const fileHandler = new FileHandler();\n    const callback = async (url, fileData) => {\n      let file = {\n        id: \"ttl\",\n        url: url,\n        data: fileData,\n        file: { name: \"ttl\", type: \"text/turtle\" },\n      };\n      const splinter = new DatasetsListSplinter(undefined, file.data);\n      let graph = await splinter.getGraph();\n      let datasets = graph.nodes.filter((node) => node?.attributes?.hasUriApi);\n      datasets.forEach( node => node.attributes ? node.attributes.lowerCaseLabel = node.attributes?.label?.[0]?.toLowerCase() : null );\n      dispatch(setDatasetsList(datasets));\n      setFilteredDatasets(datasets);\n    };\n    const summaryURL = config.repository_url + config.available_datasets;\n    fileHandler.get_remote_file(summaryURL, callback);\n  };\n\n  const handleChange = (event) => {\n    const lowerCaseSearch = event.target.value.toLowerCase();\n    let filtered = datasets.filter((dataset) =>\n      dataset.attributes.lowerCaseLabel.includes(lowerCaseSearch) || dataset.name.includes(lowerCaseSearch)\n    );\n    setSearchField(lowerCaseSearch);\n    setFilteredDatasets(filtered);\n  };\n\n  const closeDialog = () => {\n    setFilteredDatasets(datasets);\n    setSelectedIndex(undefined);\n    handleClose();\n  }\n\n  const getFormattedListTex = (label) => {\n    const reg = new RegExp(searchField, 'gi');\n\n    return searchField === undefined || searchField === \"\" \n      ? \n      label \n      :\n      label.replace(reg, function(str) {return '<b>'+str+'</b>'});\n  }\n\n  useEffect(() => {\n    open && datasets.length === 0 && loadDatasets();\n  });\n\n  return (\n    <Dialog \n      className=\"datasets_dialog\"\n      open={open}\n      handleClose={closeDialog}\n      PaperProps={{\n        style: {\n          width : '50rem'\n        },\n      }}\n    >\n      <DialogTitle align=\"center\">\n        <img\n          className=\"dialog_close\"\n          src={CLOSE}\n          onClick={handleClose}\n          alt=\"Close\"\n        />\n        <Typography variant=\"h3\">{config.text.datasetsButtonText}</Typography>\n        <Typography variant=\"subtitle1\">{config.text.datasetsButtonSubtitleText}</Typography>\n      </DialogTitle>\n      {datasets.length > 0 ? (\n        <>\n          <Box className=\"datasets_list\">\n            <TextField\n              fullWidth\n              disabled={datasets.length === 0}\n              label={config.text.datasetsDialogSearchText}\n              id=\"fullWidth\"\n              onChange={handleChange}\n            />\n          </Box>\n          {filteredDatasets.length > 0 ? (\n            <Box className=\"datasets_list datasets_list_results\" align=\"right\">\n              <Typography>{filteredDatasets.length} found</Typography>\n            </Box>\n          )\n          :\n          null\n          }\n          <Box className=\"datasets_list\">\n            <Paper className=\"datasets_dialog_list\">\n              <List className=\"datasets_list\">\n                {filteredDatasets.map((dataset) => (\n                  <>\n                    <ListItem\n                      className=\"dataset_item\"\n                      key={`item-${dataset.name}`}\n                      selected={selectedIndex === dataset.name}\n                      onClick={(event) =>\n                        handleListItemClick(event, dataset.name)\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            type=\"caption\"\n                            className=\"dataset_list_text\"\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                getFormattedListTex(dataset.attributes?.label[0])\n                            }}\n                          />\n                        }\n                      />\n                    </ListItem>\n                    <Divider />\n                  </>\n                ))}\n              </List>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <Box className=\"datasets_list\">\n          <CircularProgress className=\"datasets_loader\" />\n        </Box>\n      )}\n      <Box className=\"datasets_list\">\n        <UploadSubmit\n          handleClose={() => handleDone(selectedIndex)}\n          enabledButton={selectedIndex === undefined}\n        />\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default DatasetsListDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport FileHandler from '../../../utils/filesHandler';\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Done'\n        />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [rdf, setRdf] = useState(undefined);\n  const [json, setJson] = useState(undefined);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf({\n        ...rdf, data\n      })\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson({\n        ...json, data\n      })\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  }\n\n  const onDelete = (file)  => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf(undefined);\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson(undefined);\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  };\n\n  const onDrop = (files, accept = true) => {\n    for (const file of files) {\n      if (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1]) {\n        setRdf({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else if (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0]) {\n        setJson({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else {\n        console.error(\"something weird happened!\")\n      }\n    }\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  const files = [rdf, json].filter(item => item !== undefined);\n\n  return (\n    <>\n      {json !== undefined && rdf !== undefined \n        ? <> </>\n        : <DropzoneArea\n        fileObjects={files.map(item => item.file)}\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      /> }\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {json !== undefined && rdf !== undefined && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\nimport FileHandler from '../../utils/filesHandler';\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback, () => {});\n    fileHandler2.get_remote_file(getJsonURL(url), callback, () => {});\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/toggle-right.ce5f8e9f.svg\";","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport ToggleRight from '../../images/toggle-right.svg';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\n\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)}>\n          <img src={!expand ? ToggleRight : ToggleLeft} alt='Toggle' />\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if (nodeIds.length === 0) {\n      return;\n    }\n\n    if ((nodes.length !== nodeIds.length) && (nodes[0] === nodeIds[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n        selected={[nodeSelected?.tree_node?.id]}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '../../images/search.svg';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\n\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n        >\n          <img src={Search} alt='Search' />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","export default __webpack_public_path__ + \"static/media/plus.f6839d16.svg\";","import Plus from '../../images/plus.svg';\nimport { ADD_DATASET } from '../../constants';\nimport { Box, Button } from '@material-ui/core';\nimport config from \"./../../config/app.json\";\n\nconst SidebarFooter = (props) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\",\"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenUploadDialog(true)}\n      >\n        <img src={Plus} alt='Plus' />\n        {ADD_DATASET}\n      </Button>\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\", \"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenDatasetsListDialog(true)}\n      >\n        {config.text.datasetsButtonText}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openUploadDialog={props.openUploadDialog}\n        setOpenUploadDialog={props.setOpenUploadDialog}\n        openDatasetsListDialog={props.openDatasetsListDialog}\n        setOpenDatasetsListDialog={props.setOpenDatasetsListDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.25rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0 .375rem',\n          fontSize: '.75rem',\n          color: primaryTextColor,\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: lightBorderColor,\n        height: '2.375rem',\n        borderRadius: `${radius}px !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: lightBorderColor,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: inputTextColor,\n        '&::placeholder': {\n          color: inputTextColor,\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: secondaryColor,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              fontSize: 0,\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: lightBorderColor,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: noInstanceColor,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: noInstanceColor,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                color: placeHolderColor,\n                cursor: 'pointer',\n                lineHeight: 'normal',\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '0',\n          zIndex: '100',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import * as d3 from 'd3-force-3d'\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState, useEffect } from 'react';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\nimport { selectInstance } from '../../redux/actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport { GRAPH_SOURCE } from '../../constants';\nimport { rdfTypes, typesModel } from '../../utils/graphModel';\n\nconst NODE_FONT = '500 5px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 3000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n  collapsedFolder : 'red'\n};\nconst TOP_DOWN = {\n  label : \"Tree View\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial View\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n  const getPrunedTree = () => {\n    let nodesById = Object.fromEntries(window.datasets[props.graph_id].graph?.nodes?.map(node => [node.id, node]));\n    window.datasets[props.graph_id].graph?.links?.forEach(link => {\n      const source = (typeof link.source) === 'object' ? link.source.id : link.source;\n      const target = (typeof link.target) === 'object' ? link.target.id : link.target;\n      const linkFound = !nodesById[source]?.childLinks?.find( l =>\n        source === ((typeof l.source) === 'object' ? l.source.id : l.source) && target === ((typeof l.target) === 'object' ? l.target.id : l.target) \n      );\n      if ( linkFound ) {\n        nodesById[source]?.childLinks?.push(link);\n      }\n    });\n  \n    const visibleNodes = [];\n    const visibleLinks = [];\n\n    (function traverseTree(node = nodesById[window.datasets[props.graph_id].graph?.nodes?.[0].id]) {\n      visibleNodes.push(node);\n      if (node.collapsed) return;\n      visibleLinks.push(...node.childLinks);\n      let nodes = node.childLinks.map(link => (typeof link.target) === 'object' ? link.target : nodesById[link.target]);\n      nodes?.forEach(traverseTree);\n    })(); // IIFE\n\n    return { nodes : visibleNodes, links : visibleLinks, levelsMap : window.datasets[props.graph_id].graph.levelsMap, hierarchyVariant : window.datasets[props.graph_id].graph.hierarchyVariant };\n  };\n\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(RADIAL_OUT);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState(getPrunedTree());\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n    setForce();\n  };\n\n  \n  const handleNodeLeftClick = (node, event) => {\n    if ( node?.id === selectedNode?.id ) {\n      if ( node.type === rdfTypes.Subject.key || node.type === rdfTypes.Collection.key \n        || node.type === rdfTypes.Group.key || node.type === rdfTypes.Sample.key ) {\n        node.collapsed = !node.collapsed;\n        const updatedData = getPrunedTree();\n        setData(updatedData);\n      }\n    }\n    dispatch(selectInstance({\n      dataset_id: props.graph_id,\n      graph_node: node.id,\n      tree_node: node?.tree_reference?.id,\n      source: GRAPH_SOURCE\n    }));\n    setSelectedNode(node);\n    setTimeout( () => (node?.id === selectedNode?.id && selectedLayout.layout !== TOP_DOWN.layout) && handleNodeRightClick(node), data?.nodes?.length + data?.links?.length );\n  };\n\n  useEffect(() => {\n    resetCamera();\n    setForce();\n  }, []);\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n  const expandAll = (event) => {\n    window.datasets[props.graph_id].graph?.nodes?.forEach( node => {\n      collapsed ? node.collapsed = !collapsed : node.collapsed = node?.parent?.type === typesModel.NamedIndividual.subject.type;\n    })\n    let updatedData = getPrunedTree();\n    setData(updatedData);\n    setCollapsed(!collapsed)\n  }\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n    let center =  graphRef?.current?.ggv?.current.centerAt();\n    setCameraPosition({ x :  center?.x , y :  center?.y });\n  };\n\n  const setForce = () => {\n    if ( selectedLayout.layout !== TOP_DOWN.layout ){\n      let force = -150;\n      if ( selectedLayout.layout === TOP_DOWN.layout ) {\n        force = -150;\n      } else if ( selectedLayout.layout === RADIAL_OUT.layout ) {\n        force = -100;\n      } \n      graphRef?.current?.ggv?.current.d3Force('link').distance(0).strength(1);\n      graphRef?.current?.ggv?.current.d3Force(\"charge\").strength(force * 2);\n      graphRef?.current?.ggv?.current.d3Force('collision', d3.forceCollide(20)); \n      graphRef?.current?.ggv?.current.d3Force('x', d3.forceX());\n      graphRef?.current?.ggv?.current.d3Force('y', d3.forceY());\n      graphRef?.current?.ggv?.current.d3Force('center', d3.forceCenter(0,0));\n      graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(node => force * Math.sqrt(100 / graphRef?.current?.props?.data?.levelsMap[node.level]?.length )));\n    }\n  }\n\n  const onEngineStop = () => {\n    setForce();\n    resetCamera();\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setForce();\n\n    setTimeout ( () => { \n      setLoading(false);\n      setForce();\n    }, LOADING_TIME);\n  }, []);\n\n  useEffect(() => {\n    setForce();\n},[selectedLayout]) \n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 7.5;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 4.2, size * 4.2];\n      const hoverRectPosition = [node.x - hoverRectDimensions[0]/2, node.y - hoverRectDimensions[1]/2];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1],\n      ];\n      const hoverRectBorderRadius = 1;\n      ctx.beginPath();\n\n      try {\n        ctx.drawImage(\n          node?.img,\n          node.x - size,\n          node.y - size,\n          ...nodeImageSize\n        );\n      } catch (error) {\n        const img = new Image();\n        img.src = rdfTypes.Unknown.image;\n        node.img = img;\n\n        // Add default icon if new icon wasn't found under images\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      }\n\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 9).concat('...');\n      } else if ( Array.isArray(nodeName) ){\n        nodeName = nodeName[0]?.substr(0, 9).concat('...');\n      }\n      const textProps = [nodeName, node.x, textHoverPosition[1]];\n      if (node === hoverNode || node?.id === selectedNode?.id || node?.id === nodeSelected?.id ) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0],\n          hoverRectDimensions[1] / 4,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n      if ( node.childLinks?.length && node.collapsed ) {\n        const collapsedNodes = [node.childLinks?.length, node.x, textHoverPosition[1]];\n        ctx.fillStyle = GRAPH_COLORS.collapsedFolder;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'bottom';\n        ctx.fillText(...collapsedNodes);\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n    },\n    [hoverNode]\n  );\n\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={ graphRef }\n        // Graph data with Nodes and Links to populate\n        data={data}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        onEngineStop={onEngineStop}\n        cooldownTime={1000}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        dagLevelDistance={selectedLayout.layout === TOP_DOWN.layout ? 60 : 0}\n        linkDirectionalParticles={1}\n        forceRadial={15}\n        warmupTicks={data?.nodes?.length}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        // d3VelocityDecay={0.3}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => {\n          if ( selectedLayout.layout === TOP_DOWN.layout ){\n            node.fx = node.xPos;\n            node.fy = 100 * node.level;\n          }\n\n          return 100 / (node.level + 1);\n        }}\n        nodeRelSize={2.5}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div className='graph-view_controls'>\n            <IconButton area-label=\"GraphLayout\" aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <Tooltip id=\"button-report\" title=\"Change Graph Layout\">\n                <FormatAlignCenterIcon />\n              </Tooltip>\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n            </Menu>\n            <IconButton area-label=\"ZoomIn\" onClick={(e) => zoomIn()}>\n              <Tooltip id=\"button-report\" title=\"Zoom In\">\n                <ZoomInIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"ZoomOut\" onClick={(e) => zoomOut()}>\n              <Tooltip id=\"button-report\" title=\"Zoom Out\">\n                <ZoomOutIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"ResetCamera\" onClick={(e) => resetCamera()}>\n              <Tooltip id=\"button-report\" title=\"Reset Camera\">\n                <RefreshIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"Expand\" onClick={(e) => expandAll(e)}>\n              <Tooltip id=\"button-report\" title={ !collapsed ? \"Collapse All\" : \"Expand All\"}>\n                { !collapsed ? <UnfoldLessIcon/> : <UnfoldMoreIcon /> }\n              </Tooltip>\n            </IconButton>\n            <LayersIcon />\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => (item?.link === undefined\n        ? (<Chip key={`${item?.value}_${index}`} label={item?.value} />)\n        : (<Chip key={`${item?.value}_${index}`} label={item?.value} onClick={() => window.open(item.link, '_blank')}/>)))\n      }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.tree_node?.timestamp_updated !== undefined) {\n        latestUpdate = new Date(node?.tree_node?.timestamp_updated.split(\",\")[0]);\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Type',\n            value: node?.tree_node?.type\n        },\n        {\n            title: 'Mimetype',\n            value: node?.tree_node?.mimetype\n        },\n        {\n            title: 'Size Bytes',\n            value: node?.tree_node?.size_bytes\n        }\n    ];\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"File Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node?.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'File Details'} />)\n                }\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node?.graph_node?.attributes?.isAbout} />\n                </Box>\n                { node?.tree_node?.uri_human !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.tree_node?.uri_human} title=\"Human URI\" />\n                       </Box>)\n                    : (<> </>)\n                }\n\n                { node?.tree_node?.checksums !== undefined\n                    ? (<>\n                            <SimpleLabelValue label={'Checksum'} value={node?.tree_node?.checksums[0].hex} />\n                            <SimpleLabelValue label={'Checksum Algorithm'} value={node?.tree_node?.checksums[0].cypher} />\n                        </>)\n                    : (<> </>)\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node?.graph_node?.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node?.graph_node?.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <Typography component=\"h3\">Person Details</Typography>\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Name</Typography>\n                    <Links key={`name_href_link`} href={node.graph_node?.id} title={title.toString()} />\n                    {/* <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} /> */}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={item} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const simpleValue = (label, value) => {\n    if (value !== undefined) {\n        return (<SimpleLabelValue key={label} label={label} value={value} />);\n    } else {\n        return (<> </>);\n    }\n}\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label ? node.graph_node.attributes?.label[0] : \"\";\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined Sample name\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Sample Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Sample Details'} />)\n                }\n\n                { iterateSimpleValue('Assigned group', node?.graph_node?.attributes?.hasAssignedGroup) }\n                { iterateSimpleValue('Digital artifact', node?.graph_node?.attributes?.hasDigitalArtifactThatIsAboutIt) }\n                { iterateSimpleValue('Extracted from Anatomical region', node?.graph_node?.attributes?.wasExtractedFromAnatomicalRegion) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport USER from \"../../../images/user.svg\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n    const nodes = window.datasets[node.dataset_id].splinter.nodes;\n\n    let title = \"\";\n    let label = \"\";\n    let idDetails = \"\";\n    let description = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node?.graph_node.attributes?.label[0];\n        title = node?.graph_node.attributes?.title[0];\n        description = node?.graph_node.attributes?.description[0];\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        label = node?.tree_node?.basename;\n        idDetails = node?.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node.graph_node?.attributes?.label[0];\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.graph_node?.attributes?.latestUpdate !== undefined) {\n        latestUpdate = new Date(node.graph_node.attributes?.latestUpdate[0])\n    }\n\n    let contactPerson = [];\n    if (node.graph_node.attributes?.hasResponsiblePrincipalInvestigator !== undefined) {\n        node.graph_node.attributes?.hasResponsiblePrincipalInvestigator.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Principal Investigator',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    if (node.graph_node.attributes?.hasContactPerson !== undefined) {\n        node.graph_node.attributes?.hasContactPerson.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Contributor',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Error Index',\n            value: node.graph_node.attributes?.errorIndex\n        },\n        {\n            title: 'Template Schema Version',\n            value: node.graph_node.attributes?.hasDatasetTemplateSchemaVersion\n        },\n        {\n            title: 'Experiment Modality',\n            value: node.graph_node.attributes?.hasExperimentalModality\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Title'} value={title} heading={'Dataset Details'} />\n                { node.graph_node.attributes?.hasDoi && node.graph_node.attributes?.hasDoi[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasDoi[0]} title={label} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={label} />)\n                }\n                <SimpleLabelValue label={'Description'} value={description} />\n\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.isAbout} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Protocol Techniques</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.protocolEmploysTechnique} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node.graph_node.attributes?.hasDoi !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node.graph_node.attributes?.hasDoi[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => <Chip key={`${item}_${index}`} label={item} /> ) }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue, simpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node.tree_node && node.graph_node) {\n        idDetails = node?.tree_node?.id + detailsLabel;\n        title = node?.tree_node?.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node?.graph_node?.id + detailsLabel;\n        title = node.graph_node.name;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Weight Unit',\n            value: node.graph_node.attributes?.weightUnit\n        },\n        {\n            title: 'Weight Value',\n            value: node.graph_node.attributes?.weightValue\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Subject Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Subject Details'} />)\n                }\n\n                { iterateSimpleValue('Age Category', node?.graph_node?.attributes?.hasAgeCategory) }\n                { (node.graph_node.attributes?.ageValue && node.graph_node.attributes?.ageUnit)\n                    ? simpleValue('Age', node.graph_node.attributes?.ageValue + ' ' + node.graph_node.attributes?.ageUnit)\n                    : (node.graph_node.attributes?.ageBaseUnit && node.graph_node.attributes?.ageBaseValue)\n                        ? simpleValue('Age', node.graph_node.attributes?.ageBaseValue + ' ' + node.graph_node.attributes?.ageBaseUnit)\n                        : <> </>\n                }\n\n                { (node.graph_node.attributes?.weightUnit && node.graph_node.attributes?.weightValue)\n                    ? simpleValue('Weight', node.graph_node.attributes?.weightValue + ' ' + node.graph_node.attributes?.weightUnit)\n                    : <> </>\n                }\n\n                { iterateSimpleValue('Biological Sex', node?.graph_node?.attributes?.biologicalSex) }\n                { iterateSimpleValue('Specimen identifier', node?.graph_node?.attributes?.specimenHasIdentifier) }\n\n                { node.graph_node?.attributes?.subjectSpecies && node.graph_node?.attributes?.subjectSpecies.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Species</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectSpecies} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.subjectStrain && node.graph_node?.attributes?.subjectStrain.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Strains</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectStrain} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.hasAssignedGroup && node.graph_node?.attributes?.hasAssignedGroup.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Assigned Groups</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.hasAssignedGroup} />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Protocol Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />)\n                }\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst GroupDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Inner Folder/Files '} value={node?.graph_node?.childLinks?.length} heading={node?.graph_node?.name + ' group details'} />\n                <SimpleLabelValue label={'Group tag '} value={node?.graph_node?.properties?.tag} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default GroupDetails;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport CollectionDetails from './Details/CollectionDetails';\nimport GroupDetails from './Details/GroupDetails';\n\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Group.key:\n                details = new Group(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                {/* <CollectionDetails node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} />\n                <CollectionDetails node={node} /> */}\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Group = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <GroupDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <GroupDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        separator={<img src={DIVIDER} alt=\"DIVIDER\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography variant=\"subtitle2\" onClick={() => {goToLink(links?.current.id)}} className=\"breadcrumb_selected\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport { useSelector } from 'react-redux'\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\n\nconst NodeDetailView = (props) => {\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  if (nodeSelected.tree_node !== undefined && nodeSelected.tree_node !== null) {\n    path = [...nodeSelected.tree_node.path]\n    path.shift();\n    otherDetails = path.reverse().map( singleNode => {\n      const tree_node = window.datasets[nodeSelected.dataset_id].splinter.tree_map.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: tree_node.graph_reference,\n        tree_node: tree_node\n      }\n      // I don't like the check on primary and derivative below since this depends on the data\n      // but it's coming as a feature request, so I guess it can stay there.\n      if (new_node.tree_node.id !== subject_key\n        && new_node.tree_node.id !== contributors_key\n        && new_node.tree_node.id !== protocols_key\n        && new_node.tree_node.basename !== 'primary'\n        && new_node.tree_node.basename !== 'derivative') {\n        links.pages.push({\n          id: singleNode,\n          title: tree_node.text,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.tree_node.id,\n      text: nodeSelected.tree_node.text\n    };\n  } else {\n    path = [];\n    var latestNodeVisited = nodeSelected;\n    while ( latestNodeVisited.graph_node.parent !== undefined ) {\n      path.push(latestNodeVisited.graph_node.parent.id);\n      latestNodeVisited = {\n        tree_node: undefined,\n        graph_node: latestNodeVisited.graph_node.parent\n      };\n    };\n\n    otherDetails = path.reverse().map( singleNode => {\n      const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: graph_node,\n        tree_node: graph_node.tree_reference\n      }\n      if (new_node.graph_node.id !== subject_key\n        && new_node.graph_node.id !== contributors_key\n        && new_node.graph_node.id !== protocols_key) {\n        links.pages.push({\n          id: singleNode,\n          title: graph_node.name,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.graph_node.id,\n      text: nodeSelected.graph_node.name\n    };\n  }\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\">\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      {/**{ nodeDetails.getHeader() }*/}\n      { otherDetails }\n      { nodeDetails.getDetail() }\n      <NodeFooter />\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        available_datasets : [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {}\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n            case Actions.SET_DATASET_LIST:\n                return {\n                    ...state,\n                    available_datasets: action.data.datasets\n                };\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        default:\n            return state;\n    }\n}\n","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        case Actions.SET_DATASET_LIST:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nexport default class FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback, errorCallback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            errorCallback && errorCallback(undefined);\n        });\n    }\n}\n","export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\n\nexport const RDF_TO_JSON_TYPES = [\n    {key: 'sparc:Subject', toTrim: 'subject'}\n];\n\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Group\": {\n        \"image\": \"./images/graph/group.svg\",\n        \"key\": \"Group\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"title\",\n                \"property\": \"title\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"description\",\n                \"property\": \"description\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDoi\",\n                \"property\": \"hasDoi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriApi\",\n                \"property\": \"hasUriApi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasProtocol\",\n                \"property\": \"hasProtocol\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"subjectSpecies\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"subjectStrain\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"age\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"biologicalSex\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ],\n        \"additional_properties\": [\n            {\n                \"label\": \"Age unit\",\n                \"property\": \"ageUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age value\",\n                \"property\": \"ageValue\",\n                \"path\": [ \"TEMP:hasAge\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Age base unit\",\n                \"property\": \"ageBaseUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age base value\",\n                \"property\": \"ageBaseValue\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Weight unit\",\n                \"property\": \"weightUnit\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Weight value\",\n                \"property\": \"weightValue\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"rdf:value\", \"@value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            }\n        ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from the subject\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"To be filled\"\n            },\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"RRID\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"RRID\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"NCBITaxon\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"NCBITaxon\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"PATO\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"PATO\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"UBERON\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"UBERON\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        group: {\n            \"type\": \"Group\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        },\n        RRID: {\n            \"type\": \"RRID\",\n        }\n    },\n    \"Class\": {\n        NCBITaxon: {\n            \"type\": \"NCBITaxon\",\n        },\n        PATO: {\n            \"type\": \"PATO\",\n        },\n        UBERON: {\n            \"type\": \"UBERON\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n"],"sourceRoot":""}
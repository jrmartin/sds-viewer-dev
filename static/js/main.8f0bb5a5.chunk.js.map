{"version":3,"sources":["constants.js","utils/Splinter.js","app/widgets.js","images/check.svg","components/FileUploader/UploadSubmit.js","images/tree/dataset.svg","images/tree/folder.svg","images/tree/file.svg","styles/constant.js","utils/nodesFactory.js","images/close.svg","components/DatasetsListViewer/DatasetsListSplinter.js","redux/actions.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","components/DatasetsListViewer/DatasetsListDialog.js","images/upload-icon.svg","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","components/FileUploader/UploadDialogHeader.js","components/FileUploader/UploadDialog.js","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","images/Icons.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleLinkedChip.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/GroupDetails.js","components/NodeDetailView/settings/SettingsItem.js","components/NodeDetailView/settings/SettingsListItems.js","components/NodeDetailView/settings/SettingsGroup.js","components/NodeDetailView/settings/Settings.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/initialState.js","redux/store.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","utils/filesHandler.js","utils/graphModel.js"],"names":["IMPORT_TEXT","ADD_DATASET","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","maxFiles","detailsLabel","subject_key","protocols_key","contributors_key","GRAPH_SOURCE","TREE_SOURCE","SUBJECTS_LEVEL","PROTOCOLS_LEVEL","CRONTRIBUTORS_LEVEL","N3","require","ttl2jsonld","parse","Splinter","jsonFile","turtleFile","filterNode","node","basename","includes","this","factory","NodesFactory","types","jsonData","levelsMap","groups","turtleData","tree","undefined","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","store","Store","rdf_to_json","rdf_to_json_map","Map","tree_parents_map2","JSON","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","push","prefix","iri","String","forEach","toTrim","Array","isArray","RDF_TO_JSON_TYPES","some","item","key","id","replace","set","n","previousLevel","map","level","updateLevels","neighbors","processDataset","filteredNodes","filter","type","rdfTypes","UBERON","Award","Collection","children_counter","cleanLinks","Subject","Object","keys","attributes","subjects","Sample","samples","link","find","l","source","target","a","get","b","links","extractTurtle","processJSON","data","extractJson","initialiseNodesEdges","processTurtle","convertRDFToJson","create_graph","create_tree","mergeData","generateData","typeFound","typesModel","unknown","length","owl","rdfType","NamedIndividual","Class","ontology","sparc","split","pop","sparcType","graph_node","additional_properties","console","error","name","value","proxies","properties","tree_reference","collapsed","childLinks","proxy","Util","isBlankNode","subject","predicate","type_key","object","datatype","found","indexOf","update_node","newNode","NCBITaxon","PATO","RRID","label","dataset_node","ontology_node","get_type","typedNode","createNode","Unknown","delete","dataset","concat","updatedAbout","isAbout","replaceNode","updateTechniques","protocolEmploysTechnique","temp_edges","target_node","parent","config","order","group","groupID","groupNode","publishedURI","nodeF","img","Image","src","icon","tag","Group","protocols","Protocol","contributors","contributor","temp","organise_subjects","Person","derivedFrom","source_node","nodesToRemove","index","array","relativePath","from","hasUriPublished","animalSubjectIsOfStrain","animalSubjectIsOfSpecies","hasBiologicalSex","hasDerivedInformationAsParticipant","participantInPerformanceOf","hasUriHuman","dataset_relative_path","File","uri_human","unshift","element","splice","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","children","hasFolderAboutIt","folder","jsonNode","buildFolder","folderChildren","child","linkToNode","child_node","tempChildren","copiedItem","newName","new_node","buildNodeFromJson","node_id","identifier","size","size_bytes","mimetype","updated","timestamp_updated","status","tree_root","generateLeaf","build_leaf","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","path","findReference","reference","NodeViewWidget","WidgetStatus","ACTIVE","component","panelName","enableClose","enableRename","enableDrag","UploadSubmit","handleClose","enabledButton","Button","variant","fullWidth","disableElevation","color","onClick","disabled","CHECK","alt","vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","gray800","gray400","gray25","grey700","grey500","grey100","grey400","grey50","grey25","grey600","createImage","extension","image","extractProperties","ttlTypes","property","type_property","json_prop","new_attribute","step","innerPath","trimType","parseFloat","Contributor","firstName","middleName","lastName","namesArray","Dataset","typed_node","DELETE_DATASET","SET_DATASET_LIST","SELECT_INSTANCE","TRIGGER_ERROR","SELECT_GROUP","TOGGLE_METADATA_SETTINGS","TOGGLE_METADATA_ITEM_VISIBILITY","UPDATE_METADATA_ITEMS_ORDER","addDataset","deleteDataset","setDatasetsList","datasets","selectInstance","instance","selectGroup","triggerError","message","error_message","toggleSettingsPanelVisibility","visible","toggleMetadataItemVisibility","groupTitle","itemId","updateMetaDataItemsOrder","newItemsOrder","payload","title","hot","module","queryParams","URLSearchParams","window","location","search","datasetID","doi","local","dispatch","useDispatch","useState","openUploadDialog","setOpenUploadDialog","openDatasetsListDialog","setOpenDatasetsListDialog","useSelector","state","sdsState","doiMatch","initialised","setInitialised","loading","setLoading","turtle_url","json_url","splinter","fillDataset","turtle","json","getDatasetId","getGraph","getTree","_dataset","graph","addWidget","substring","graph_id","loadFiles","datasets_url","FileHandler","get_remote_file","url","loadDatsetFromDOI","fileData","file","DatasetsListSplinter","hasDoi","match","useEffect","fileHandler","summaryURL","repository_url","available_datasets","theme","display","className","open","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","useStore","LayoutManager","setComponent","myManager","getLayoutManagerInstance","model","visitNodes","setEventListener","visibleChild","_activeTabSet","_children","_visible","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","active","ErrorDialog","onClose","DatasetsListDialog","React","searchField","setSearchField","selectedIndex","setSelectedIndex","filteredDatasets","setFilteredDatasets","handleDone","getFormattedListTex","reg","RegExp","str","callback","hasUriApi","lowerCaseLabel","toLowerCase","statusOnPlatform","loadDatasets","PaperProps","style","align","CLOSE","datasetsButtonText","datasetsButtonSubtitleText","datasetsDialogSearchText","onChange","lowerCaseSearch","filtered","selected","primary","dangerouslySetInnerHTML","__html","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","progress","errors","Box","Typography","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","UploadProgress","onDelete","setProgress","upload","CANCEL","cursor","UploadError","DELETE","FilesUploading","files","fileWrapper","totalFiles","Uploader","rdf","setRdf","setJson","onDrop","Math","random","nodeRef","useRef","fileObjects","e","showPreviewsInDropzone","accFiles","acceptedFiles","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","setFiles","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","fileHandler2","fileExt","curr","urls","base_url","shift","getJsonURL","CircularProgress","TabPanel","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","Tabs","Tab","UploadDialog","setValue","_json","_turtle","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","nodeSelected","instance_selected","setNodes","setItems","widgets","layoutActions","globalId","matchingTitle","lowercaseSearch","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","Divider","marginBottom","background","justifyContent","margin","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","flexDirection","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","bottom","zIndex","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","DatasetIcon","SvgIcon","viewBox","fill","rx","d","ViewTypeIcon","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","collapsedFolder","TOP_DOWN","layout","maxNodesLevel","hierarchyVariant","LEFT_RIGHT","RADIAL_OUT","radialVariant","nodeSpace","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","GraphViewer","algorithm","levels","furthestLeft","positionsMap","levelsMapKeys","ceil","sort","reverse","collapsedInLevel","notcollapsedInLevel","neighbor","selectedLayout","xPos","fx","fy","yPos","max","Number","MIN_SAFE_INTEGER","min","MAX_SAFE_INTEGER","conflictNode","matchIndex","i","conflict","findIndex","updateNodes","getPrunedTree","nodesById","fromEntries","visibleNodes","visibleLinks","traverseTree","maxLevel","reduce","maxLevelNodes","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","setCameraPosition","Boolean","setData","groupSelected","group_selected","setCollapsed","handleLayoutClose","handleLayoutChange","setForce","collapseSubLevels","resetCamera","ggv","zoomToFit","d3Force","distance","strength","force","d3","sqrt","updatedData","setTimeout","addEventListener","v","_attributes","timeout","center","centerAt","handleNodeHover","zoom","clear","add","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","fillText","collapsedNodes","d2","cooldownTicks","onEngineStop","linkColor","has","linkWidth","dagLevelDistance","linkDirectionalParticles","forceRadial","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","nodeCanvasObject","nodeCanvasObjectMode","nodeVal","nodeRelSize","onNodeHover","onNodeClick","divElement","getElementById","scrollIntoView","behavior","handleNodeLeftClick","onNodeRightClick","handleNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Tooltip","Menu","anchorEl","keepMounted","MenuItem","zoomIn","zoomOut","expandAll","ustifyContent","Link","issues_url","docs_url","NodeFooter","FILTER","PersonHeader","headingStyle","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","toString","DetailLinks","href","LINKICON","SimpleChip","chips","handleClick","test","Chip","isValidUrl","urlString","FileDetails","filePropertiesModel","metadata_model","propValue","Links","SimpleLinkedChip","PersonDetails","SampleDetails","samplePropertiesModel","sample","localId","DatasetDetails","datasetPropertiesModel","SubjectDetails","subjectPropertiesModel","getGroupNode","groupName","isGroup","ProtocolDetails","protocolHasNumberOfSteps","GroupDetails","groupPropertiesModel","SettingsItem","ListItem","disableGutters","ListItemText","ListItemSecondaryAction","edge","disableRipple","SettingsListItems","provided","List","droppableProps","innerRef","subheader","ListSubheader","disableSticky","charAt","toUpperCase","slice","draggableId","isDragDisabled","draggableProps","dragHandleProps","SettingsGroup","onDragEnd","result","destination","itemsCopy","reorderedItem","droppableId","Settings","showSettingsContent","settings_panel_visible","metaDataPropertiesModel","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","Breadcrumbs","maxItems","pages","page","componentMap","otherDetails","nodeDetails","latestNodeVisited","singleNode","getDetail","sx","mt","close","getSettings","TuneRounded","sdsInitialState","all_tree","reducers","action","Actions","ids","updatedMetadataModel","groupIndex","itemToToggle","LayoutActions","SET_LAYOUT","createStore","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","hostname","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","axios","progressCallback","reader","FileReader","onload","response","onprogress","lengthComputable","parseInt","loaded","total","readAsText","errorCallback","crossDomain","responseType","onDownloadProgress","progressEvent","catch","log","ORCID","awards","collection"],"mappings":"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","file":"static/js/main.8f0bb5a5.chunk.js","sourcesContent":["export const IMPORT_TEXT = 'Import a new dataset';\nexport const ADD_DATASET = 'Import Dataset';\nexport const LIST_DATASETS = 'List Datasets';\nexport const SPARC_DATASETS = 'SPARC Datasets';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['json', 'ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\nexport const SUBJECTS_LEVEL = 2;\nexport const PROTOCOLS_LEVEL = 2;\nexport const CRONTRIBUTORS_LEVEL = 2;","import NodesFactory from './nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel,\n    RDF_TO_JSON_TYPES\n} from './graphModel';\n\nimport config from './../config/app.json';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key, SUBJECTS_LEVEL, PROTOCOLS_LEVEL, CRONTRIBUTORS_LEVEL\n} from '../constants';\n\nconst N3 = require('n3');\nconst ttl2jsonld = require('@frogcat/ttl2jsonld').parse;\n\nconst TMP_FILE = \".tmp\";\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.groups = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n        this.rdf_to_json = undefined;\n        this.rdf_to_json_map = undefined;\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n        this.tree_parents_map2 = new Map();\n        this.rdf_to_json_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    convertRDFToJson () {\n        this.rdf_to_json = ttl2jsonld(this.turtleFile);\n        this.rdf_to_json['@graph'].forEach(node => {\n            let found = false;\n            let toTrim = '';\n            if (Array.isArray(node['@type'])) {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'].includes(item.key)) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'] === item.key) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            if (found) {\n                let id = this.types[toTrim].iri.id + node['@id'].replace(toTrim + ':', '');\n                this.rdf_to_json_map.set(id, node);\n            }\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n    updateLevels(n, previousLevel) {\n        n?.map( node => {\n            if ( node?.level > previousLevel ){\n                this.updateLevels(node?.neighbors, node.level);\n                node.level = node.level + 1;\n            }\n        });\n\n        return;\n    }\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let filteredNodes = this.forced_nodes?.filter( n => n.type !== rdfTypes.UBERON.key && n.type !== rdfTypes.Award.key && !(n.type === rdfTypes.Collection.key && n.children_counter === 0));\n        let cleanLinks = [];\n        let that = this;\n        filteredNodes?.forEach( n => {\n            if ( n.type === rdfTypes.Subject.key ) {\n                let keys = Object.keys(that.groups);\n                keys.forEach( key => {\n                    if ( n.attributes ) {\n                        if ( n?.attributes[key] ) {\n                            that.groups[key][n.attributes[key][0]].subjects += 1; \n                        }\n                    }\n                })\n            }\n            if ( n.type === rdfTypes.Sample.key ) {\n                let keys = Object.keys(that.groups);\n                keys.forEach( key => {\n                    if ( n.attributes ){\n                        if ( n?.attributes[key] ) {\n                            that.groups[key][n.attributes[key][0]].samples += 1; \n                        }\n                    }\n                }) \n            }\n        })\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = this.nodes.get( link.source );\n                const b = this.nodes.get( link.target );\n                if ( a && b && ( a?.type !== rdfTypes.Award.key && b?.type !== rdfTypes.Award.key ) && !((a?.type === rdfTypes.Collection.key && a.children_counter < 1 ) || ( b?.type === rdfTypes.Collection.key && b.children_counter < 1))) {\n                    !a.neighbors && (a.neighbors = []);\n                    !b.neighbors && (b.neighbors = []);\n                    if ( !a.neighbors.find( n => n.id === b.id )){\n                        a.neighbors.push(b);\n                    }\n                    if ( !b.neighbors.find( n => n.id === a.id )){\n                        b.neighbors.push(a);\n                    }\n                    \n                    !a.links && (a.links = []);\n                    !b.links && (b.links = []);\n                    a.links.push(link);\n                    b.links.push(link);\n                    if ( !link.source.id ) {\n                        link.source = this.nodes.get(link.source)\n                    }\n        \n                    if ( !link.target.id ) {\n                        link.target = this.nodes.get(link.target)\n                    }\n                    cleanLinks.push(link);\n                }\n            }\n        });\n        return {\n            nodes: filteredNodes,\n            links: cleanLinks,\n            levelsMap : this.levelsMap\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.convertRDFToJson();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } if (type.type === this.types.owl.iri.id + \"Class\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.Class[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.Class[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        const additional_properties = this.rdf_to_json_map.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0,\n                collapsed: false,\n                childLinks : [],\n                additional_properties: additional_properties,\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n    replaceNode(a) {\n        let newNode = {\"value\": a};\n        if( a?.includes(rdfTypes.NCBITaxon.key) || a?.includes(rdfTypes.PATO.key) || a?.includes(rdfTypes.UBERON.key) || a?.includes(rdfTypes.RRID.key) ) {\n            let node = this.nodes.get(a);\n            if (node) {\n                newNode = {\"value\": node?.attributes.label[0], \"link\": node?.id};\n            }\n        }\n\n        return newNode;\n    }\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        let updatedAbout = [];\n        dataset_node.level = 1;\n        let that = this;\n        dataset_node?.attributes?.isAbout?.forEach( (a) => {\n            updatedAbout.push(that.replaceNode(a));\n        });\n        dataset_node.attributes.isAbout = updatedAbout;\n\n        let updateTechniques = [];\n        dataset_node.attributes.protocolEmploysTechnique?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updateTechniques.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updateTechniques.push({\"value\": a});\n                }\n            } else {\n                updateTechniques.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.protocolEmploysTechnique = updateTechniques;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges?.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_subjects(target_node, link, groups){\n        let parent = this.nodes.get(subject_key);\n        let keys = Object.keys(config.groups.order);\n        keys.forEach( key => {\n            let group = config.groups.order[key];\n            if ( target_node.attributes[key]?.[0] ) {\n                let source = this.nodes.get(target_node.attributes[key]?.[0]);\n                if ( source !== undefined ) {\n                    target_node.attributes[key][0] = source.attributes.label[0];\n                }\n                \n                const groupID = parent.id + \"_\" + target_node.attributes[key]?.[0].replace(/\\s/g, \"\");\n                if ( this.nodes.get(groupID) === undefined ) {\n                    let name = target_node.attributes[key]?.[0];\n\n                    const groupNode = {\n                        id: groupID,\n                        name: name,\n                        type: typesModel.NamedIndividual.group.type,\n                        properties: key,\n                        parent : parent,\n                        proxies: [],\n                        level: parent.level + 1,\n                        tree_reference: null,\n                        children_counter: 0,\n                        collapsed : false,\n                        childLinks : [],\n                        samples : 0, \n                        subjects : 0,\n                        publishedURI : \"\",\n                        dataset_id : this.dataset_id\n                    };\n                    let nodeF = this.factory.createNode(groupNode);\n                    const img = new Image();\n                    img.src = group.icon;\n                    nodeF.img = img;\n                    this.nodes.set(groupID, nodeF);\n                    groups.push({\n                        source: parent.id,\n                        target: nodeF.id\n                    });\n                    this.groups[key] ? this.groups[key][nodeF.name] = nodeF :  this.groups[key] = {[nodeF.name] : nodeF};\n                    parent = groupNode;\n                } else {\n                    parent = this.nodes.get(groupID);\n                }\n            } else {\n                console.error(\"The group node already exists!\", group.tag);\n            }\n        });\n        link.source = parent.id;\n        target_node.level = parent.level + 1;\n        target_node.attributes.publishedURI = \"\"\n        target_node.id = parent.id + target_node.name;\n        target_node.parent = parent;\n        target_node.childLinks = [];\n        target_node.collapsed = target_node.type === typesModel.NamedIndividual.subject.type;\n        this.nodes.set(target_node.id, target_node);\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: rdfTypes.Group.key,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            const img = new Image();\n            img.src =  \"./images/graph/group.svg\";\n            subjects.img = img; \n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        let groups = [];\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                this.organise_subjects(target_node, link, groups);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && target_node.type === rdfTypes.Sample.key) {\n                link.source = target_node.attributes.derivedFrom[0];\n                target_node.level = subjects.level + 2;\n                target_node.parent = this.nodes.get(target_node.attributes.derivedFrom[0]);\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            if ( source_node?.childLinks ) {\n                source_node.childLinks = [];\n                source_node.children_counter++;\n                this.nodes.set(source_node.id, source_node);\n            }\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n\n        this.forced_edges = this.forced_edges.concat(groups);\n    }\n\n\n    fix_links() {\n        let nodesToRemove = [];\n\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n\n                if (node.attributes?.relativePath !== undefined) {\n                    node.attributes.publishedURI = \n                        Array.from(this.nodes)[0][1].attributes.hasUriPublished[0]?.replace(\"datasets\", \"file\") + \n                        \"/1?path=files/\" +\n                        node.attributes?.relativePath;\n                }\n            }\n\n            if (node.type === rdfTypes.Subject.key) {\n                if (node.attributes?.animalSubjectIsOfStrain !== undefined) {\n                    let source = this.nodes.get(node.attributes.animalSubjectIsOfStrain[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.animalSubjectIsOfStrain[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.animalSubjectIsOfSpecies !== undefined) {\n                    let source = this.nodes.get(node.attributes.animalSubjectIsOfSpecies[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.animalSubjectIsOfSpecies[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.hasBiologicalSex !== undefined) {\n                    let source = this.nodes.get(node.attributes.hasBiologicalSex[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.hasBiologicalSex[0] = source.attributes.label[0];\n                    }\n                }\n\n                if (node.attributes?.hasDerivedInformationAsParticipant !== undefined && node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.hasDerivedInformationAsParticipant[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n\n                if (node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.participantInPerformanceOf[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n\n                if (node.tree_reference?.dataset_relative_path !== undefined) {\n                    node.attributes.publishedURI = \n                        Array.from(this.nodes)[0][1].attributes.hasUriPublished[0]?.replace(\"datasets\", \"file\") + \n                        \"/1?path=files/\" +\n                        node.tree_reference?.dataset_relative_path;\n                }\n            }\n\n            if (node.type === rdfTypes.File.key) {\n                if (node?.tree_reference?.uri_human  !== undefined) {\n                    node.tree_reference.uri_human = Array.from(this.nodes)[0][1].attributes.hasUriHuman[0];\n                }\n\n                if (node.attributes?.relativePath !== undefined) {\n                    node.attributes.publishedURI = \n                        Array.from(this.nodes)[0][1].attributes.hasUriPublished[0]?.replace(\"datasets\", \"file\") + \n                        \"/1?path=files/\" +\n                        node.attributes?.relativePath;\n                }\n            }\n\n            if (node.type === rdfTypes.Collection.key) {\n                if (node?.tree_reference?.uri_human  !== undefined) {\n                    node.tree_reference.uri_human = Array.from(this.nodes)[0][1].attributes.hasUriHuman[0];\n                }\n\n                if (node.attributes?.relativePath !== undefined) {\n                    node.attributes.publishedURI = \n                        Array.from(this.nodes)[0][1].attributes.hasUriPublished[0]?.replace(\"datasets\", \"file\") + \n                        \"/1?path=files/\" +\n                        node.attributes?.relativePath;\n                }\n            }\n\n            if (node.type === rdfTypes.RRID.key || node.type === rdfTypes.NCBITaxon?.key || node.type === rdfTypes.PATO?.key) {\n                nodesToRemove.unshift(index);\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n\n        nodesToRemove.forEach(element => {\n            this.forced_nodes.splice(element, 1);\n        })\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                value.attributes.hasFolderAboutIt.forEach(folder => {\n                    let jsonNode = this.tree_map.get(folder);\n                    let newNode = this.buildFolder(jsonNode, value);\n                    let folderChildren = this.tree_parents_map2.get(newNode.parent_id)?.map(child => {\n                        child.parent_id = newNode.uri_api\n                        return child;\n                    });\n\n                    if (!this.filterNode(newNode) && (this.nodes.get(newNode.remote_id)) === undefined) {\n                        this.linkToNode(newNode, value);\n                    }\n\n                    if (this.tree_parents_map2.get(newNode.uri_api) === undefined) {\n                        this.tree_parents_map2.set(newNode.uri_api, folderChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        folderChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    } else {\n                        let tempChildren = folderChildren === undefined ? [...this.tree_parents_map2.get(newNode.uri_api)] : [...this.tree_parents_map2.get(newNode.uri_api), ...folderChildren];;\n                        this.tree_parents_map2.set(newNode.uri_api, tempChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        tempChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    buildFolder(item) {\n        let copiedItem = {...item};\n        let newName = copiedItem.dataset_relative_path.split('/')[0];\n        copiedItem.parent_id = copiedItem.remote_id;\n        copiedItem.remote_id = copiedItem.basename + '_' + newName;\n        copiedItem.uri_api = copiedItem.remote_id;\n        copiedItem.basename = newName;\n        // copiedItem.basename = copiedItem.remote_id;\n        return copiedItem;\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0])?.level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        new_node.id = parent.id + new_node.id;\n        node.remote_id = new_node.id;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        new_node.childLinks = [];\n        new_node.collapsed = new_node.type === typesModel.NamedIndividual.subject.type \n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map2.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n                publishedURI : \"\"\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root?.remote_id);\n        this.tree_parents_map?.delete(tree_root?.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children?.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        if ( node ) {\n            node.id = node?.uri_api\n            node.parent = true;\n            node.text = parent !== undefined ? node?.basename : this.dataset_id;\n            node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n            node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n            if (!node.items) {\n                node.items = [];\n            }\n            node.graph_reference = this.findReference(node.remote_id);\n            if ( node.graph_reference === undefined ) {\n                node.graph_reference = this.findReference(node.uri_api);\n            }\n            this.tree_map.set(node.id, node);\n            const newNode = {\n                id: node.uri_api,\n                text: node.text,\n                items: node.items,\n                graph_reference: node?.graph_reference?.id,\n                path: node.path\n            }\n            return newNode;\n        } else {\n            return {}\n        }\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose, enabledButton }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n      disabled={enabledButton}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: '.5rem',\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: '#435070',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n  gray800: '#0F162B',\n  gray400: '#586482',\n  gray25: '#F0F1F2',\n  grey700: '#212B45',\n  grey500: '#435070',\n  grey100: '#C9CDD6',\n  grey400: '#586482',\n  grey50: '#E1E3E8',\n  grey25: '#F0F1F2',\n  grey600: '#2E3A59',\n};\n\nexport default vars;\n","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        if ( node.type !== \"Group\" ) {\n            img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)]?.image : rdfTypes.Unknown?.image\n        }\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node.additional_properties) {\n        for (const json_prop of rdfTypes[node.type].additional_properties) {\n            let new_attribute = node.additional_properties;\n            for (const step of json_prop.path) {\n                if (new_attribute[step] !== undefined) {\n                    new_attribute = new_attribute[step];\n                } else {\n                    new_attribute = undefined;\n                    break;\n                }\n            }\n            if (new_attribute !== undefined) {\n                if (typeof new_attribute === 'object' && new_attribute !== null && new_attribute[json_prop.innerPath]) {\n                    new_attribute = new_attribute[json_prop.innerPath];\n                }\n\n                node.attributes[json_prop.property] = [];\n                if (json_prop.type === 'string') {\n                    node.attributes[json_prop.property].push(new_attribute.replace(json_prop.trimType, ''));\n                } else {\n                    node.attributes[json_prop.property].push(parseFloat(new_attribute));\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","import NodesFactory from './../../utils/nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel\n} from './../../utils/graphModel';\n\nconst N3 = require('n3');\n\nconst TMP_FILE = \".tmp\";\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.proxies_map = undefined;\n        this.forced_nodes = undefined;\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.proxies_map = new Map();\n    }\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        return {\n            nodes: this.forced_nodes\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.create_graph();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if (target_node.type === rdfTypes.Dataset.key){\n                return true;\n            }\n            return false;\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n                value.proxies.every(proxy => {\n                    return true;\n                })\n            \n            return value;\n        })\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SET_DATASET_LIST = 'SET_DATASET_LIST'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\nexport const SELECT_GROUP = 'SELECT_GROUP'\nexport const TOGGLE_METADATA_SETTINGS = 'TOGGLE_METADATA_SETTINGS'\nexport const TOGGLE_METADATA_ITEM_VISIBILITY = 'TOGGLE_METADATA_ITEM_VISIBILITY'\nexport const UPDATE_METADATA_ITEMS_ORDER = 'UPDATE_METADATA_ITEMS_ORDER'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const setDatasetsList = datasets => ({\n    type: SET_DATASET_LIST,\n    data: { datasets: datasets },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const selectGroup = instance => ({\n    type: SELECT_GROUP,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});\n\nexport const toggleSettingsPanelVisibility = visible => ({\n    type: TOGGLE_METADATA_SETTINGS,\n    data: { visible: visible },\n});\n\n\nexport const toggleMetadataItemVisibility = (groupTitle, itemId) => ({\n    type: TOGGLE_METADATA_ITEM_VISIBILITY,\n    data: {\n        groupTitle,\n        itemId,\n    },\n});\n\nexport const updateMetaDataItemsOrder = ({ groupTitle, newItemsOrder }) => {\n    return {\n        type: UPDATE_METADATA_ITEMS_ORDER,\n        payload: { title: groupTitle, newItemsOrder },\n    };\n};","import './flexlayout.css';\nimport theme from './theme';\nimport { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport Splinter from './utils/Splinter';\nimport MainLayout from './app/mainLayout';\nimport FileHandler from './utils/filesHandler';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport DatasetsListDialog from './components/DatasetsListViewer/DatasetsListDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { addDataset } from './redux/actions';\nimport { NodeViewWidget } from './app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport DatasetsListSplinter from \"./components/DatasetsListViewer/DatasetsListSplinter\";\n\nimport config from './config/app.json';\n\nconst App = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const datasetID = queryParams.get('id');\n  const doi = queryParams.get('doi');\n  const local = queryParams.get('local');\n\n  const dispatch = useDispatch();\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  const [openDatasetsListDialog, setOpenDatasetsListDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n  const [_turtle, setTurtle] = useState(undefined);\n  const [_json, setJson] = useState(undefined);\n  const [doiMatch, setDoiMatch] = useState(true);\n  const [initialised, setInitialised] = useState(false);\n  const [loading, setLoading] = useState(() => {\n    if (datasetID && datasetID !== \"\") {\n      return true;\n    }\n    if (doi && doi !== \"\") {\n      return true;\n    }\n    return false;\n  });\n\n\n  let turtle_url = '';\n  let json_url = '';\n  let splinter = undefined;\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter\n    };\n\n    dispatch(addDataset(_dataset));\n    dispatch(addWidget({\n      id: _dataset.id,\n      name: _dataset.id.substring(0,10) + \"... Graph\",\n      component: \"graphComponent\",\n      panelName: \"leftPanel\",\n      enableClose: true,\n      enableRename: true,\n      enableDrag: true,\n      status: WidgetStatus.ACTIVE,\n      config: {\n        graph_id: _dataset.id,\n        component: \"graphComponent\",\n      }\n    }));\n    dispatch(addWidget(NodeViewWidget));\n    setLoading(false);\n  }\n\n  const loadTurtleFile = async () => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n    const ttlHandler = new FileHandler();\n    ttlHandler.get_remote_file(turtle_url, (url, data) => {\n      if (data) {\n        setTurtle(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadJSONFile = async (datasetID) => {\n    json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n    const jsonHandler = new FileHandler();\n    jsonHandler.get_remote_file(json_url, (url, data) => {\n      if (data) {\n        setJson(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadFiles = async(datasetID) => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n      const ttlHandler = new FileHandler();\n      ttlHandler.get_remote_file(turtle_url, (url, turtleData) => {\n        if (turtleData) {\n          json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n          const jsonHandler = new FileHandler();\n          jsonHandler.get_remote_file(json_url, (url, jsonData) => {\n            if (turtleData && jsonData && !initialised) {\n              fillDataset(turtleData, jsonData);\n              setInitialised(true);\n            }\n          }, () => {\n            setLoading(false);\n          });\n        }\n      },null);\n  }\n\n  const loadDatsetFromDOI = async (url, fileData) => {\n    let file = {\n      id: \"ttl\",\n      url: url,\n      data: fileData,\n      file: { name: \"ttl\", type: \"text/turtle\" },\n    };\n    const splinter = new DatasetsListSplinter(undefined, file.data);\n    let graph = await splinter.getGraph();\n    let datasets = graph.nodes.filter((node) => node?.attributes?.hasDoi);\n    const match = datasets.find( node => node.attributes?.hasDoi?.[0]?.includes(doi));\n    if ( match ) {\n      const datasetID = match.name;\n      loadFiles(datasetID);\n    } else {\n      setLoading(false);\n      setInitialised(false);\n    }\n  };\n\n  useEffect(() => {\n    if (datasetID && datasetID !== \"\" ) {\n      loadFiles(datasetID);\n    }\n\n    if (doi && doi !== \"\" ) {\n      if ( doiMatch ){\n        const fileHandler = new FileHandler();\n        const summaryURL = config.repository_url + config.available_datasets;\n        fileHandler.get_remote_file(summaryURL, loadDatsetFromDOI);\n      }\n    }\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n        <Box display=\"flex\" className='main-structure'>\n        <Sidebar\n          openUploadDialog={openUploadDialog}\n          setOpenUploadDialog={setOpenUploadDialog}\n          openDatasetsListDialog={openDatasetsListDialog}\n          setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n          local={local}\n        />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                loading={loading}\n                openUploadDialog={openUploadDialog}\n                setOpenUploadDialog={setOpenUploadDialog}\n                openDatasetsListDialog={openDatasetsListDialog}\n                setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openUploadDialog}\n        handleClose={() => setOpenUploadDialog(false)}\n      />\n\n      <DatasetsListDialog\n        open={openDatasetsListDialog}\n        handleClose={() => setOpenDatasetsListDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    let visibleChild = myManager.model._activeTabSet._children.filter(element => \n                        element._visible\n                    );\n                    const event = new CustomEvent('nodeResized', {\n                        detail: visibleChild\n                    });\n                    document.dispatchEvent(event);\n\n                });\n                node.setEventListener(\"visibility\", (node, data) => {\n                    let visibleChild = myManager.model._activeTabSet._children.filter(element => \n                        !element._visible\n                    );\n                    const event = new CustomEvent('nodeVisible', {\n                        detail: visibleChild\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport Loader from '@metacell/geppetto-meta-ui/loader/Loader';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT, SPARC_DATASETS } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      { (props.loading)\n        ? <>\n          <Loader active={props.loading} />\n        </>\n        : <>\n            <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n            <Button\n              variant='outlined'\n              disableElevation\n              color='primary'\n              onClick={() => props.setOpenDatasetsListDialog(true)}\n            >\n              + { IMPORT_TEXT }\n            </Button>\n        </>\n      }\n\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Dialog,\n  DialogActions,\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  TextField,\n  DialogTitle,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { addDataset, setDatasetsList } from \"../../redux/actions\";\nimport Splinter from \"./../../utils/Splinter\";\nimport { NodeViewWidget } from \"../../app/widgets\";\nimport { addWidget } from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport DatasetsListSplinter from \"./DatasetsListSplinter\";\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport FileHandler from \"../../utils/filesHandler\";\nimport UploadSubmit from \"./../FileUploader/UploadSubmit\";\nimport CLOSE from '../../images/close.svg';\n\nimport config from \"./../../config/app.json\";\n\nconst DatasetsListDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [selectedIndex, setSelectedIndex] = React.useState(undefined);\n  const datasets = useSelector((state) => state.sdsState.available_datasets);\n  const [filteredDatasets, setFilteredDatasets] = React.useState(datasets);\n  const PUBLISHED = \"PUBLISHED\";\n\n  let turtle_url = \"\";\n  let json_url = \"\";\n  let splinter = undefined;\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter,\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(\n      addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0, 10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        },\n      })\n    );\n    dispatch(addWidget(NodeViewWidget));\n  };\n\n  const handleDone = (dataset) => {\n    turtle_url =\n      config.datasets_url + dataset + \"/LATEST/curation-export.ttl\";\n    const fileHandler = new FileHandler();\n    fileHandler.get_remote_file(turtle_url, (url, turtleData) => {\n      if (turtleData) {\n        json_url =\n          config.datasets_url +\n          dataset +\n          \"/LATEST/path-metadata.json\";\n        fileHandler.get_remote_file(json_url, (url, data) => {\n          if (data) {\n            fillDataset(turtleData, data);\n            setFilteredDatasets(datasets);\n            setSelectedIndex(undefined);\n            handleClose();\n          }\n        });\n      }\n    });\n  };\n\n  const loadDatasets = () => {\n    const fileHandler = new FileHandler();\n    const callback = async (url, fileData) => {\n      let file = {\n        id: \"ttl\",\n        url: url,\n        data: fileData,\n        file: { name: \"ttl\", type: \"text/turtle\" },\n      };\n      const splinter = new DatasetsListSplinter(undefined, file.data);\n      let graph = await splinter.getGraph();\n      let datasets = graph.nodes.filter((node) => node?.attributes?.hasUriApi);\n      datasets.forEach( node => node.attributes ? node.attributes.lowerCaseLabel = node.attributes?.label?.[0]?.toLowerCase() : null );\n      datasets = datasets.filter( node => node?.attributes?.statusOnPlatform?.[0]?.includes(PUBLISHED) );\n      dispatch(setDatasetsList(datasets));\n      setFilteredDatasets(datasets);\n    };\n    const summaryURL = config.repository_url + config.available_datasets;\n    fileHandler.get_remote_file(summaryURL, callback);\n  };\n\n  const handleChange = (event) => {\n    const lowerCaseSearch = event.target.value.toLowerCase();\n    let filtered = datasets.filter((dataset) =>\n      dataset.attributes.lowerCaseLabel.includes(lowerCaseSearch) || dataset.name.includes(lowerCaseSearch)\n    );\n    setSearchField(lowerCaseSearch);\n    setFilteredDatasets(filtered);\n  };\n\n  const closeDialog = () => {\n    setFilteredDatasets(datasets);\n    setSelectedIndex(undefined);\n    handleClose();\n  }\n\n  const getFormattedListTex = (label) => {\n    const reg = new RegExp(searchField, 'gi');\n\n    return searchField === undefined || searchField === \"\" \n      ? \n      label \n      :\n      label.replace(reg, function(str) {return '<b>'+str+'</b>'});\n  }\n\n  useEffect(() => {\n    open && datasets.length === 0 && loadDatasets();\n  });\n\n  return (\n    <Dialog \n      className=\"datasets_dialog\"\n      open={open}\n      handleClose={closeDialog}\n      PaperProps={{\n        style: {\n          width : '50rem'\n        },\n      }}\n    >\n      <DialogTitle align=\"center\">\n        <img\n          className=\"dialog_close\"\n          src={CLOSE}\n          onClick={handleClose}\n          alt=\"Close\"\n        />\n        <Typography variant=\"h3\">{config.text.datasetsButtonText}</Typography>\n        <Typography variant=\"subtitle1\">{config.text.datasetsButtonSubtitleText}</Typography>\n      </DialogTitle>\n      {datasets.length > 0 ? (\n        <>\n          <Box className=\"datasets_list\">\n            <TextField\n              fullWidth\n              disabled={datasets.length === 0}\n              label={config.text.datasetsDialogSearchText}\n              id=\"fullWidth\"\n              onChange={handleChange}\n            />\n          </Box>\n          {filteredDatasets.length > 0 ? (\n            <Box className=\"datasets_list datasets_list_results\" align=\"right\">\n              <Typography>{filteredDatasets.length} found</Typography>\n            </Box>\n          )\n          :\n          null\n          }\n          <Box className=\"datasets_list\">\n            <Paper className=\"datasets_dialog_list\">\n              <List className=\"datasets_list\">\n                {filteredDatasets.map((dataset) => (\n                  <>\n                    <ListItem\n                      className=\"dataset_item\"\n                      key={`item-${dataset.name}`}\n                      selected={selectedIndex === dataset.name}\n                      onClick={(event) =>\n                        handleListItemClick(event, dataset.name)\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            type=\"caption\"\n                            className=\"dataset_list_text\"\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                getFormattedListTex(dataset.attributes?.label[0])\n                            }}\n                          />\n                        }\n                      />\n                    </ListItem>\n                    <Divider />\n                  </>\n                ))}\n              </List>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <Box className=\"datasets_list\">\n          <CircularProgress className=\"datasets_loader\" />\n        </Box>\n      )}\n      <Box className=\"datasets_list\">\n        <UploadSubmit\n          handleClose={() => handleDone(selectedIndex)}\n          enabledButton={selectedIndex === undefined}\n        />\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default DatasetsListDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport FileHandler from '../../../utils/filesHandler';\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Done'\n        />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [rdf, setRdf] = useState(undefined);\n  const [json, setJson] = useState(undefined);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf({\n        ...rdf, data\n      })\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson({\n        ...json, data\n      })\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  }\n\n  const onDelete = (file)  => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf(undefined);\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson(undefined);\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  };\n\n  const onDrop = (files, accept = true) => {\n    for (const file of files) {\n      if (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1]) {\n        setRdf({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else if (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0]) {\n        setJson({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else {\n        console.error(\"something weird happened!\")\n      }\n    }\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  const files = [rdf, json].filter(item => item !== undefined);\n\n  return (\n    <>\n      {json !== undefined && rdf !== undefined \n        ? <> </>\n        : <DropzoneArea\n        fileObjects={files.map(item => item.file)}\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      /> }\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {json !== undefined && rdf !== undefined && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\nimport FileHandler from '../../utils/filesHandler';\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback, () => {});\n    fileHandler2.get_remote_file(getJsonURL(url), callback, () => {});\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\nimport KeyboardTabIcon from '@material-ui/icons/KeyboardTab';\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)} className='shrink-btn'>\n            {!expand ? <KeyboardTabIcon/> : <img src={ToggleLeft} alt='Toggle'/>}\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node?.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if ((nodes.length !== nodeIds?.length) && (nodes[0] === nodeIds?.[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    } else {\n      setNodes([]);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n        selected={[nodeSelected?.tree_node?.id]}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n          className='shrink-btn'\n        >\n          <SearchRoundedIcon />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","import { ADD_DATASET } from '../../constants';\nimport {Box, Button, Divider, Typography} from '@material-ui/core';\nimport config from \"./../../config/app.json\";\n\n\nconst SidebarFooter = (props) => {\n\n  return (\n    <Box>\n        <Divider style={{marginBottom: '1rem', background: 'rgba(255, 255, 255, 0.10)'}} />\n      <Box display=\"flex\" justifyContent= { props.local ? \"space-around\" : \"center\"}>\n        { props.local ? <Button\n          variant='contained'\n          disableElevation\n          color='primary'\n          fullWidth\n          onClick={() => props.setOpenUploadDialog(true)}\n        >\n            + {ADD_DATASET}\n        </Button> : null }\n        <Button\n          variant='contained'\n          disableElevation\n          color='primary'\n          fullWidth\n          onClick={() => props.setOpenDatasetsListDialog(true)}\n        >\n            + {props.expand ? config.text.datasetsButtonText : null}\n        </Button>\n      </Box>\n        <Divider style={{margin: '1rem 0', background: 'rgba(255, 255, 255, 0.10)'}} />\n\n        {\n            props.expand && <Box display=\"flex\" justifyContent=\"center\">\n                <Typography variant='subtitle2' style={{color: '#fff'}}> Powered by MetaCell</Typography>\n            </Box>\n        }\n\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openUploadDialog={props.openUploadDialog}\n        setOpenUploadDialog={props.setOpenUploadDialog}\n        openDatasetsListDialog={props.openDatasetsListDialog}\n        setOpenDatasetsListDialog={props.setOpenDatasetsListDialog}\n        local={props.local}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n  grey700,\n  grey500,\n  grey100,\n  grey400,\n  grey50,\n  grey25,\n  grey600,\n  gray800,\n  gray400,\n  gray25\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.5rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0.25rem 0.375rem',\n          fontSize: '.75rem',\n          color: gray400,\n          backgroundColor: gray25,\n          borderRadius: '0.3125rem'\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: grey500,\n        height: '2.375rem',\n        borderRadius: `${radius} !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: grey500,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: grey100,\n        '&::placeholder': {\n          color: grey100,\n          fontWeight: '400',\n          fontSize: '.75rem'\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        fontWeight: 600,\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        padding: '0.75rem',\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.sidebar-body': {\n          boxShadow: '0px -75px 49px -41px #212B45 inset',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '& .overlay-button-container': {\n          position: 'sticky',\n          bottom: 0,\n          zIndex: 1000,\n          padding: '20px 0',\n          background: 'linear-gradient(180deg, rgb(255 255 255 / 87%) 8%, #FFF 100%)',\n          display: 'flex',\n          justifyContent: 'center',\n        },\n        '& .overlay-button': {\n          padding: '10px 20px',\n          width: '3rem',\n          height: '3rem',\n          backgroundColor: 'rgba(46, 58, 89, 0.10)',\n          color: '#2E3A59',\n          borderRadius: '50%',\n          cursor: 'pointer',\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: grey700,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n              '&.shrink-btn': {\n                backgroundColor: grey25,\n                color: grey600,\n\n                '& .MuiSvgIcon-root': {\n                  fontSize: '1rem',\n                }\n              }\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: grey400,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: grey50,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: grey100,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                cursor: 'pointer',\n                lineHeight: 'normal',\n                color: '#475467',\n                fontSize: '0.75rem',\n                fontWeight: 500,\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n              color: '#9198AB'\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& .title-container':{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '1.3rem',\n\n              '& h3': {\n                marginBottom: 0,\n                marginLeft: '.25rem'\n              }\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: gray800,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n                marginTop: '.5rem',\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                  color: gray400,\n                  fontSize: '.75rem',\n                  fontWeight: '400',\n                  lineHeight: '1rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '1rem',\n          zIndex: '100',\n        },\n        '.user-manual_controls': {\n          position: 'absolute',\n          bottom: '0',\n          right : '0rem',\n          zIndex: '100',\n          padding: '.5rem'\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import {SvgIcon} from \"@material-ui/core\";\nexport const DatasetIcon = (props) => (\n    <SvgIcon width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" {...props}>\n        <rect width=\"48\" height=\"48\" rx=\"24\" fill=\"#3779E1\" fill-opacity=\"0.1\"/>\n        <path d=\"M15.3086 16.1797C15.3086 18.0664 18.6133 19.3906 23.5 19.3906C28.3867 19.3906 31.6914 18.0664 31.6914 16.1797C31.6914 14.2109 28.4102 12.8398 23.5 12.8398C18.5898 12.8398 15.3086 14.2109 15.3086 16.1797ZM23.5 26.6445C19.1523 26.6445 15.8945 25.6602 13.4219 23.5625V16.1797C13.4219 13.2266 17.4531 11.1875 23.5 11.1875C29.5469 11.1875 33.5781 13.2266 33.5781 16.1797V23.5625C31.1055 25.6602 27.8477 26.6445 23.5 26.6445ZM13.4219 30.3594V25.6016C16.0352 27.5234 19.2812 28.4141 23.5 28.4141C27.7188 28.4141 30.9648 27.5234 33.5781 25.6016V30.3594C33.5781 33.5938 29.5117 35.8789 23.5 35.8789C17.4883 35.8789 13.4219 33.5938 13.4219 30.3594Z\" fill=\"#3779E1\"/>\n    </SvgIcon>\n);\n\nexport const ViewTypeIcon = (props) => (\n    <SvgIcon width=\"12\" height=\"13\" viewBox=\"0 0 12 13\" fill=\"none\" {...props}>\n        <path d=\"M6.00293 7.39568C6.23113 7.39568 6.45363 7.32151 6.72747 7.16178L11.1888 4.57172C11.6509 4.30358 11.8277 4.0925 11.8277 3.77873C11.8277 3.47066 11.6509 3.25957 11.1888 2.99144L6.72747 0.401384C6.45363 0.241645 6.23113 0.16748 6.00293 0.16748C5.76903 0.16748 5.55224 0.241645 5.2727 0.401384L0.81141 2.99144C0.349307 3.25957 0.172453 3.47066 0.172453 3.77873C0.172453 4.0925 0.349307 4.30358 0.81141 4.57172L5.2727 7.16178C5.55224 7.32151 5.76903 7.39568 6.00293 7.39568ZM6.00293 10.2082C6.20831 10.2082 6.38517 10.1112 6.62478 9.96862L11.5253 7.0762C11.7364 6.94499 11.8334 6.75672 11.8334 6.57987C11.8334 6.34596 11.6623 6.152 11.5025 6.07783L6.21972 9.12999C6.13415 9.17563 6.06569 9.20986 6.00293 9.20986C5.93447 9.20986 5.86601 9.17563 5.78044 9.12999L0.497636 6.07783C0.337897 6.152 0.166748 6.34596 0.166748 6.57987C0.166748 6.75672 0.269438 6.95069 0.480522 7.0762L5.37539 9.96862C5.6207 10.1112 5.79185 10.2082 6.00293 10.2082ZM6.00293 12.8325C6.20831 12.8325 6.38517 12.7355 6.62478 12.5929L11.5253 9.70049C11.7307 9.58068 11.8334 9.38101 11.8334 9.20415C11.8334 8.97025 11.6623 8.78199 11.5025 8.70212L6.21972 11.76C6.13415 11.8056 6.06569 11.8399 6.00293 11.8399C5.93447 11.8399 5.86601 11.8056 5.78044 11.76L0.497636 8.70212C0.337897 8.78199 0.166748 8.97025 0.166748 9.20415C0.166748 9.38101 0.269438 9.58068 0.480522 9.70049L5.37539 12.5929C5.6207 12.7355 5.79185 12.8325 6.00293 12.8325Z\" fill=\"#435070\"/>\n    </SvgIcon>\n);\n\nexport const LabelIcon = (props) => (\n    <SvgIcon width=\"12\" height=\"13\" viewBox=\"0 0 12 13\" fill=\"none\" {...props}>\n        <path d=\"M5.5 12.9395C8.52344 12.9395 10.5391 11.7969 10.5391 10.1797V3.08984C10.5391 1.61328 8.52344 0.59375 5.5 0.59375C2.47656 0.59375 0.460938 1.61328 0.460938 3.08984V10.1797C0.460938 11.7969 2.47656 12.9395 5.5 12.9395ZM5.5 4.69531C3.04492 4.69531 1.4043 4.0332 1.4043 3.08984C1.4043 2.10547 3.04492 1.41992 5.5 1.41992C7.95508 1.41992 9.5957 2.10547 9.5957 3.08984C9.5957 4.0332 7.95508 4.69531 5.5 4.69531ZM5.5 5.58008C7.28711 5.58008 8.72266 5.22852 9.5957 4.63086V7.29688C8.62891 7.92383 7.06445 8.33398 5.5 8.33398C3.93555 8.33398 2.37109 7.92383 1.4043 7.29688V4.63086C2.27734 5.22852 3.71289 5.58008 5.5 5.58008ZM5.5 9.21875C7.03516 9.21875 8.55273 8.86133 9.5957 8.29297V10.1797C9.5957 11.2637 7.95508 12.0547 5.5 12.0547C3.04492 12.0547 1.4043 11.2637 1.4043 10.1797V8.29297C2.44727 8.86133 3.95898 9.21875 5.5 9.21875Z\" fill=\"#3779E1\"/>\n    </SvgIcon>\n);","import * as d3 from 'd3-force-3d'\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton, Tooltip,Typography, Box, Link, MenuItem, CircularProgress } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport HelpIcon from '@material-ui/icons/Help';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport { selectInstance } from '../../redux/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport {detailsLabel, GRAPH_SOURCE} from '../../constants';\nimport { rdfTypes, typesModel } from '../../utils/graphModel';\nimport config from \"./../../config/app.json\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\nimport {ViewTypeIcon} from \"../../images/Icons\";\n\nconst NODE_FONT = '500 5px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 1000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n  collapsedFolder : 'red'\n};\nconst TOP_DOWN = {\n  label : \"Tree View\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst LEFT_RIGHT = {\n  label : \"Vertical Layout\",\n  layout : \"lr\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial View\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst nodeSpace = 50;\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n\n  const updateNodes = (nodes, conflictNode, positionsMap, level, index) => {\n    let matchIndex = index;\n    for ( let i = 0; i < index ; i++ ) {\n      let conflict = nodes.find ( n => !n.collapsed && n?.parent?.id === nodes[i]?.parent?.id)\n      if ( conflict === undefined ){\n        conflict = nodes.find ( n => !n.collapsed )\n        if ( conflict === undefined ){\n          conflict = conflictNode;\n        }\n      }\n      matchIndex = nodes.findIndex( n => n.id === conflict.id );\n      if ( selectedLayout.layout === TOP_DOWN.layout ) {\n        let furthestLeft = conflict?.xPos;\n        if ( nodes[i].collapsed ) {\n          furthestLeft =  conflict.xPos - ((((matchIndex - i )/2))  * nodeSpace ); \n          nodes[i].xPos =furthestLeft;\n        }\n        positionsMap[level] = furthestLeft + nodeSpace;\n        nodes[i].fx = nodes[i].xPos;\n        nodes[i].fy = 50 * nodes[i].level;\n      } else if ( selectedLayout.layout === LEFT_RIGHT.layout ) {\n        let furthestLeft = conflict?.yPos;\n        if ( nodes[i].collapsed ) {\n          furthestLeft =  conflict.yPos - ((((matchIndex - i )/2))  * nodeSpace ); \n          nodes[i].yPos =furthestLeft;\n        }\n        positionsMap[level] = furthestLeft + nodeSpace;\n        nodes[i].fy = nodes[i].yPos;\n        nodes[i].fx = 50 * nodes[i].level;\n      }\n    }\n  }\n\n  const algorithm = (levels, furthestLeft) => {\n    let positionsMap = {};\n    let levelsMapKeys = Object.keys(levels);\n\n    levelsMapKeys.forEach( level => {\n      furthestLeft =  0 - (Math.ceil(levels[level].length)/2  * nodeSpace ); \n      positionsMap[level] = furthestLeft + nodeSpace;\n      levels[level]?.sort( (a, b) => { \n        if (a?.id < b?.id) return -1;\n        else return 1;\n      });        \n    });\n\n    // Start assigning the graph from the bottom up\n    let neighbors = 0;\n    levelsMapKeys.reverse().forEach( level => {\n      let collapsedInLevel = levels[level].filter( n => n.collapsed);\n      let notcollapsedInLevel = levels[level].filter( n => !n.collapsed);\n      levels[level].forEach ( (n, index) => {\n            neighbors = n?.neighbors?.filter(neighbor => { return neighbor.level > n.level });\n            if ( !n.collapsed ) {\n              if ( neighbors?.length > 0  ) {\n                  let max = Number.MIN_SAFE_INTEGER, min = Number.MAX_SAFE_INTEGER;\n                  neighbors.forEach( neighbor => {\n                      if ( selectedLayout.layout === TOP_DOWN.layout ) {\n                        if ( neighbor.xPos > max ) { max = neighbor.xPos };\n                        if ( neighbor.xPos <= min ) { min = neighbor.xPos };\n                      } else if ( selectedLayout.layout === LEFT_RIGHT.layout ) {\n                        if ( neighbor.yPos > max ) { max = neighbor.yPos };\n                        if ( neighbor.yPos <= min ) { min = neighbor.yPos };\n                      }\n                  });\n                  if ( selectedLayout.layout === TOP_DOWN.layout ) {\n                    n.xPos = min === max ? min : min + ((max - min) * .5);\n                  } else if ( selectedLayout.layout === LEFT_RIGHT.layout ) {\n                    n.yPos = min === max ? min : min + ((max - min) * .5);\n                  }\n                  positionsMap[n.level] = n.yPos + nodeSpace;\n                  if ( notcollapsedInLevel?.length > 0 && collapsedInLevel.length > 0) {\n                    updateNodes(levels[level], n, positionsMap, level, index);\n                  }\n                  \n                  if ( selectedLayout.layout === TOP_DOWN.layout ) {\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                    n.fx = n.xPos;\n                    n.fy = 50 * n.level;\n                  } else if ( selectedLayout.layout === LEFT_RIGHT.layout ) {\n                    positionsMap[n.level] = n.yPos + nodeSpace;\n                    n.fy = n.yPos;\n                    n.fx = 50 * n.level;\n                  }\n              } else {\n                if ( selectedLayout.layout === TOP_DOWN.layout ) {\n                  n.xPos = positionsMap[n.level] + nodeSpace;\n                  positionsMap[n.level] = n.xPos;\n                  n.fx = n.xPos;\n                  n.fy = 50 * n.level;\n                } else if ( selectedLayout.layout === LEFT_RIGHT.layout ) {\n                  n.yPos = positionsMap[n.level] + nodeSpace;\n                  positionsMap[n.level] = n.yPos;\n                  n.fy = n.yPos;\n                  n.fx = 50 * n.level;\n                }\n              }\n          }else {\n            if ( selectedLayout.layout === TOP_DOWN.layout ) {\n              n.xPos = positionsMap[n.level] + nodeSpace;\n              positionsMap[n.level] = n.xPos;\n              n.fx = n.xPos;\n              n.fy = 50 * n.level;\n            } else if ( selectedLayout.layout === LEFT_RIGHT.layout ) {\n              n.yPos = positionsMap[n.level] + nodeSpace;\n              positionsMap[n.level] = n.yPos;\n              n.fy = n.yPos;\n              n.fx = 50 * n.level;\n            }\n          }              \n        })\n    });\n  }\n\n  const getPrunedTree = () => {\n    let nodesById = Object.fromEntries(window.datasets[props.graph_id].graph?.nodes?.map(node => [node.id, node]));\n    window.datasets[props.graph_id].graph?.links?.forEach(link => {\n      const source = link.source.id;\n      const target = link.target.id;\n      const linkFound = !nodesById[source]?.childLinks?.find( l =>\n        source === l.source.id && target ===  l.target.id \n      );\n      if ( linkFound ) {\n        nodesById[source]?.childLinks?.push(link);\n      }\n    });\n  \n    let visibleNodes = [];\n    const visibleLinks = [];\n\n    let levelsMap = window.datasets[props.graph_id].graph.levelsMap;\n    // // Calculate level with max amount of nodes\n    \n    (function traverseTree(node = nodesById[window.datasets[props.graph_id].graph?.nodes?.[0].id]) {\n      visibleNodes.push(node);\n      if (node.collapsed) return;\n      // let childLinks = node.childLinks?.filter( link => !link.source.collapsed && !link.target.collapsed );\n      visibleLinks.push(...node.childLinks);\n      let nodes = node.childLinks.map(link => (typeof link.target) === 'object' ? link.target : nodesById[link.target]);\n      nodes?.forEach(traverseTree);\n    })(); // IIFE\n\n    let levels = {};\n    visibleNodes.forEach( n => {\n      if ( levels[n.level] ){\n        levels[n.level].push(n);\n      } else {\n        levels[n.level] = [n];\n      }\n    })\n      \n    // Calculate level with max amount of nodes\n    let maxLevel = Object.keys(levels).reduce((a, b) => levels[a].length > levels[b].length ? a : b);\n    let maxLevelNodes = levels[maxLevel];\n\n    // Space between nodes\n    // The furthestLeft a node can be\n    let furthestLeft = 0 - (Math.ceil(maxLevelNodes.length)/2  * nodeSpace );\n\n    algorithm(levels, furthestLeft);\n\n    const graph = { nodes : visibleNodes, links : visibleLinks, levelsMap : levelsMap, hierarchyVariant : maxLevel * 20 };\n    return graph;\n  };\n\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(LEFT_RIGHT);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState({ nodes : [], links : []});\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n  const groupSelected = useSelector(state => state.sdsState.group_selected.graph_node);\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n    setForce();\n  };\n\n  const collapseSubLevels = (node, collapsed, children) => {\n    node?.childLinks?.forEach( n => {\n      if ( collapsed !== undefined ) n.target.collapsed = collapsed;\n      collapseSubLevels(n.target, collapsed, children);\n      children.links = children.links + 1;\n    });\n  }\n\n  const handleNodeLeftClick = (node, event) => {\n    if ( node.type === rdfTypes.Subject.key || node.type === rdfTypes.Sample.key || node.type === rdfTypes.Collection.key ) {\n      node.collapsed = !node.collapsed;\n      collapseSubLevels(node, node.collapsed, { links : 0 });\n      const updatedData = getPrunedTree();\n      setData(updatedData);\n    } \n    handleNodeHover(node);\n\n    if ( node?.id !== selectedNode?.id ) {\n      dispatch(selectInstance({\n        dataset_id: props.graph_id,\n        graph_node: node.id,\n        tree_node: node?.tree_reference?.id,\n        source: GRAPH_SOURCE\n      }));  \n    }\n    const divElement = document.getElementById(node.id + detailsLabel);\n    divElement?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    //setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n  const expandAll = (event) => {\n    window.datasets[props.graph_id].graph?.nodes?.forEach( node => {\n      collapsed ? node.collapsed = !collapsed : node.collapsed = node?.type === typesModel.NamedIndividual.subject.type;\n    })\n    let updatedData = getPrunedTree();\n    setData(updatedData);\n    setCollapsed(!collapsed)\n  }\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n  };\n\n  const setForce = () => {\n    if ( selectedLayout.layout !== TOP_DOWN.layout || selectedLayout.layout !== LEFT_RIGHT.layout ){\n      let force = -100;\n      graphRef?.current?.ggv?.current.d3Force('link').distance(0).strength(1);\n      graphRef?.current?.ggv?.current.d3Force(\"charge\").strength(force * 2);\n      graphRef?.current?.ggv?.current.d3Force('collision', d3.forceCollide(20)); \n      graphRef?.current?.ggv?.current.d3Force('x', d3.forceX());\n      graphRef?.current?.ggv?.current.d3Force('y', d3.forceY());\n      graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(node => force * Math.sqrt(100 / window.datasets[props.graph_id].graph.levelsMap[node.level]?.length )));\n    }\n    graphRef?.current?.ggv?.current.d3Force('center', null);\n  }\n\n  const onEngineStop = () => {\n    setForce();\n  }\n\n  useEffect(() => {\n    const updatedData = getPrunedTree();\n    setData(updatedData);\n    setLoading(true);\n    setForce();\n    setTimeout ( () => { \n      setLoading(false);\n      setForce();\n    }, LOADING_TIME);\n  }, []);\n\n  useEffect(() => {\n    const updatedData = getPrunedTree();\n    setData(updatedData);\n  },[selectedLayout]);\n\n  useEffect(() => {\n    document.addEventListener(\"nodeVisible\", (e) => {\n      let visibleNodes = e.detail;\n      let match = visibleNodes?.find( v => v?._attributes?.id === props.graph_id );\n      if ( match ) {\n        const updatedData = getPrunedTree();\n        setData(updatedData);\n        setTimeout( timeout => {\n          setForce()\n          resetCamera();\n        },100)\n      }\n    });\n    document.addEventListener(\"nodeResized\", (e) => {\n      let visibleNodes = e.detail;\n      let match = visibleNodes?.find( v => v?._attributes?.id === props.graph_id );\n      if ( match ) {\n        resetCamera();\n        let center =  graphRef?.current?.ggv?.current.centerAt();\n        setCameraPosition({ x :  center?.x , y :  center?.y });\n      }\n    });\n  });\n\n  useEffect(() => {\n    if ( groupSelected ) { \n      setSelectedNode(groupSelected);\n      handleNodeHover(groupSelected);\n      graphRef?.current?.ggv?.current.centerAt(groupSelected.x, groupSelected.y, ONE_SECOND);\n      graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    }\n  },[groupSelected]) \n\n  useEffect(() => {\n    if ( nodeSelected ) { \n      if ( nodeSelected?.id !== selectedNode?.id ){\n        let node = nodeSelected;\n        let collapsed = nodeSelected.collapsed\n        while ( node?.parent && !collapsed ) {\n          node = node.parent;\n          collapsed = node.collapsed\n        }\n        if ( collapsed ) {\n          node.collapsed = !node.collapsed;\n          collapseSubLevels(node, node.collapsed, { links : 0 });\n          const updatedData = getPrunedTree();\n          setData(updatedData);\n        }\n        setSelectedNode(nodeSelected);\n        handleNodeHover(nodeSelected);\n        graphRef?.current?.ggv?.current.centerAt(nodeSelected.x, nodeSelected.y, ONE_SECOND);\n        graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n      } else {\n        handleNodeHover(nodeSelected);\n      }\n    }\n  },[nodeSelected]) \n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 7.5;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 4.2, size * 4.2];\n      const hoverRectPosition = [node.x - hoverRectDimensions[0]/2, node.y - hoverRectDimensions[1]/2];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1],\n      ];\n      const hoverRectBorderRadius = 1;\n      ctx.beginPath();\n\n      try {\n        ctx.drawImage(\n          node?.img,\n          node.x - size,\n          node.y - size,\n          ...nodeImageSize\n        );\n      } catch (error) {\n        const img = new Image();\n        img.src = rdfTypes.Unknown.image;\n        node.img = img;\n\n        // Add default icon if new icon wasn't found under images\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      }\n\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 9).concat('...');\n      } else if ( Array.isArray(nodeName) ){\n        nodeName = nodeName[0]?.substr(0, 9).concat('...');\n      }\n      const textProps = [nodeName, node.x, textHoverPosition[1]];\n      if (node === hoverNode || node?.id === selectedNode?.id || node?.id === nodeSelected?.id ) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0],\n          hoverRectDimensions[1] / 4,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n      if ( node.childLinks?.length && node.collapsed ) {\n        let children = { links : 0 };\n        collapseSubLevels(node, undefined, children)\n        const collapsedNodes = [children.links, node.x, textHoverPosition[1]];\n        ctx.fillStyle = GRAPH_COLORS.collapsedFolder;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'bottom';\n        ctx.fillText(...collapsedNodes);\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n    },\n    [hoverNode]\n  );\n\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={ graphRef }\n        id = {props.graph_id}\n        // Graph data with Nodes and Links to populate\n        data={data}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        cooldownTicks={ ( selectedLayout.layout === TOP_DOWN.layout || selectedLayout.layout === LEFT_RIGHT.layout) ? 0 : data?.nodes?.length }\n        onEngineStop={onEngineStop}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        dagLevelDistance={( selectedLayout.layout !== TOP_DOWN.layout && selectedLayout.layout !== LEFT_RIGHT.layout  ) ? 0 : 60}\n        linkDirectionalParticles={1}\n        forceRadial={( selectedLayout.layout !== TOP_DOWN.layout && selectedLayout.layout !== LEFT_RIGHT.layout  ) ? 15 : 0}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => {\n          if ( selectedLayout.layout === TOP_DOWN.layout ){\n            node.fx = node.xPos;\n            node.fy = 50 * node.level;\n          } else if ( selectedLayout.layout === LEFT_RIGHT.layout ){\n            node.fx = 50 * node.level;\n            node.fy = node.yPos;\n          }\n          return 100 / (node.level + 1);\n        }}\n        nodeRelSize={2.5}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div>\n          <div className='graph-view_controls'>\n            <IconButton area-label=\"GraphLayout\" aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <Tooltip id=\"button-report\" title=\"Change Graph Layout\">\n                <ViewTypeIcon />\n              </Tooltip>\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n              <MenuItem selected={LEFT_RIGHT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(LEFT_RIGHT)}>{LEFT_RIGHT.label}</MenuItem>\n            </Menu>\n            <IconButton area-label=\"ZoomIn\" onClick={(e) => zoomIn()}>\n              <Tooltip id=\"button-report\" title=\"Zoom In\">\n                <AddRoundedIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"ZoomOut\" onClick={(e) => zoomOut()}>\n              <Tooltip id=\"button-report\" title=\"Zoom Out\">\n                <RemoveRoundedIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"ResetCamera\" onClick={(e) => resetCamera()}>\n              <Tooltip id=\"button-report\" title=\"Reset Camera\">\n                <RefreshIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"Expand\" onClick={(e) => expandAll(e)}>\n              <Tooltip id=\"button-report\" title={ !collapsed ? \"Collapse All\" : \"Expand All\"}>\n                { !collapsed ? <UnfoldLessIcon/> : <UnfoldMoreIcon /> }\n              </Tooltip>\n            </IconButton>\n            <LayersIcon />\n          </div>\n          <div className='user-manual_controls'>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems='end'>\n            <Typography justifyContent=\"right\" variant='subtitle2' color='primary'> Version 1</Typography>\n            <IconButton ustifyContent=\"right\" component={Link} area-label=\"report\" onClick={() => window.open(config.issues_url, '_blank')}>\n              <Tooltip id=\"button-report\" title=\"Report Issues\">\n                <BugReportIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton ustifyContent=\"right\" component={Link} area-label=\"manual\" onClick={() => window.open(config.docs_url, '_blank')}>\n              <Tooltip id=\"button-manual\" title=\"User Manual Documentation\">\n                <HelpIcon />\n              </Tooltip>\n            </IconButton>\n            </Box>\n          </div>\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n    Divider,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\nimport { useDispatch } from 'react-redux';\nimport { selectGroup } from '../../../../redux/actions';\nimport { GRAPH_SOURCE } from '../../../../constants';\n\n\nconst SimpleChip = ({chips, node}) => {\n  const dispatch = useDispatch();\n\n  const handleClick = (item, node) => {\n    if ( item.link ){\n      window.open(item.link, '_blank')\n    } else if ( item.value ) {\n      let urlCheck = new RegExp(\"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?\");\n      if(urlCheck.test(item.value)) {\n        window.open(item.value, '_blank')\n      } else {\n        if ( node ) {\n          dispatch(selectGroup({\n            dataset_id: node.dataset_id,\n            graph_node: node?.id,\n            tree_node: node?.tree_reference?.id,\n            source: GRAPH_SOURCE\n          }));\n        }\n      }\n    }\n  }\n\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => ( node === undefined\n        ? item.link ? \n        (<Chip label={item?.value} onClick={() => handleClick(item, null)}/>)\n        : (<Chip label={item?.value} />)\n        : (<Chip label={item?.value} onClick={() => handleClick(item, node)}/>)))\n      }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={item} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const simpleValue = (label, value) => {\n    if (value !== undefined) {\n        return (<SimpleLabelValue key={label} label={label} value={value} />);\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const isValidUrl = (urlString) => {\n    return /(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?\\/[a-zA-Z0-9]{2,}|((https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?)|(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}(\\.[a-zA-Z0-9]{2,})?/g.test(urlString);\n}","import {\n    Box,\n    Typography,\n    Divider,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport { detailsLabel } from '../../../constants';\nimport { useSelector } from 'react-redux'\nimport { isValidUrl } from './utils';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n    const filePropertiesModel = useSelector(state => state.sdsState.metadata_model.file);\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={node?.graph_node?.id + detailsLabel}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={\"\"} value={\"\"} heading={\"File Details\"} />\n\n                {filePropertiesModel?.map( property => {\n                    if ( property.visible ){\n                        const propValue = node.graph_node.attributes[property.property];\n                        if ( isValidUrl(propValue) ){\n                            return (<Box className=\"tab-content-row\">\n                                <Typography component=\"label\">{property.label}</Typography>\n                                <Links key={`detail_links_dataset`} href={propValue} title={property.label + \" Link\"} />\n                            </Box>)\n                        }\n\n                        else if ( typeof propValue === \"object\" ){\n                            return (<Box className=\"tab-content-row\">\n                                        <Typography component=\"label\">{property.label}</Typography>\n                                        <SimpleLinkedChip chips={node.graph_node.attributes[property.property]} />\n                                    </Box>)\n                        }\n\n                        else if ( typeof propValue === \"string\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        else if ( typeof propValue === \"number\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        return (<> </>)\n                    }\n                })}\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Divider,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <Typography component=\"h3\">Person Details</Typography>\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Name</Typography>\n                    <Links key={`name_href_link`} href={node.graph_node?.id} title={title.toString()} />\n                    {/* <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} /> */}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import {\n    Box,\n    Divider,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport Links from './Views/Links';\nimport { detailsLabel } from '../../../constants';\nimport { isValidUrl } from './utils';\nimport { useSelector } from 'react-redux'\n\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    const samplePropertiesModel = useSelector(state => state.sdsState.metadata_model.sample);\n\n    return (\n        <Box id={node?.graph_node?.attributes.localId + detailsLabel}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={\"\"} value={\"\"} heading={\"Sample Details\"} />\n\n                {samplePropertiesModel?.map( property => {\n                    if ( property.visible ){\n                        const propValue = node.graph_node.attributes[property.property]?.[0];\n                        if ( isValidUrl(propValue) ){\n                            return (<Box className=\"tab-content-row\">\n                                <Typography component=\"label\">{property.label}</Typography>\n                                <Links key={`detail_links_dataset`} href={propValue} title={property.label + \" Link\"} />\n                            </Box>)\n                        }\n\n                        else if ( typeof propValue === \"object\" ){\n                            return (<Box className=\"tab-content-row\">\n                                        <Typography component=\"label\">{property.label}</Typography>\n                                        <SimpleLinkedChip chips={node.graph_node.attributes[property.property]} />\n                                    </Box>)\n                        }\n\n                        else if ( typeof propValue === \"string\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        return (<> </>)\n                    }\n                })}\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    Divider,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\nimport { isValidUrl } from './utils';\nimport { useSelector } from 'react-redux'\nimport {DatasetIcon} from \"../../../images/Icons\";\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n\n    const datasetPropertiesModel = useSelector(state => state.sdsState.metadata_model.dataset);\n\n    return (\n        \n        <Box id={node.graph_node?.id + detailsLabel}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <Box className='title-container'>\n                    <DatasetIcon />\n                    <Typography component=\"h3\">Dataset Details</Typography>\n                </Box>\n                {datasetPropertiesModel?.map( property => {\n                    if ( property.visible ){\n                        const propValue = node.graph_node.attributes[property.property]?.[0];\n                        if ( isValidUrl(propValue) ){\n                            return (<Box className=\"tab-content-row\">\n                                <Typography component=\"label\">{property.label}</Typography>\n                                <Links key={`detail_links_dataset`} href={propValue} title={property.label + \" Link\"} />\n                            </Box>)\n                        }\n\n                        if ( typeof propValue === \"object\" ){\n                            return (<Box className=\"tab-content-row\">\n                                        <Typography component=\"label\">{property.label}</Typography>\n                                        <SimpleLinkedChip chips={node.graph_node.attributes[property.property]} />\n                                    </Box>)\n                        }\n\n                        if ( typeof propValue === \"string\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        return (<> </>)\n                    }\n                })}\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import {\n    Box,\n    Divider,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport {  simpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\nimport { rdfTypes } from \"../../../utils/graphModel\";\nimport { isValidUrl } from './utils';\nimport { useSelector } from 'react-redux'\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n\n    const subjectPropertiesModel = useSelector(state => state.sdsState.metadata_model.subject);\n\n    const getGroupNode = (groupName, node)=> {\n        let n = node.graph_node.parent;\n        let match = false;\n        while ( n && !match ) {\n            if ( n.name === groupName ) {\n              match = true;\n            } else {\n              n = n.parent;\n            }\n        }\n\n        return n;\n    }\n\n    return (\n        <Box id={node?.graph_node?.id + detailsLabel}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={\"\"} value={\"\"} heading={\"Subject Details\"} />\n\n                {subjectPropertiesModel?.map( property => {\n                    if ( property.visible ){\n                        const propValue = node.graph_node.attributes[property.property]?.[0];\n                        if ( property.isGroup ){\n                            return (<Box className=\"tab-content-row\">\n                                        <Typography component=\"label\">{property.label}</Typography>\n                                        <SimpleLinkedChip chips={[{ value : node.graph_node.attributes[property.property]}]} node={getGroupNode(node.graph_node.attributes[property.property][0], node)} />\n                                    </Box>)\n                        }\n\n                        else if ( isValidUrl(propValue) ){\n                            return (<Box className=\"tab-content-row\">\n                                <Typography component=\"label\">{property.label}</Typography>\n                                <Links key={`detail_links_dataset`} href={propValue} title={property.label + \" Link\"} />\n                            </Box>)\n                        }\n\n                        else if ( typeof propValue === \"object\" ){\n                            return (<Box className=\"tab-content-row\">\n                                        <Typography component=\"label\">{property.label}</Typography>\n                                        <SimpleLinkedChip chips={node.graph_node.attributes[property.property]} />\n                                    </Box>)\n                        }\n\n                        else if ( typeof propValue === \"string\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        return (<> </>)\n                    }\n                })}\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Divider,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Divider />\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Protocol Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />)\n                }\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import {\n    Box,\n    Divider,\n    Typography\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\nimport { useSelector } from 'react-redux'\nimport { isValidUrl } from './utils';\n\nconst GroupDetails = (props) => {\n    const { node } = props;\n    const groupPropertiesModel = useSelector(state => state.sdsState.metadata_model.group);\n    \n    return (\n        <Box className=\"secondary-sidebar_body\" id={node?.graph_node?.id + detailsLabel}>\n            <Divider />\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={\"\"} value={\"\"} heading={\"Group Details\"} />\n\n                {groupPropertiesModel?.map( property => {\n                    if ( property.visible ){\n                        const propValue = node.graph_node[property.property];\n                        if ( isValidUrl(propValue) ){\n                            return (<Box className=\"tab-content-row\">\n                                <Typography component=\"label\">{property.label}</Typography>\n                                <Links key={`detail_links_dataset`} href={propValue} title={property.label + \" Link\"} />\n                            </Box>)\n                        }\n\n                        else if ( typeof propValue === \"object\" ){\n                            return (<Box className=\"tab-content-row\">\n                                        <Typography component=\"label\">{property.label}</Typography>\n                                        <SimpleLinkedChip chips={node.graph_node[property.property]} />\n                                    </Box>)\n                        }\n\n                        else if ( typeof propValue === \"string\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        else if ( typeof propValue === \"number\" ){\n                            return (<SimpleLabelValue label={property.label} value={propValue} />)\n                        }\n\n                        return (<> </>)\n                    }\n                })}\n            </Box>\n        </Box>\n    );\n};\n\nexport default GroupDetails;\n","import React, {useEffect} from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { toggleMetadataItemVisibility } from '../../../redux/actions';\n\nimport {\n  Typography,\n  ListItemText,\n  ListItem,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\nconst SettingsItem = props => {\n  const { groupTitle, item } = props;\n    const dispatch = useDispatch();\n    const toggleItemDisabled = () => dispatch(toggleMetadataItemVisibility(groupTitle, item.key))\n\n  return (\n    <ListItem\n      disableGutters\n      style={{\n        display: \"flex\",\n        padding: \"1rem\",\n        boxShadow: \"0px 1px 0px 0px #E5E5E5\"\n      }}\n    >\n      {item.visible ? (\n        <ReorderIcon\n          style={{\n            color: \"rgba(46, 58, 89, 0.40)\",\n            marginRight: \"16px\",\n            fontSize: \"1rem\"\n          }}\n        />\n      ) : (\n        <VisibilityOffRoundedIcon\n          style={{\n            color: \"rgba(46, 58, 89, 0.40)\",\n            marginRight: \"16px\",\n            fontSize: \"1rem\"\n          }}\n        />\n      )}\n      <ListItemText\n        primary={\n          <Typography\n            variant=\"body2\"\n            style={{\n              color: \"rgba(46, 58, 89, 0.80)\",\n              fontWeight: \"600\",\n              fontSize: \".75rem\"\n            }}\n          >\n            {item.label}\n          </Typography>\n        }\n      />\n\n      <ListItemSecondaryAction style={{ right: \"2rem\" }}>\n        <IconButton\n          edge=\"end\"\n          aria-label={!item.visible ? \"add\" : \"delete\"}\n          onClick={toggleItemDisabled}\n          disableRipple\n        >\n          {!item.visible ? (\n            <AddCircleOutlineIcon\n              style={{ color: \"#3779E1\", fontSize: \"1rem\" }}\n            />\n          ) : (\n            <RemoveCircleOutlineIcon\n              style={{ color: \"#ED745D\", fontSize: \"1rem\" }}\n            />\n          )}\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default SettingsItem;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItemText,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  IconButton,\n  ListSubheader,\n  Button\n} from \"@material-ui/core\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport { TuneRounded } from \"@material-ui/icons\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\nimport { SPARC_DATASETS } from \"../../../constants\";\nimport SettingsItem from \"./SettingsItem\";\nconst SettingsListItems = props => {\n  const { provided, items, title } = props;\n  return (\n    <List\n      {...provided.droppableProps}\n      ref={provided.innerRef}\n      subheader={\n        <ListSubheader disableGutters disableSticky>\n          <Box\n            style={{\n              padding: \"1.5rem 0rem 1.5rem 1.5rem\",\n              boxShadow: \"0px 1px 0px 0px #E5E5E5\"\n            }}\n          >\n            <Typography variant=\"h6\" style={{ color: \"#2E3A59\" }}>\n              {title.charAt(0).toUpperCase() + title.slice(1)}\n            </Typography>\n          </Box>\n        </ListSubheader>\n      }\n    >\n      {items.map((item, index) => (\n        <Draggable\n          key={item.key}\n          draggableId={`${index}`}\n          index={index}\n          isDragDisabled={!item.visible}\n        >\n          {provided => (\n            <Box\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              <SettingsItem\n                item={item}\n                groupTitle={title}\n              />\n            </Box>\n          )}\n        </Draggable>\n      ))}\n      {provided.placeholder}\n    </List>\n  );\n};\n\nexport default SettingsListItems;\n","import React, {  useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport SettingsListItems from \"./SettingsListItems\";\nimport { useDispatch } from \"react-redux\";\nimport { updateMetaDataItemsOrder } from \"../../../redux/actions\";\nconst SettingsGroup = ({ title, group }) => {\n  const [items, setItems] = useState(group);\n  const dispatch = useDispatch();\n\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n\n    const itemsCopy = [...items];\n    const [reorderedItem] = itemsCopy.splice(result.source.index, 1);\n    itemsCopy.splice(result.destination.index, 0, reorderedItem);\n\n    setItems(itemsCopy);\n    dispatch(updateMetaDataItemsOrder({ groupTitle: title, newItemsOrder: itemsCopy }));\n  };\n\n  return (\n      <Box>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {provided => (\n                <SettingsListItems\n                    title={title}\n                    provided={provided}\n                    items={items}\n                />\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Box>\n  );\n};\n\nexport default SettingsGroup;\n","import { Box, Button, Typography } from \"@material-ui/core\";\nimport SettingsGroup from \"./SettingsGroup\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toggleSettingsPanelVisibility } from '../../../redux/actions';\nimport React, {useEffect, useState} from \"react\";\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport SettingsListItems from \"./SettingsListItems\";\n\n\nconst Settings = props => {\n  const dispatch = useDispatch();\n  const showSettingsContent = useSelector(state => state.sdsState.settings_panel_visible);\n  const metaDataPropertiesModel = useSelector(state => state.sdsState.metadata_model);\n  const save = () => {\n    dispatch(toggleSettingsPanelVisibility(!showSettingsContent));\n  };\n  return (\n    <Box style={{ position: \"relative\", maxHeight: \"84vh\", overflow: \"auto\" }}>\n        {\n            Object.keys(metaDataPropertiesModel).map(group => <SettingsGroup title={group} group={metaDataPropertiesModel[group]} />)\n        }\n      <Box\n        style={{\n          background:\n            \"linear-gradient(rgb(255 255 255 / 81%) 0%, rgb(255, 255, 255) 100%)\",\n          padding: \".75rem\",\n          position: \"sticky\",\n          bottom: 0,\n          zIndex: 1000,\n          display: \"flex\",\n          justifyContent: \"center\"\n        }}\n      >\n        <Button variant=\"contained\" disableElevation color=\"primary\" onClick={save} fullWidth>\n          Save\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Settings;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport GroupDetails from './Details/GroupDetails';\nimport Settings from \"./settings/Settings\"\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Group.key:\n                details = new Group(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                {/* <CollectionDetails node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} />\n                <CollectionDetails node={node} /> */}\n            </>\n        )\n    }\n\n    nodeDetail.getSettings = () => {\n        return (\n            <>\n                <Settings node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Group = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <GroupDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <GroupDetails node={node} />\n            </>\n        )\n    }\n    \n    nodeDetail.getSettings = () => {\n        return (\n            <>\n                <Settings node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n\n    nodeDetail.getSettings = () => {\n        return (\n            <>\n                <Settings node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n\n    nodeDetail.getSettings = () => {\n        return (\n            <>\n                <Settings node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n\n    nodeDetail.getSettings = () => {\n        return (\n            <>\n                <Settings node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n\n    nodeDetail.getSettings = () => {\n        return (\n            <>\n                <Settings node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement?.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        maxItems={2}\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography\n            variant=\"subtitle2\"\n            onClick={() => {goToLink(links?.current.id)}}\n            className=\"breadcrumb_selected\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import {Box} from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { IconButton } from '@material-ui/core';\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\nimport {TuneRounded} from \"@material-ui/icons\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toggleSettingsPanelVisibility } from '../../redux/actions';\n\nconst NodeDetailView = (props) => {\n  const dispatch = useDispatch();\n\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const showSettingsContent = useSelector(state => state.sdsState.settings_panel_visible);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  var latestNodeVisited = nodeSelected;\n  while ( latestNodeVisited.graph_node.parent !== undefined ) {\n    path.push(latestNodeVisited.graph_node.parent.id);\n    latestNodeVisited = {\n      tree_node: undefined,\n      graph_node: latestNodeVisited.graph_node.parent\n    };\n  };\n\n  otherDetails = path.reverse().map( singleNode => {\n    const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n    const new_node = {\n      dataset_id: nodeSelected.dataset_id,\n      graph_node: graph_node,\n      tree_node: graph_node.tree_reference\n    }\n    if (new_node.graph_node.id !== subject_key\n      && new_node.graph_node.id !== contributors_key\n      && new_node.graph_node.id !== protocols_key) {\n      links.pages.push({\n        id: singleNode,\n        title: graph_node.name,\n        href: '#'\n      });\n      return factory.createDetails(new_node).getDetail()\n    }\n    return <> </>;\n  });\n  links.current = {\n    id: nodeSelected.graph_node.id,\n    text: nodeSelected.graph_node.name\n  };\n  const toggleContent = () => {\n    dispatch(toggleSettingsPanelVisibility(!showSettingsContent));\n  };\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\" sx={{mt : \"1rem\"}}>\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      {\n        showSettingsContent && nodeDetails.getSettings ? nodeDetails.getSettings() : null\n      }\n      {\n        !showSettingsContent ?\n            <>\n          { otherDetails }\n          {nodeDetails.getDetail()}\n        </> : null\n      }\n      <NodeFooter />\n      { !showSettingsContent && <Box className='overlay-button-container'>\n        <IconButton className=\"overlay-button\" onClick={toggleContent}><TuneRounded /></IconButton>\n      </Box> }\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { rdfTypes } from \"../utils/graphModel\";\nimport {TOGGLE_METADATA_ITEM_VISIBILITY, UPDATE_METADATA_ITEMS_ORDER} from \"./actions\";\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        available_datasets : [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        group_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {},\n        settings_panel_visible : false,\n        metadata_model : {\n            dataset : [...rdfTypes.Dataset.properties],\n            subject : [...rdfTypes.Subject.properties],\n            sample : [...rdfTypes.Sample.properties],\n            group : [...rdfTypes.Group.properties],\n            file : [...rdfTypes.File.properties]\n        }\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_GROUP:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    group_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n            case Actions.SET_DATASET_LIST:\n                return {\n                    ...state,\n                    available_datasets: action.data.datasets\n                };\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case TOGGLE_METADATA_ITEM_VISIBILITY:\n            const { groupTitle, itemId } = action.data;\n            const updatedMetadataModel = { ...state.metadata_model };\n            const groupIndex = updatedMetadataModel[groupTitle].findIndex(item => item.key === itemId);\n\n            if (groupIndex !== -1) {\n                const itemToToggle = updatedMetadataModel[groupTitle][groupIndex];\n                itemToToggle.visible = !itemToToggle.visible;\n\n                // Toggle visibility first, then reorder items\n                updatedMetadataModel[groupTitle].sort((a, b) => {\n                    if (a.visible === b.visible) {\n                        // Preserve the original order for items with the same visibility\n                        return updatedMetadataModel[groupTitle].indexOf(a) - updatedMetadataModel[groupTitle].indexOf(b);\n                    } else {\n                        // Move visible items to the top\n                        return a.visible ? -1 : 1;\n                    }\n                });\n            }\n            return {\n                ...state,\n                metadata_model: { ...updatedMetadataModel }\n            };\n        case UPDATE_METADATA_ITEMS_ORDER:\n            const {  title, newItemsOrder } = action.payload;\n\n            return {\n                ...state,\n                metadata_model: {\n                    ...state.metadata_model,\n                    [title]: newItemsOrder,\n                },\n            };\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        case Actions.TOGGLE_METADATA_SETTINGS:\n            return { ...state, settings_panel_visible : action.data.visible};\n        default:\n            return state;\n    }\n}\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        case Actions.SELECT_GROUP:\n            break;\n        case Actions.SET_DATASET_LIST:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nexport default class FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback, errorCallback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            errorCallback && errorCallback(undefined);\n        });\n    }\n}\n","export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\n\nexport const RDF_TO_JSON_TYPES = [\n    {key: 'sparc:Subject', toTrim: 'subject'}\n];\n\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"Group\": {\n        \"image\": \"./images/graph/group.svg\",\n        \"key\": \"Group\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"name\",\n                \"property\": \"name\",\n                \"label\": \"Name\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"subjects\",\n                \"property\": \"subjects\",\n                \"label\": \"Number of Subjects\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"dc\",\n                \"key\": \"title\",\n                \"property\": \"title\",\n                \"label\": \"Title\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"Label\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"description\",\n                \"property\": \"description\",\n                \"label\": \"Description\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriPublished\",\n                \"property\": \"hasUriPublished\",\n                \"label\": \"Published URI\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"Contents Updated On\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"About\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"Protocol Employs Technique\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"Error Index\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"Template Schema Version\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"Experimental Modality\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalApproach\",\n                \"property\": \"hasExperimentalApproach\",\n                \"label\": \"Experimental Approach\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDoi\",\n                \"property\": \"hasDoi\",\n                \"label\": \"DOI\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAdditionalFundingInformation\",\n                \"property\": \"hasAdditionalFundingInformation\",\n                \"label\": \"Additional Funding Information\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"statusOnPlatform\",\n                \"property\": \"statusOnPlatform\",\n                \"label\": \"Status On Platform\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasLicense\",\n                \"property\": \"hasLicense\",\n                \"label\": \"License\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"URI Human\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"curationIndex\",\n                \"property\": \"curationIndex\",\n                \"label\": \"Curation Index\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"Award Number\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExpectedNumberOfSamples\",\n                \"property\": \"hasExpectedNumberOfSamples\",\n                \"label\": \"Expected Number of Samples\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExpectedNumberOfSubjects\",\n                \"property\": \"hasExpectedNumberOfSubjects\",\n                \"label\": \"Expected Number of Subjects\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"Responsible Principal Investigator\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriApi\",\n                \"property\": \"hasUriApi\",\n                \"label\": \"URI API\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasProtocol\",\n                \"property\": \"hasProtocol\",\n                \"label\": \"Protocol\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"URI Human\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasNumberOfContributors\",\n                \"property\": \"hasNumberOfContributors\",\n                \"label\": \"Number of Contributors\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasNumberOfDirectories\",\n                \"property\": \"hasNumberOfDirectories\",\n                \"label\": \"Number of Directories\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasNumberOfFiles\",\n                \"property\": \"hasNumberOfFiles\",\n                \"label\": \"Number of Files\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasNumberOfPerformances\",\n                \"property\": \"hasNumberOfPerformances\",\n                \"label\": \"Number of Performances\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasNumberOfSamples\",\n                \"property\": \"hasNumberOfSamples\",\n                \"label\": \"Number of Samples\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasNumberOfSubjects\",\n                \"property\": \"hasNumberOfSubjects\",\n                \"label\": \"Number of Subjects\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasPathErrorReport\",\n                \"property\": \"hasPathErrorReport\",\n                \"label\": \"Path Error Report\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasSizeInBytes\",\n                \"property\": \"hasSizeInBytes\",\n                \"label\": \"Size In Bytes\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"milestoneCompletionDate\",\n                \"property\": \"milestoneCompletionDate\",\n                \"label\": \"Milestone Completion Date\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"speciesCollectedFrom\",\n                \"property\": \"speciesCollectedFrom\",\n                \"label\": \"Species Collected From\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"submissionIndex\",\n                \"property\": \"submissionIndex\",\n                \"label\": \"Submission Index\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"unclassifiedIndex\",\n                \"property\": \"unclassifiedIndex\",\n                \"label\": \"Unclassified Index\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasCreatedAtTime\",\n                \"property\": \"wasCreatedAtTime\",\n                \"label\": \"Created At\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasUpdatedAtTime\",\n                \"property\": \"wasUpdatedAtTime\",\n                \"label\": \"Updated Last On\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"identifier\",\n                \"property\": \"identifier\",\n                \"label\": \"Label\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"mimetype\",\n                \"property\": \"mimetype\",\n                \"label\": \"Mimetype\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"size\",\n                \"property\": \"size\",\n                \"label\": \"Size\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"updated\",\n                \"property\": \"updated\",\n                \"label\": \"Updated On\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"publishedURI\",\n                \"property\": \"publishedURI\",\n                \"label\": \"Published URI\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"localId\",\n                \"label\": \"Label\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"URI Human\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"Age Category\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"hasAge\",\n                \"label\": \"Age\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeMin\",\n                \"property\": \"hasAgeMin\",\n                \"label\": \"Age Min\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeMax\",\n                \"property\": \"hasAgeMax\",\n                \"label\": \"Age Max\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"hasBiologicalSex\",\n                \"label\": \"Biological Sex\",\n                \"visible\" : true,\n                \"isGroup\" : true\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"Specimen has Identifier\",\n                \"visible\" : true,\n                \"isGroup\" : true\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"animalSubjectIsOfSpecies\",\n                \"label\": \"Subject Species\",\n                \"visible\" : true,\n                \"isGroup\" : true\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"animalSubjectIsOfStrain\",\n                \"label\": \"Subject Strain\",\n                \"visible\" : true,\n                \"isGroup\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"Assigned Group\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasGenotype\",\n                \"property\": \"hasGenotype\",\n                \"label\": \"Genotype\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"experimental_file\",\n                \"property\": \"experimental_file\",\n                \"label\": \"Experimental File\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"reference_atlas\",\n                \"property\": \"reference_atlas\",\n                \"label\": \"Reference Atlas\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder About It\",\n                \"visible\" : true\n            },            \n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"Derived Information as Participant\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Participant In Performance Of\",\n                \"visible\" : true\n            },\n        ],\n        \"additional_properties\": [\n            {\n                \"label\": \"Age unit\",\n                \"property\": \"ageUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age value\",\n                \"property\": \"ageValue\",\n                \"path\": [ \"TEMP:hasAge\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Age base unit\",\n                \"property\": \"ageBaseUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age base value\",\n                \"property\": \"ageBaseValue\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Weight unit\",\n                \"property\": \"weightUnit\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Weight value\",\n                \"property\": \"weightValue\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"rdf:value\", \"@value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            }\n        ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"Label\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"Human URI\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Related Folder\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from Subject\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"localId\",\n                \"label\": \"Local ID\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"Assigned Group\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"Derived Information as Participant\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Digital Artifact\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Extracted From Anatomical Region\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"sample_anatomical_location\",\n                \"property\": \"sample_anatomical_location\",\n                \"label\": \"Sample Anatomical Location\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"sample_type\",\n                \"property\": \"sample_type\",\n                \"label\": \"Sample Type\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Participant in Performance Of\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"Name\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"Last Name\",\n                \"visible\" : false\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"First Name\",\n                \"visible\" : false\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"Middle Name\",\n                \"visible\" : false\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasORCIDId\",\n                \"property\": \"hasORCIDId\",\n                \"label\": \"ORCID Id\",\n                \"visible\" : false\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAffiliation\",\n                \"property\": \"hasAffiliation\",\n                \"label\": \"Affiliation\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDataRemoteUserId\",\n                \"property\": \"hasDataRemoteUserId\",\n                \"label\": \"Data Remote User ID\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contributorTo\",\n                \"property\": \"contributorTo\",\n                \"label\": \"Contributor To\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"Label\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"Number of Steps\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"Human URI\",\n                \"visible\" : true\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDoi\",\n                \"property\": \"hasDoi\",\n                \"label\": \"DOI\",\n                \"visible\" : true\n            }\n        ]\n    },\n    \"RRID\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"RRID\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"NCBITaxon\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"NCBITaxon\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"PATO\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"PATO\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"UBERON\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"UBERON\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        group: {\n            \"type\": \"Group\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        },\n        RRID: {\n            \"type\": \"RRID\",\n        }\n    },\n    \"Class\": {\n        NCBITaxon: {\n            \"type\": \"NCBITaxon\",\n        },\n        PATO: {\n            \"type\": \"PATO\",\n        },\n        UBERON: {\n            \"type\": \"UBERON\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n"],"sourceRoot":""}
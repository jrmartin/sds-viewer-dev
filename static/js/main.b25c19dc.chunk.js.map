{"version":3,"sources":["constants.js","utils/Splinter.js","app/widgets.js","images/check.svg","components/FileUploader/UploadSubmit.js","images/tree/dataset.svg","images/tree/folder.svg","images/tree/file.svg","styles/constant.js","utils/nodesFactory.js","images/close.svg","components/DatasetsListViewer/DatasetsListSplinter.js","redux/actions.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","components/DatasetsListViewer/DatasetsListDialog.js","images/upload-icon.svg","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","components/FileUploader/UploadDialogHeader.js","components/FileUploader/UploadDialog.js","images/toggle-right.svg","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","images/plus.svg","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleLinkedChip.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/Views/SimpleChip.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/GroupDetails.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/store.js","redux/initialState.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","utils/filesHandler.js","utils/graphModel.js"],"names":["IMPORT_TEXT","ADD_DATASET","SPARC_DATASETS","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","maxFiles","detailsLabel","subject_key","protocols_key","contributors_key","GRAPH_SOURCE","TREE_SOURCE","SUBJECTS_LEVEL","PROTOCOLS_LEVEL","CRONTRIBUTORS_LEVEL","N3","require","ttl2jsonld","parse","Splinter","jsonFile","turtleFile","filterNode","node","basename","includes","this","factory","NodesFactory","types","jsonData","levelsMap","groups","turtleData","tree","undefined","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","store","Store","rdf_to_json","rdf_to_json_map","Map","tree_parents_map2","JSON","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","push","prefix","iri","String","forEach","toTrim","Array","isArray","RDF_TO_JSON_TYPES","some","item","key","id","replace","set","n","previousLevel","map","level","updateLevels","neighbors","processDataset","filteredNodes","filter","type","rdfTypes","UBERON","Award","Collection","children_counter","cleanLinks","Subject","Object","keys","attributes","subjects","Sample","samples","console","log","link","find","l","source","target","a","get","b","links","extractTurtle","processJSON","data","extractJson","initialiseNodesEdges","processTurtle","convertRDFToJson","create_graph","create_tree","mergeData","generateData","typeFound","typesModel","unknown","length","owl","rdfType","NamedIndividual","Class","ontology","sparc","split","pop","sparcType","graph_node","additional_properties","error","name","value","proxies","properties","tree_reference","collapsed","childLinks","proxy","Util","isBlankNode","subject","predicate","type_key","object","datatype","found","indexOf","update_node","newNode","NCBITaxon","PATO","RRID","label","dataset_node","ontology_node","get_type","typedNode","createNode","Unknown","delete","dataset","concat","updatedAbout","isAbout","replaceNode","updateTechniques","protocolEmploysTechnique","temp_edges","target_node","parent","config","order","group","groupID","groupNode","nodeF","img","Image","src","icon","tag","Group","protocols","Protocol","contributors","contributor","temp","organise_subjects","Person","derivedFrom","source_node","chidLinks","nodesToRemove","index","array","specimenHasIdentifier","subjectSpecies","biologicalSex","hasDerivedInformationAsParticipant","participantInPerformanceOf","hasUriHuman","File","uri_human","from","unshift","element","splice","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","children","hasFolderAboutIt","folder","jsonNode","buildFolder","folderChildren","child","linkToNode","child_node","tempChildren","copiedItem","newName","dataset_relative_path","new_node","buildNodeFromJson","node_id","identifier","relativePath","size","size_bytes","mimetype","updated","timestamp_updated","status","tree_root","generateLeaf","build_leaf","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","path","findReference","reference","NodeViewWidget","WidgetStatus","ACTIVE","component","panelName","enableClose","enableRename","enableDrag","UploadSubmit","handleClose","enabledButton","Button","variant","fullWidth","disableElevation","color","onClick","disabled","CHECK","alt","vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","createImage","extension","image","extractProperties","ttlTypes","property","type_property","json_prop","new_attribute","step","innerPath","trimType","parseFloat","Contributor","firstName","middleName","lastName","namesArray","Dataset","typed_node","DELETE_DATASET","SET_DATASET_LIST","SELECT_INSTANCE","TRIGGER_ERROR","SELECT_GROUP","addDataset","deleteDataset","setDatasetsList","datasets","selectInstance","instance","selectGroup","triggerError","message","error_message","hot","module","queryParams","URLSearchParams","window","location","search","datasetID","doi","dispatch","useDispatch","useState","openUploadDialog","setOpenUploadDialog","openDatasetsListDialog","setOpenDatasetsListDialog","useSelector","state","sdsState","doiMatch","initialised","setInitialised","loading","setLoading","turtle_url","json_url","splinter","fillDataset","turtle","json","getDatasetId","getGraph","getTree","_dataset","graph","addWidget","substring","graph_id","loadFiles","datasets_url","FileHandler","get_remote_file","url","loadDatsetFromDOI","fileData","file","DatasetsListSplinter","hasDoi","match","useEffect","fileHandler","summaryURL","repository_url","available_datasets","theme","display","className","open","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","useStore","LayoutManager","setComponent","myManager","getLayoutManagerInstance","model","visitNodes","setEventListener","visibleChild","_activeTabSet","_children","_visible","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","active","ErrorDialog","onClose","DatasetsListDialog","React","selectedIndex","setSelectedIndex","searchField","setSearchField","filteredDatasets","setFilteredDatasets","handleDone","getFormattedListTex","reg","RegExp","str","callback","hasUriApi","lowerCaseLabel","toLowerCase","loadDatasets","PaperProps","style","align","CLOSE","datasetsButtonText","datasetsButtonSubtitleText","datasetsDialogSearchText","onChange","lowerCaseSearch","filtered","selected","primary","dangerouslySetInnerHTML","__html","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","progress","errors","Box","Typography","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","UploadProgress","onDelete","setProgress","upload","CANCEL","cursor","UploadError","DELETE","FilesUploading","files","fileWrapper","totalFiles","Uploader","rdf","setRdf","setJson","onDrop","Math","random","nodeRef","useRef","fileObjects","e","showPreviewsInDropzone","accFiles","acceptedFiles","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","setFiles","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","fileHandler2","fileExt","curr","urls","base_url","shift","getJsonURL","CircularProgress","TabPanel","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","Tabs","Tab","UploadDialog","setValue","_json","_turtle","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","ToggleRight","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","nodeSelected","instance_selected","setNodes","setItems","widgets","layoutActions","globalId","matchingTitle","lowercaseSearch","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","justifyContent","Plus","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","flexDirection","margin","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","background","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","marginBottom","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","bottom","zIndex","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","collapsedFolder","TOP_DOWN","layout","maxNodesLevel","hierarchyVariant","RADIAL_OUT","radialVariant","nodeSpace","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","fill","GraphViewer","getPrunedTree","nodesById","fromEntries","visibleNodes","visibleLinks","maxLevel","reduce","traverseTree","selectedLayout","levels","maxLevelNodes","furthestLeft","ceil","positionsMap","levelsMapKeys","sort","reverse","collapsedInLevel","notcollapsedInLevel","neighbor","xPos","fx","fy","max","Number","MIN_SAFE_INTEGER","min","MAX_SAFE_INTEGER","conflictNode","matchIndex","i","conflict","findIndex","updateNodes","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","setCameraPosition","Boolean","setData","groupSelected","group_selected","setCollapsed","handleLayoutClose","handleLayoutChange","setForce","collapseSubLevels","resetCamera","ggv","zoomToFit","d3Force","distance","strength","force","d3","sqrt","updatedData","setTimeout","timeout","addEventListener","v","_attributes","center","centerAt","handleNodeHover","zoom","clear","add","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","fillText","collapsedNodes","d2","warmupTicks","onEngineStop","linkColor","has","linkWidth","dagLevelDistance","linkDirectionalParticles","forceRadial","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","nodeCanvasObject","nodeCanvasObjectMode","nodeVal","nodeRelSize","onNodeHover","onNodeClick","handleNodeLeftClick","onNodeRightClick","handleNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Tooltip","title","Menu","anchorEl","keepMounted","MenuItem","zoomIn","zoomOut","expandAll","NodeFooter","FILTER","PersonHeader","headingStyle","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","toString","DetailLinks","href","Link","LINKICON","SimpleChip","chips","handleClick","test","Chip","FileDetails","latestUpdate","Date","DETAILS_LIST","Links","SimpleLinkedChip","checksums","hex","cypher","List","ListItemText","PersonDetails","iterateSimpleValue","simpleValue","SampleDetails","hasAssignedGroup","hasDigitalArtifactThatIsAboutIt","wasExtractedFromAnatomicalRegion","DatasetDetails","description","contactPerson","hasResponsiblePrincipalInvestigator","user","designation","USER","hasContactPerson","errorIndex","hasDatasetTemplateSchemaVersion","hasExperimentalModality","SubjectDetails","weightUnit","weightValue","getGroupNode","groupName","hasAgeCategory","ageValue","ageUnit","ageBaseUnit","ageBaseValue","subjectStrain","ProtocolDetails","protocolHasNumberOfSteps","GroupDetails","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","getElementById","scrollIntoView","behavior","Breadcrumbs","DIVIDER","pages","page","componentMap","otherDetails","nodeDetails","singleNode","getDetail","latestNodeVisited","close","reducers","action","Actions","ids","slice","LayoutActions","SET_LAYOUT","createStore","all_tree","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","hostname","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","axios","progressCallback","reader","FileReader","onload","response","result","onprogress","lengthComputable","parseInt","loaded","total","readAsText","errorCallback","crossDomain","responseType","onDownloadProgress","progressEvent","catch","ORCID","awards","collection","sample"],"mappings":"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","file":"static/js/main.b25c19dc.chunk.js","sourcesContent":["export const IMPORT_TEXT = 'Load a new dataset';\nexport const ADD_DATASET = 'Load Dataset';\nexport const LIST_DATASETS = 'List Datasets';\nexport const SPARC_DATASETS = 'SPARC Datasets';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['json', 'ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\nexport const SUBJECTS_LEVEL = 2;\nexport const PROTOCOLS_LEVEL = 2;\nexport const CRONTRIBUTORS_LEVEL = 2;","import NodesFactory from './nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel,\n    RDF_TO_JSON_TYPES\n} from './graphModel';\n\nimport config from './../config/app.json';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key, SUBJECTS_LEVEL, PROTOCOLS_LEVEL, CRONTRIBUTORS_LEVEL\n} from '../constants';\n\nconst N3 = require('n3');\nconst ttl2jsonld = require('@frogcat/ttl2jsonld').parse;\n\nconst TMP_FILE = \".tmp\";\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.groups = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n        this.rdf_to_json = undefined;\n        this.rdf_to_json_map = undefined;\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n        this.tree_parents_map2 = new Map();\n        this.rdf_to_json_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    convertRDFToJson () {\n        this.rdf_to_json = ttl2jsonld(this.turtleFile);\n        this.rdf_to_json['@graph'].forEach(node => {\n            let found = false;\n            let toTrim = '';\n            if (Array.isArray(node['@type'])) {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'].includes(item.key)) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'] === item.key) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            if (found) {\n                let id = this.types[toTrim].iri.id + node['@id'].replace(toTrim + ':', '');\n                this.rdf_to_json_map.set(id, node);\n            }\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n    updateLevels(n, previousLevel) {\n        n?.map( node => {\n            if ( node?.level > previousLevel ){\n                this.updateLevels(node?.neighbors, node.level);\n                node.level = node.level + 1;\n            }\n        });\n\n        return;\n    }\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let filteredNodes = this.forced_nodes?.filter( n => n.type !== rdfTypes.UBERON.key && n.type !== rdfTypes.Award.key && !(n.type === rdfTypes.Collection.key && n.children_counter === 0));\n        let cleanLinks = [];\n        let that = this;\n        filteredNodes?.forEach( n => {\n            if ( n.type === rdfTypes.Subject.key ) {\n                let keys = Object.keys(that.groups);\n                keys.forEach( key => {\n                    if ( n.attributes ) {\n                        if ( n?.attributes[key] ) {\n                            that.groups[key][n.attributes[key][0]].subjects += 1; \n                        }\n                    }\n                })\n            }\n            if ( n.type === rdfTypes.Sample.key ) {\n                let keys = Object.keys(that.groups);\n                keys.forEach( key => {\n                    if ( n.attributes ){\n                        if ( n?.attributes[key] ) {\n                            that.groups[key][n.attributes[key][0]].samples += 1; \n                        }\n                    }\n                }) \n            }\n        })\n        console.log(\"Force edges \", this.forced_edges)\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = this.nodes.get( link.source );\n                const b = this.nodes.get( link.target );\n                if ( a && b && ( a?.type !== rdfTypes.Award.key && b?.type !== rdfTypes.Award.key )) {\n                    !a.neighbors && (a.neighbors = []);\n                    !b.neighbors && (b.neighbors = []);\n                    if ( !a.neighbors.find( n => n.id === b.id )){\n                        a.neighbors.push(b);\n                    }\n                    if ( !b.neighbors.find( n => n.id === a.id )){\n                        b.neighbors.push(a);\n                    }\n                    \n                    !a.links && (a.links = []);\n                    !b.links && (b.links = []);\n                    a.links.push(link);\n                    b.links.push(link);\n                    if ( !link.source.id ) {\n                        link.source = this.nodes.get(link.source)\n                    }\n        \n                    if ( !link.target.id ) {\n                        link.target = this.nodes.get(link.target)\n                    }\n                    cleanLinks.push(link);\n                }\n            }\n        });\n        return {\n            nodes: filteredNodes,\n            links: cleanLinks,\n            levelsMap : this.levelsMap\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.convertRDFToJson();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } if (type.type === this.types.owl.iri.id + \"Class\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.Class[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.Class[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        const additional_properties = this.rdf_to_json_map.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0,\n                collapsed: false,\n                childLinks : [],\n                additional_properties: additional_properties,\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n    replaceNode(a) {\n        let newNode = {\"value\": a};\n        if( a?.includes(rdfTypes.NCBITaxon.key) || a?.includes(rdfTypes.PATO.key) || a?.includes(rdfTypes.UBERON.key) || a?.includes(rdfTypes.RRID.key) ) {\n            let node = this.nodes.get(a);\n            if (node) {\n                newNode = {\"value\": node?.attributes.label[0], \"link\": node?.id};\n            }\n        }\n\n        return newNode;\n    }\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        let updatedAbout = [];\n        dataset_node.level = 1;\n        let that = this;\n        dataset_node?.attributes?.isAbout?.forEach( (a) => {\n            updatedAbout.push(that.replaceNode(a));\n        });\n        dataset_node.attributes.isAbout = updatedAbout;\n\n        let updateTechniques = [];\n        dataset_node.attributes.protocolEmploysTechnique?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updateTechniques.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updateTechniques.push({\"value\": a});\n                }\n            } else {\n                updateTechniques.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.protocolEmploysTechnique = updateTechniques;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges?.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_subjects(target_node, link, groups){\n        let parent = this.nodes.get(subject_key);\n        let keys = Object.keys(config.groups.order);\n        keys.forEach( key => {\n            let group = config.groups.order[key];\n            if ( target_node.attributes[key]?.[0] ) {\n                let source = this.nodes.get(target_node.attributes[key]?.[0]);\n                if ( source !== undefined ) {\n                    target_node.attributes[key][0] = source.attributes.label[0];\n                }\n                \n                const groupID = parent.id + \"_\" + target_node.attributes[key]?.[0].replace(/\\s/g, \"\");\n\n                if ( this.nodes.get(groupID) === undefined ) {\n                    let name = target_node.attributes[key]?.[0];\n\n                    const groupNode = {\n                        id: groupID,\n                        name: name,\n                        type: typesModel.NamedIndividual.group.type,\n                        properties: key,\n                        parent : parent,\n                        proxies: [],\n                        level: parent.level + 1,\n                        tree_reference: null,\n                        children_counter: 0,\n                        collapsed : false,\n                        childLinks : [],\n                        samples : 0, \n                        subjects : 0,\n                    };\n                    let nodeF = this.factory.createNode(groupNode);\n                    const img = new Image();\n                    img.src = group.icon;\n                    nodeF.img = img;\n                    this.nodes.set(groupID, nodeF);\n                    groups.push({\n                        source: parent.id,\n                        target: nodeF.id\n                    });\n                    this.groups[key] ? this.groups[key][nodeF.name] = nodeF :  this.groups[key] = {[nodeF.name] : nodeF};\n                    parent = groupNode;\n                } else {\n                    parent = this.nodes.get(groupID);\n                }\n            } else {\n                console.error(\"The group node already exists!\", group.tag);\n            }\n        });\n        link.source = parent.id;\n        target_node.level = parent.level + 1;\n        target_node.id = parent.id + target_node.name;\n        target_node.parent = parent;\n        target_node.childLinks = [];\n        target_node.collapsed = target_node.type === typesModel.NamedIndividual.subject.type;\n        this.nodes.set(target_node.id, target_node);\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: rdfTypes.Group.key,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            const img = new Image();\n            img.src =  \"./images/graph/group.svg\";\n            subjects.img = img; \n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0,\n            collapsed : false,\n            childLinks : []\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        let groups = [];\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                this.organise_subjects(target_node, link, groups);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && target_node.type === rdfTypes.Sample.key) {\n                link.source = target_node.attributes.derivedFrom[0];\n                target_node.level = subjects.level + 2;\n                target_node.parent = this.nodes.get(target_node.attributes.derivedFrom[0]);\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.chidLinks = [];\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n\n        this.forced_edges = this.forced_edges.concat(groups);\n    }\n\n\n    fix_links() {\n        let nodesToRemove = [];\n\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.Subject.key) {\n                if (node.attributes?.specimenHasIdentifier !== undefined) {\n                    let source = this.nodes.get(node.attributes.specimenHasIdentifier[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.specimenHasIdentifier[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.subjectSpecies !== undefined) {\n                    let source = this.nodes.get(node.attributes.subjectSpecies[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.subjectSpecies[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.biologicalSex !== undefined) {\n                    let source = this.nodes.get(node.attributes.biologicalSex[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.biologicalSex[0] = source.attributes.label[0];\n                    }\n                }\n\n                if (node.attributes?.hasDerivedInformationAsParticipant !== undefined && node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.hasDerivedInformationAsParticipant[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n\n                if (node.attributes?.participantInPerformanceOf !== undefined) {\n                    let source = this.nodes.get(node.attributes.participantInPerformanceOf[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.participantInPerformanceOf[0] = source.attributes.hasUriHuman[0];\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.File.key) {\n                if (node?.tree_reference?.uri_human  !== undefined) {\n                    node.tree_reference.uri_human = Array.from(this.nodes)[0][1].attributes.hasUriHuman[0];\n                }\n            }\n\n            if (node.type === rdfTypes.RRID.key || node.type === rdfTypes.NCBITaxon?.key || node.type === rdfTypes.PATO?.key) {\n                nodesToRemove.unshift(index);\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n\n        nodesToRemove.forEach(element => {\n            this.forced_nodes.splice(element, 1);\n        })\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                value.attributes.hasFolderAboutIt.forEach(folder => {\n                    let jsonNode = this.tree_map.get(folder);\n                    let newNode = this.buildFolder(jsonNode, value);\n                    let folderChildren = this.tree_parents_map2.get(newNode.parent_id)?.map(child => {\n                        child.parent_id = newNode.uri_api\n                        return child;\n                    });\n\n                    if (!this.filterNode(newNode) && (this.nodes.get(newNode.remote_id)) === undefined) {\n                        this.linkToNode(newNode, value);\n                    }\n\n                    if (this.tree_parents_map2.get(newNode.uri_api) === undefined) {\n                        this.tree_parents_map2.set(newNode.uri_api, folderChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        folderChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    } else {\n                        let tempChildren = folderChildren === undefined ? [...this.tree_parents_map2.get(newNode.uri_api)] : [...this.tree_parents_map2.get(newNode.uri_api), ...folderChildren];;\n                        this.tree_parents_map2.set(newNode.uri_api, tempChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        tempChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    buildFolder(item) {\n        let copiedItem = {...item};\n        let newName = copiedItem.dataset_relative_path.split('/')[0];\n        copiedItem.parent_id = copiedItem.remote_id;\n        copiedItem.remote_id = copiedItem.basename + '_' + newName;\n        copiedItem.uri_api = copiedItem.remote_id;\n        copiedItem.basename = newName;\n        // copiedItem.basename = copiedItem.remote_id;\n        return copiedItem;\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        new_node.id = parent.id + new_node.id;\n        node.remote_id = new_node.id;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        new_node.childLinks = [];\n        new_node.collapsed = new_node.type === typesModel.NamedIndividual.subject.type \n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map2.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root?.remote_id);\n        this.tree_parents_map?.delete(tree_root?.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        if ( node ) {\n            node.id = node?.uri_api\n            node.parent = true;\n            node.text = parent !== undefined ? node?.basename : this.dataset_id;\n            node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n            node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n            if (!node.items) {\n                node.items = [];\n            }\n            node.graph_reference = this.findReference(node.remote_id);\n            if ( node.graph_reference === undefined ) {\n                node.graph_reference = this.findReference(node.uri_api);\n            }\n            this.tree_map.set(node.id, node);\n            const newNode = {\n                id: node.uri_api,\n                text: node.text,\n                items: node.items,\n                graph_reference: node?.graph_reference?.id,\n                path: node.path\n            }\n            return newNode;\n        } else {\n            return {}\n        }\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose, enabledButton }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n      disabled={enabledButton}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: 8,\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: 'rgba(46, 58, 89, 0.4)',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n};\n\nexport default vars;\n","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        if ( node.type !== \"Group\" ) {\n            img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)].image : rdfTypes.Unknown.image\n        }\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node.additional_properties) {\n        for (const json_prop of rdfTypes[node.type].additional_properties) {\n            let new_attribute = node.additional_properties;\n            for (const step of json_prop.path) {\n                if (new_attribute[step] !== undefined) {\n                    new_attribute = new_attribute[step];\n                } else {\n                    new_attribute = undefined;\n                    break;\n                }\n            }\n            if (new_attribute !== undefined) {\n                if (typeof new_attribute === 'object' && new_attribute !== null && new_attribute[json_prop.innerPath]) {\n                    new_attribute = new_attribute[json_prop.innerPath];\n                }\n\n                node.attributes[json_prop.property] = [];\n                if (json_prop.type === 'string') {\n                    node.attributes[json_prop.property].push(new_attribute.replace(json_prop.trimType, ''));\n                } else {\n                    node.attributes[json_prop.property].push(parseFloat(new_attribute));\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","import NodesFactory from './../../utils/nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel\n} from './../../utils/graphModel';\n\nconst N3 = require('n3');\n\nconst TMP_FILE = \".tmp\";\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.proxies_map = undefined;\n        this.forced_nodes = undefined;\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.proxies_map = new Map();\n    }\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        return {\n            nodes: this.forced_nodes\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.create_graph();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if (target_node.type === rdfTypes.Dataset.key){\n                return true;\n            }\n            return false;\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n                value.proxies.every(proxy => {\n                    return true;\n                })\n            \n            return value;\n        })\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SET_DATASET_LIST = 'SET_DATASET_LIST'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\nexport const SELECT_GROUP = 'SELECT_GROUP'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const setDatasetsList = datasets => ({\n    type: SET_DATASET_LIST,\n    data: { datasets: datasets },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const selectGroup = instance => ({\n    type: SELECT_GROUP,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});","import './flexlayout.css';\nimport theme from './theme';\nimport { useState, useEffect } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport Splinter from './utils/Splinter';\nimport MainLayout from './app/mainLayout';\nimport FileHandler from './utils/filesHandler';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport DatasetsListDialog from './components/DatasetsListViewer/DatasetsListDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { addDataset } from './redux/actions';\nimport { NodeViewWidget } from './app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport DatasetsListSplinter from \"./components/DatasetsListViewer/DatasetsListSplinter\";\n\nimport config from './config/app.json';\n\nconst App = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const datasetID = queryParams.get('id');\n  const doi = queryParams.get('doi');\n\n  const dispatch = useDispatch();\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  const [openDatasetsListDialog, setOpenDatasetsListDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n  const [_turtle, setTurtle] = useState(undefined);\n  const [_json, setJson] = useState(undefined);\n  const [doiMatch, setDoiMatch] = useState(true);\n  const [initialised, setInitialised] = useState(false);\n  const [loading, setLoading] = useState(() => {\n    if (datasetID && datasetID !== \"\") {\n      return true;\n    }\n    if (doi && doi !== \"\") {\n      return true;\n    }\n    return false;\n  });\n\n\n  let turtle_url = '';\n  let json_url = '';\n  let splinter = undefined;\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter\n    };\n    console.log(\"Graph \", _dataset.graph);\n\n    dispatch(addDataset(_dataset));\n    dispatch(addWidget({\n      id: _dataset.id,\n      name: _dataset.id.substring(0,10) + \"... Graph\",\n      component: \"graphComponent\",\n      panelName: \"leftPanel\",\n      enableClose: true,\n      enableRename: true,\n      enableDrag: true,\n      status: WidgetStatus.ACTIVE,\n      config: {\n        graph_id: _dataset.id,\n        component: \"graphComponent\",\n      }\n    }));\n    dispatch(addWidget(NodeViewWidget));\n    setLoading(false);\n  }\n\n  const loadTurtleFile = async () => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n    const ttlHandler = new FileHandler();\n    ttlHandler.get_remote_file(turtle_url, (url, data) => {\n      if (data) {\n        setTurtle(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadJSONFile = async (datasetID) => {\n    json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n    const jsonHandler = new FileHandler();\n    jsonHandler.get_remote_file(json_url, (url, data) => {\n      if (data) {\n        setJson(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadFiles = async(datasetID) => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n      const ttlHandler = new FileHandler();\n      ttlHandler.get_remote_file(turtle_url, (url, turtleData) => {\n        if (turtleData) {\n          json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n          const jsonHandler = new FileHandler();\n          jsonHandler.get_remote_file(json_url, (url, jsonData) => {\n            if (turtleData && jsonData && !initialised) {\n              fillDataset(turtleData, jsonData);\n              setInitialised(true);\n            }\n          }, () => {\n            setLoading(false);\n          });\n        }\n      },null);\n  }\n\n  const loadDatsetFromDOI = async (url, fileData) => {\n    let file = {\n      id: \"ttl\",\n      url: url,\n      data: fileData,\n      file: { name: \"ttl\", type: \"text/turtle\" },\n    };\n    const splinter = new DatasetsListSplinter(undefined, file.data);\n    let graph = await splinter.getGraph();\n    console.log(\"Graph \", graph);\n    let datasets = graph.nodes.filter((node) => node?.attributes?.hasDoi);\n    const match = datasets.find( node => node.attributes?.hasDoi?.[0]?.includes(doi));\n    if ( match ) {\n      const datasetID = match.name;\n      loadFiles(datasetID);\n    } else {\n      setLoading(false);\n      setInitialised(false);\n    }\n  };\n\n  useEffect(() => {\n    if (datasetID && datasetID !== \"\" ) {\n      loadFiles(datasetID);\n    }\n\n    if (doi && doi !== \"\" ) {\n      if ( doiMatch ){\n        const fileHandler = new FileHandler();\n        const summaryURL = config.repository_url + config.available_datasets;\n        fileHandler.get_remote_file(summaryURL, loadDatsetFromDOI);\n      }\n    }\n  }, []);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" className='main-structure'>\n        <Sidebar\n          openUploadDialog={openUploadDialog}\n          setOpenUploadDialog={setOpenUploadDialog}\n          openDatasetsListDialog={openDatasetsListDialog}\n          setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n        />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                loading={loading}\n                openUploadDialog={openUploadDialog}\n                setOpenUploadDialog={setOpenUploadDialog}\n                openDatasetsListDialog={openDatasetsListDialog}\n                setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openUploadDialog}\n        handleClose={() => setOpenUploadDialog(false)}\n      />\n\n      <DatasetsListDialog\n        open={openDatasetsListDialog}\n        handleClose={() => setOpenDatasetsListDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    let visibleChild = myManager.model._activeTabSet._children.filter(element => \n                        element._visible\n                    );\n                    const event = new CustomEvent('nodeResized', {\n                        detail: visibleChild\n                    });\n                    document.dispatchEvent(event);\n\n                });\n                node.setEventListener(\"visibility\", (node, data) => {\n                    let visibleChild = myManager.model._activeTabSet._children.filter(element => \n                        !element._visible\n                    );\n                    const event = new CustomEvent('nodeVisible', {\n                        detail: visibleChild\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport Loader from '@metacell/geppetto-meta-ui/loader/Loader';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT, SPARC_DATASETS } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      { (props.loading)\n        ? <>\n          <Loader active={props.loading} />\n        </>\n        : <>\n            <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n            <Button\n              variant='outlined'\n              disableElevation\n              color='primary'\n              onClick={() => props.setOpenDatasetsListDialog(true)}\n            >\n              + { SPARC_DATASETS }\n            </Button>\n        </>\n      }\n\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Dialog,\n  DialogActions,\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  TextField,\n  DialogTitle,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { addDataset, setDatasetsList } from \"../../redux/actions\";\nimport Splinter from \"./../../utils/Splinter\";\nimport { NodeViewWidget } from \"../../app/widgets\";\nimport { addWidget } from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport DatasetsListSplinter from \"./DatasetsListSplinter\";\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport FileHandler from \"../../utils/filesHandler\";\nimport UploadSubmit from \"./../FileUploader/UploadSubmit\";\nimport CLOSE from '../../images/close.svg';\n\nimport config from \"./../../config/app.json\";\n\nconst DatasetsListDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(undefined);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const datasets = useSelector((state) => state.sdsState.available_datasets);\n  const [filteredDatasets, setFilteredDatasets] = React.useState(datasets);\n\n  let turtle_url = \"\";\n  let json_url = \"\";\n  let splinter = undefined;\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter,\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(\n      addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0, 10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        },\n      })\n    );\n    dispatch(addWidget(NodeViewWidget));\n  };\n\n  const handleDone = (dataset) => {\n    turtle_url =\n      config.datasets_url + dataset + \"/LATEST/curation-export.ttl\";\n    const fileHandler = new FileHandler();\n    fileHandler.get_remote_file(turtle_url, (url, turtleData) => {\n      if (turtleData) {\n        json_url =\n          config.datasets_url +\n          dataset +\n          \"/LATEST/path-metadata.json\";\n        fileHandler.get_remote_file(json_url, (url, data) => {\n          if (data) {\n            fillDataset(turtleData, data);\n            setFilteredDatasets(datasets);\n            setSelectedIndex(undefined);\n            handleClose();\n          }\n        });\n      }\n    });\n  };\n\n  const loadDatasets = () => {\n    const fileHandler = new FileHandler();\n    const callback = async (url, fileData) => {\n      let file = {\n        id: \"ttl\",\n        url: url,\n        data: fileData,\n        file: { name: \"ttl\", type: \"text/turtle\" },\n      };\n      const splinter = new DatasetsListSplinter(undefined, file.data);\n      let graph = await splinter.getGraph();\n      let datasets = graph.nodes.filter((node) => node?.attributes?.hasUriApi);\n      datasets.forEach( node => node.attributes ? node.attributes.lowerCaseLabel = node.attributes?.label?.[0]?.toLowerCase() : null );\n      dispatch(setDatasetsList(datasets));\n      setFilteredDatasets(datasets);\n    };\n    const summaryURL = config.repository_url + config.available_datasets;\n    fileHandler.get_remote_file(summaryURL, callback);\n  };\n\n  const handleChange = (event) => {\n    const lowerCaseSearch = event.target.value.toLowerCase();\n    let filtered = datasets.filter((dataset) =>\n      dataset.attributes.lowerCaseLabel.includes(lowerCaseSearch) || dataset.name.includes(lowerCaseSearch)\n    );\n    setSearchField(lowerCaseSearch);\n    setFilteredDatasets(filtered);\n  };\n\n  const closeDialog = () => {\n    setFilteredDatasets(datasets);\n    setSelectedIndex(undefined);\n    handleClose();\n  }\n\n  const getFormattedListTex = (label) => {\n    const reg = new RegExp(searchField, 'gi');\n\n    return searchField === undefined || searchField === \"\" \n      ? \n      label \n      :\n      label.replace(reg, function(str) {return '<b>'+str+'</b>'});\n  }\n\n  useEffect(() => {\n    open && datasets.length === 0 && loadDatasets();\n  });\n\n  return (\n    <Dialog \n      className=\"datasets_dialog\"\n      open={open}\n      handleClose={closeDialog}\n      PaperProps={{\n        style: {\n          width : '50rem'\n        },\n      }}\n    >\n      <DialogTitle align=\"center\">\n        <img\n          className=\"dialog_close\"\n          src={CLOSE}\n          onClick={handleClose}\n          alt=\"Close\"\n        />\n        <Typography variant=\"h3\">{config.text.datasetsButtonText}</Typography>\n        <Typography variant=\"subtitle1\">{config.text.datasetsButtonSubtitleText}</Typography>\n      </DialogTitle>\n      {datasets.length > 0 ? (\n        <>\n          <Box className=\"datasets_list\">\n            <TextField\n              fullWidth\n              disabled={datasets.length === 0}\n              label={config.text.datasetsDialogSearchText}\n              id=\"fullWidth\"\n              onChange={handleChange}\n            />\n          </Box>\n          {filteredDatasets.length > 0 ? (\n            <Box className=\"datasets_list datasets_list_results\" align=\"right\">\n              <Typography>{filteredDatasets.length} found</Typography>\n            </Box>\n          )\n          :\n          null\n          }\n          <Box className=\"datasets_list\">\n            <Paper className=\"datasets_dialog_list\">\n              <List className=\"datasets_list\">\n                {filteredDatasets.map((dataset) => (\n                  <>\n                    <ListItem\n                      className=\"dataset_item\"\n                      key={`item-${dataset.name}`}\n                      selected={selectedIndex === dataset.name}\n                      onClick={(event) =>\n                        handleListItemClick(event, dataset.name)\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            type=\"caption\"\n                            className=\"dataset_list_text\"\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                getFormattedListTex(dataset.attributes?.label[0])\n                            }}\n                          />\n                        }\n                      />\n                    </ListItem>\n                    <Divider />\n                  </>\n                ))}\n              </List>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <Box className=\"datasets_list\">\n          <CircularProgress className=\"datasets_loader\" />\n        </Box>\n      )}\n      <Box className=\"datasets_list\">\n        <UploadSubmit\n          handleClose={() => handleDone(selectedIndex)}\n          enabledButton={selectedIndex === undefined}\n        />\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default DatasetsListDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport FileHandler from '../../../utils/filesHandler';\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Done'\n        />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [rdf, setRdf] = useState(undefined);\n  const [json, setJson] = useState(undefined);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf({\n        ...rdf, data\n      })\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson({\n        ...json, data\n      })\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  }\n\n  const onDelete = (file)  => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf(undefined);\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson(undefined);\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  };\n\n  const onDrop = (files, accept = true) => {\n    for (const file of files) {\n      if (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1]) {\n        setRdf({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else if (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0]) {\n        setJson({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else {\n        console.error(\"something weird happened!\")\n      }\n    }\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  const files = [rdf, json].filter(item => item !== undefined);\n\n  return (\n    <>\n      {json !== undefined && rdf !== undefined \n        ? <> </>\n        : <DropzoneArea\n        fileObjects={files.map(item => item.file)}\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      /> }\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {json !== undefined && rdf !== undefined && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\nimport FileHandler from '../../utils/filesHandler';\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback, () => {});\n    fileHandler2.get_remote_file(getJsonURL(url), callback, () => {});\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/toggle-right.ce5f8e9f.svg\";","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport ToggleRight from '../../images/toggle-right.svg';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\n\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)}>\n          <img src={!expand ? ToggleRight : ToggleLeft} alt='Toggle' />\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if ((nodes.length !== nodeIds?.length) && (nodes[0] === nodeIds?.[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    } else {\n      setNodes([]);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n        selected={[nodeSelected?.tree_node?.id]}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '../../images/search.svg';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\n\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n        >\n          <img src={Search} alt='Search' />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","export default __webpack_public_path__ + \"static/media/plus.f6839d16.svg\";","import Plus from '../../images/plus.svg';\nimport { ADD_DATASET } from '../../constants';\nimport { Box, Button } from '@material-ui/core';\nimport config from \"./../../config/app.json\";\n\nconst SidebarFooter = (props) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\",\"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenUploadDialog(true)}\n      >\n        <img src={Plus} alt='Plus' />\n        {ADD_DATASET}\n      </Button>\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\", \"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenDatasetsListDialog(true)}\n      >\n        {config.text.datasetsButtonText}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openUploadDialog={props.openUploadDialog}\n        setOpenUploadDialog={props.setOpenUploadDialog}\n        openDatasetsListDialog={props.openDatasetsListDialog}\n        setOpenDatasetsListDialog={props.setOpenDatasetsListDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.25rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0 .375rem',\n          fontSize: '.75rem',\n          color: primaryTextColor,\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: lightBorderColor,\n        height: '2.375rem',\n        borderRadius: `${radius}px !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: lightBorderColor,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: inputTextColor,\n        '&::placeholder': {\n          color: inputTextColor,\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: secondaryColor,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              fontSize: 0,\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: lightBorderColor,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: noInstanceColor,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: noInstanceColor,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                color: placeHolderColor,\n                cursor: 'pointer',\n                lineHeight: 'normal',\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '0',\n          zIndex: '100',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import * as d3 from 'd3-force-3d'\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState, useEffect } from 'react';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\nimport { selectInstance } from '../../redux/actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport { GRAPH_SOURCE } from '../../constants';\nimport { rdfTypes, typesModel } from '../../utils/graphModel';\n\nconst NODE_FONT = '500 5px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 1000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n  collapsedFolder : 'red'\n};\nconst TOP_DOWN = {\n  label : \"Tree View\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial View\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst nodeSpace = 50;\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n\n  const updateNodes = (nodes, conflictNode, positionsMap, level, index) => {\n    let matchIndex = index;\n    for ( let i = 0; i < index ; i++ ) {\n      let conflict = nodes.find ( n => !n.collapsed && n?.parent?.id === nodes[i]?.parent?.id)\n      if ( conflict === undefined ){\n        conflict = nodes.find ( n => !n.collapsed )\n        if ( conflict === undefined ){\n          conflict = conflictNode;\n        }\n      }\n      matchIndex = nodes.findIndex( n => n.id === conflict.id );\n      let furthestLeft = conflict?.xPos;\n      if ( nodes[i].collapsed ) {\n        furthestLeft =  conflict.xPos - ((((matchIndex - i )/2))  * nodeSpace ); \n        nodes[i].xPos =furthestLeft;\n      }\n      positionsMap[level] = furthestLeft + nodeSpace;\n      nodes[i].fx = nodes[i].xPos;\n      nodes[i].fy = 50 * nodes[i].level;\n    }\n  }\n\n  const getPrunedTree = () => {\n    let nodesById = Object.fromEntries(window.datasets[props.graph_id].graph?.nodes?.map(node => [node.id, node]));\n    window.datasets[props.graph_id].graph?.links?.forEach(link => {\n      const source = link.source.id;\n      const target = link.target.id;\n      const linkFound = !nodesById[source]?.childLinks?.find( l =>\n        source === l.source.id && target ===  l.target.id \n      );\n      if ( linkFound ) {\n        nodesById[source]?.childLinks?.push(link);\n      }\n    });\n  \n    let visibleNodes = [];\n    const visibleLinks = [];\n\n    let levelsMap = window.datasets[props.graph_id].graph.levelsMap;\n    // // Calculate level with max amount of nodes\n    let maxLevel = Object.keys(levelsMap).reduce((a, b) => levelsMap[a].filter( l => !l.collapsed ).length > levelsMap[b].filter( l => !l.collapsed ).length ? a : b);\n    \n    (function traverseTree(node = nodesById[window.datasets[props.graph_id].graph?.nodes?.[0].id]) {\n      visibleNodes.push(node);\n      if (node.collapsed) return;\n      // let childLinks = node.childLinks?.filter( link => !link.source.collapsed && !link.target.collapsed );\n      visibleLinks.push(...node.childLinks);\n      let nodes = node.childLinks.map(link => (typeof link.target) === 'object' ? link.target : nodesById[link.target]);\n      nodes?.forEach(traverseTree);\n    })(); // IIFE\n\n    if ( selectedLayout.layout === TOP_DOWN.layout ){\n      let levels = {};\n      visibleNodes.forEach( n => {\n        if ( levels[n.level] ){\n          levels[n.level].push(n);\n        } else {\n          levels[n.level] = [n];\n        }\n      })\n      \n      // Calculate level with max amount of nodes\n      let highestLevel = Object.keys(levels).length;\n      let maxLevel = Object.keys(levels).reduce((a, b) => levels[a].length > levels[b].length ? a : b);\n      let maxLevelNodes = levels[maxLevel];\n\n      // Space between nodes\n      // The furthestLeft a node can be\n      let furthestLeft = 0 - (Math.ceil(maxLevelNodes.length)/2  * nodeSpace );\n      let positionsMap = {};\n\n      let levelsMapKeys = Object.keys(levels);\n\n      levelsMapKeys.forEach( level => {\n        furthestLeft =  0 - (Math.ceil(levels[level].length)/2  * nodeSpace ); \n        positionsMap[level] = furthestLeft + nodeSpace;\n        levels[level]?.sort( (a, b) => { \n          if (a?.id < b?.id) {\n            return -1;\n          }\n          if (a?.id > b?.id) {\n            return 1;\n          }\n          return 1;\n        });        \n      });\n\n      // Start assigning the graph from the bottom up\n      let neighbors = 0;\n      levelsMapKeys.reverse().forEach( level => {\n        let collapsedInLevel = levels[level].filter( n => n.collapsed);\n        let notcollapsedInLevel = levels[level].filter( n => !n.collapsed);\n        levels[level].forEach ( (n, index) => {\n              neighbors = n?.neighbors?.filter(neighbor => { return neighbor.level > n.level });\n              if ( !n.collapsed ) {\n                if ( neighbors?.length > 0  ) {\n                    let max = Number.MIN_SAFE_INTEGER, min = Number.MAX_SAFE_INTEGER;\n                    neighbors.forEach( neighbor => {\n                        if ( neighbor.xPos > max ) { max = neighbor.xPos };\n                        if ( neighbor.xPos <= min ) { min = neighbor.xPos };\n                    });\n                    n.xPos = min === max ? min : min + ((max - min) * .5);\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                    if ( notcollapsedInLevel?.length > 0 && collapsedInLevel.length > 0) {\n                      updateNodes(levels[level], n, positionsMap, level, index);\n                    }\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                    n.fx = n.xPos;\n                    n.fy = 50 * n.level;\n                } else {\n                  n.xPos = positionsMap[n.level] + nodeSpace;\n                  positionsMap[n.level] = n.xPos;\n                  n.fx = n.xPos;\n                  n.fy = 50 * n.level;\n                  \n                }\n            }else {\n              n.xPos = positionsMap[n.level] + nodeSpace;\n              positionsMap[n.level] = n.xPos ;\n              n.fx = n.xPos;\n              n.fy = 50 * n.level;\n            }              \n          })\n      });\n    }\n\n    const graph = { nodes : visibleNodes, links : visibleLinks, levelsMap : levelsMap, hierarchyVariant : maxLevel * 20 };\n    console.log(\"Graph \", graph);\n    return graph;\n  };\n\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(RADIAL_OUT);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState({ nodes : [], links : []});\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n  const groupSelected = useSelector(state => state.sdsState.group_selected.graph_node);\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n    setForce();\n  };\n\n  const collapseSubLevels = (node, collapsed, children) => {\n    node?.childLinks?.forEach( n => {\n      if ( collapsed !== undefined ) n.target.collapsed = collapsed;\n      collapseSubLevels(n.target, collapsed, children);\n      children.links = children.links + 1;\n    });\n  }\n\n  const handleNodeLeftClick = (node, event) => {\n    if ( node.type === rdfTypes.Subject.key || node.type === rdfTypes.Collection.key ) {\n      node.collapsed = !node.collapsed;\n      collapseSubLevels(node, node.collapsed, { links : 0 });\n      const updatedData = getPrunedTree();\n      setData(updatedData);\n    } \n\n    if ( node?.id !== selectedNode?.id ) {\n      dispatch(selectInstance({\n        dataset_id: props.graph_id,\n        graph_node: node.id,\n        tree_node: node?.tree_reference?.id,\n        source: GRAPH_SOURCE\n      }));  \n    }\n  };\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    //setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n  const expandAll = (event) => {\n    window.datasets[props.graph_id].graph?.nodes?.forEach( node => {\n      collapsed ? node.collapsed = !collapsed : node.collapsed = node?.type === typesModel.NamedIndividual.subject.type;\n    })\n    let updatedData = getPrunedTree();\n    setData(updatedData);\n    setCollapsed(!collapsed)\n  }\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n  };\n\n  const setForce = () => {\n    if ( selectedLayout.layout !== TOP_DOWN.layout ){\n      let force = -100;\n      graphRef?.current?.ggv?.current.d3Force('link').distance(0).strength(1);\n      graphRef?.current?.ggv?.current.d3Force(\"charge\").strength(force * 2);\n      graphRef?.current?.ggv?.current.d3Force('collision', d3.forceCollide(20)); \n      graphRef?.current?.ggv?.current.d3Force('x', d3.forceX());\n      graphRef?.current?.ggv?.current.d3Force('y', d3.forceY());\n      graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(node => force * Math.sqrt(100 / window.datasets[props.graph_id].graph.levelsMap[node.level]?.length )));\n    }\n    graphRef?.current?.ggv?.current.d3Force('center', null);\n  }\n\n  const onEngineStop = () => {\n    setForce();\n    if ( (!selectedNode || selectedNode?.level === 1) ) {\n      resetCamera();\n    } else if ( selectedNode?.level !== 1 && selectedNode.dataset_id === props.graph_id ){\n      graphRef?.current?.ggv?.current.centerAt(selectedNode.x, selectedNode.y, ONE_SECOND);\n      graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    } else {\n      resetCamera();\n    }\n  }\n\n  useEffect(() => {\n    const updatedData = getPrunedTree();\n    setData(updatedData);\n    setLoading(true);\n    setForce();\n    setTimeout ( () => { \n      setLoading(false);\n      setForce();\n    }, LOADING_TIME);\n  }, []);\n\n  useEffect(() => {\n    const updatedData = getPrunedTree();\n    setData(updatedData);\n    setTimeout( timeout => {\n      setForce();\n      resetCamera();\n    },100)\n  },[selectedLayout]);\n\n  useEffect(() => {\n    document.addEventListener(\"nodeVisible\", (e) => {\n      let visibleNodes = e.detail;\n      let match = visibleNodes?.find( v => v?._attributes?.id === props.graph_id );\n      if ( match ) {\n        const updatedData = getPrunedTree();\n        setData(updatedData);\n        setTimeout( timeout => {\n          setForce()\n          resetCamera();\n        },100)\n      }\n    });\n    document.addEventListener(\"nodeResized\", (e) => {\n      let visibleNodes = e.detail;\n      let match = visibleNodes?.find( v => v?._attributes?.id === props.graph_id );\n      if ( match ) {\n        resetCamera();\n        let center =  graphRef?.current?.ggv?.current.centerAt();\n        setCameraPosition({ x :  center?.x , y :  center?.y });\n      }\n    });\n  });\n\n  useEffect(() => {\n    if ( groupSelected ) { \n      setSelectedNode(groupSelected);\n      handleNodeHover(groupSelected);\n      graphRef?.current?.ggv?.current.centerAt(groupSelected.x, groupSelected.y, ONE_SECOND);\n      graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    }\n  },[groupSelected]) \n\n  useEffect(() => {\n    if ( nodeSelected ) { \n      if ( nodeSelected?.id !== selectedNode?.id ){\n        let node = nodeSelected;\n        let collapsed = nodeSelected.collapsed\n        while ( node?.parent && !collapsed ) {\n          node = node.parent;\n          collapsed = node.collapsed\n        }\n        if ( collapsed ) {\n          node.collapsed = !node.collapsed;\n          collapseSubLevels(node, node.collapsed, { links : 0 });\n          const updatedData = getPrunedTree();\n          setData(updatedData);\n        }\n        setSelectedNode(nodeSelected);\n        handleNodeHover(nodeSelected);\n        graphRef?.current?.ggv?.current.centerAt(nodeSelected.x, nodeSelected.y, ONE_SECOND);\n        graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n      } else {\n        handleNodeHover(nodeSelected);\n        graphRef?.current?.ggv?.current.centerAt(nodeSelected.x, nodeSelected.y, ONE_SECOND);\n        graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n      }\n    }\n  },[nodeSelected]) \n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 7.5;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 4.2, size * 4.2];\n      const hoverRectPosition = [node.x - hoverRectDimensions[0]/2, node.y - hoverRectDimensions[1]/2];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1],\n      ];\n      const hoverRectBorderRadius = 1;\n      ctx.beginPath();\n\n      try {\n        ctx.drawImage(\n          node?.img,\n          node.x - size,\n          node.y - size,\n          ...nodeImageSize\n        );\n      } catch (error) {\n        const img = new Image();\n        img.src = rdfTypes.Unknown.image;\n        node.img = img;\n\n        // Add default icon if new icon wasn't found under images\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      }\n\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'top';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 9).concat('...');\n      } else if ( Array.isArray(nodeName) ){\n        nodeName = nodeName[0]?.substr(0, 9).concat('...');\n      }\n      const textProps = [nodeName, node.x, textHoverPosition[1]];\n      if (node === hoverNode || node?.id === selectedNode?.id || node?.id === nodeSelected?.id ) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0],\n          hoverRectDimensions[1] / 4,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n      if ( node.childLinks?.length && node.collapsed ) {\n        let children = { links : 0 };\n        collapseSubLevels(node, undefined, children)\n        const collapsedNodes = [children.links, node.x, textHoverPosition[1]];\n        ctx.fillStyle = GRAPH_COLORS.collapsedFolder;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'bottom';\n        ctx.fillText(...collapsedNodes);\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n    },\n    [hoverNode]\n  );\n\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={ graphRef }\n        id = {props.graph_id}\n        // Graph data with Nodes and Links to populate\n        data={data}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        warmupTicks={250}\n        onEngineStop={onEngineStop}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        dagLevelDistance={selectedLayout.layout === TOP_DOWN.layout ? 60 : 0}\n        linkDirectionalParticles={1}\n        forceRadial={selectedLayout.layout === TOP_DOWN.layout ? 0 : 15}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => {\n          if ( selectedLayout.layout === TOP_DOWN.layout ){\n            node.fx = node.xPos;\n            node.fy = 50 * node.level;\n          } else {\n            return 100 / (node.level + 1);\n          }\n        }}\n        nodeRelSize={2.5}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div className='graph-view_controls'>\n            <IconButton area-label=\"GraphLayout\" aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <Tooltip id=\"button-report\" title=\"Change Graph Layout\">\n                <FormatAlignCenterIcon />\n              </Tooltip>\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n            </Menu>\n            <IconButton area-label=\"ZoomIn\" onClick={(e) => zoomIn()}>\n              <Tooltip id=\"button-report\" title=\"Zoom In\">\n                <ZoomInIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"ZoomOut\" onClick={(e) => zoomOut()}>\n              <Tooltip id=\"button-report\" title=\"Zoom Out\">\n                <ZoomOutIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"ResetCamera\" onClick={(e) => resetCamera()}>\n              <Tooltip id=\"button-report\" title=\"Reset Camera\">\n                <RefreshIcon />\n              </Tooltip>\n            </IconButton>\n            <IconButton area-label=\"Expand\" onClick={(e) => expandAll(e)}>\n              <Tooltip id=\"button-report\" title={ !collapsed ? \"Collapse All\" : \"Expand All\"}>\n                { !collapsed ? <UnfoldLessIcon/> : <UnfoldMoreIcon /> }\n              </Tooltip>\n            </IconButton>\n            <LayersIcon />\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\nimport { useDispatch } from 'react-redux';\nimport { selectGroup } from '../../../../redux/actions';\nimport { GRAPH_SOURCE } from '../../../../constants';\n\n\nconst SimpleChip = ({chips, node}) => {\n  const dispatch = useDispatch();\n\n  const handleClick = (item, node) => {\n    if ( item.link ){\n      window.open(item.link, '_blank')\n    } else if ( item.value ) {\n      let urlCheck = new RegExp(\"([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?\");\n      if(urlCheck.test(item.value)) {\n        window.open(item.value, '_blank')\n      } else {\n        if ( node ) {\n          dispatch(selectGroup({\n            dataset_id: node.dataset_id,\n            graph_node: node?.id,\n            tree_node: node?.tree_reference?.id,\n            source: GRAPH_SOURCE\n          }));\n        }\n      }\n    }\n  }\n\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => ( node === undefined\n        ? item.link ? \n        (<Chip label={item?.value} onClick={() => handleClick(item, null)}/>)\n        : (<Chip label={item?.value} />)\n        : (<Chip label={item?.value} onClick={() => handleClick(item, node)}/>)))\n      }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.tree_node?.timestamp_updated !== undefined) {\n        latestUpdate = new Date(node?.tree_node?.timestamp_updated.split(\",\")[0]);\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Type',\n            value: node?.tree_node?.type\n        },\n        {\n            title: 'Mimetype',\n            value: node?.tree_node?.mimetype\n        },\n        {\n            title: 'Size Bytes',\n            value: node?.tree_node?.size_bytes\n        }\n    ];\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node?.attributes?.hasUriHuman && node.graph_node?.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"File Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node?.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'File Details'} />)\n                }\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node?.graph_node?.attributes?.isAbout} />\n                </Box>\n                { node?.tree_node?.uri_human !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.tree_node?.uri_human} title=\"Human URI\" />\n                       </Box>)\n                    : (<> </>)\n                }\n\n                { node?.tree_node?.checksums !== undefined\n                    ? (<>\n                            <SimpleLabelValue label={'Checksum'} value={node?.tree_node?.checksums[0].hex} />\n                            <SimpleLabelValue label={'Checksum Algorithm'} value={node?.tree_node?.checksums[0].cypher} />\n                        </>)\n                    : (<> </>)\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node?.graph_node?.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node?.graph_node?.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <Typography component=\"h3\">Person Details</Typography>\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Name</Typography>\n                    <Links key={`name_href_link`} href={node.graph_node?.id} title={title.toString()} />\n                    {/* <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} /> */}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={item} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const simpleValue = (label, value) => {\n    if (value !== undefined) {\n        return (<SimpleLabelValue key={label} label={label} value={value} />);\n    } else {\n        return (<> </>);\n    }\n}\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label ? node.graph_node.attributes?.label[0] : \"\";\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined Sample name\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Sample Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Sample Details'} />)\n                }\n\n                { iterateSimpleValue('Assigned group', node?.graph_node?.attributes?.hasAssignedGroup) }\n                { iterateSimpleValue('Digital artifact', node?.graph_node?.attributes?.hasDigitalArtifactThatIsAboutIt) }\n                { iterateSimpleValue('Extracted from Anatomical region', node?.graph_node?.attributes?.wasExtractedFromAnatomicalRegion) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport USER from \"../../../images/user.svg\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n    const nodes = window.datasets[node.dataset_id].splinter.nodes;\n\n    let title = \"\";\n    let label = \"\";\n    let idDetails = \"\";\n    let description = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node?.graph_node.attributes?.label?.[0];\n        title = node?.graph_node.attributes?.title?.[0];\n        description = node?.graph_node.attributes?.description?.[0];\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        label = node?.tree_node?.basename;\n        idDetails = node?.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node.graph_node?.attributes?.label?.[0];\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.graph_node?.attributes?.latestUpdate !== undefined) {\n        latestUpdate = new Date(node.graph_node.attributes?.latestUpdate?.[0])\n    }\n\n    let contactPerson = [];\n    if (node.graph_node.attributes?.hasResponsiblePrincipalInvestigator !== undefined) {\n        node.graph_node.attributes?.hasResponsiblePrincipalInvestigator.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Principal Investigator',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    if (node.graph_node.attributes?.hasContactPerson !== undefined) {\n        node.graph_node.attributes?.hasContactPerson.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Contributor',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Error Index',\n            value: node.graph_node.attributes?.errorIndex\n        },\n        {\n            title: 'Template Schema Version',\n            value: node.graph_node.attributes?.hasDatasetTemplateSchemaVersion\n        },\n        {\n            title: 'Experiment Modality',\n            value: node.graph_node.attributes?.hasExperimentalModality\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Title'} value={title} heading={'Dataset Details'} />\n                { node.graph_node.attributes?.hasDoi && node.graph_node.attributes?.hasDoi?.[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasDoi?.[0]} title={label} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={label} />)\n                }\n                <SimpleLabelValue label={'Description'} value={description} />\n\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.isAbout} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Protocol Techniques</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.protocolEmploysTechnique} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node.graph_node.attributes?.hasDoi !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node.graph_node.attributes?.hasDoi?.[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => <Chip key={`${item}_${index}`} label={item} /> ) }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue, simpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n    node.graph_node.dataset_id = node.dataset_id;\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node.tree_node && node.graph_node) {\n        idDetails = node?.tree_node?.id + detailsLabel;\n        title = node?.tree_node?.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node?.graph_node?.id + detailsLabel;\n        title = node.graph_node.name;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Weight Unit',\n            value: node.graph_node.attributes?.weightUnit\n        },\n        {\n            title: 'Weight Value',\n            value: node.graph_node.attributes?.weightValue\n        }\n    ];\n\n    const getGroupNode = (groupName, node)=> {\n        let n = node.graph_node.parent;\n        let match = false;\n        while ( n && !match ) {\n            if ( n.name === groupName ) {\n              match = true;\n            }else {\n              n = n.parent;\n            }\n        }\n\n        n.dataset_id = node.dataset_id;\n\n        return n;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Subject Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Subject Details</Typography>\n                            <SimpleLinkedChip chips={[{ value : title}]} node={node.graph_node} />\n                        </Box>))\n                }\n\n                { node.graph_node?.attributes?.hasAgeCategory\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Age Category</Typography>\n                            <SimpleLinkedChip chips={[{ value : node.graph_node?.attributes?.hasAgeCategory}]} node={getGroupNode(node.graph_node?.attributes?.hasAgeCategory[0], node)}/>\n                        </Box>)\n                    : <> </>\n                }\n                { (node.graph_node.attributes?.ageValue && node.graph_node.attributes?.ageUnit)\n                    ? simpleValue('Age', node.graph_node.attributes?.ageValue + ' ' + node.graph_node.attributes?.ageUnit)\n                    : (node.graph_node.attributes?.ageBaseUnit && node.graph_node.attributes?.ageBaseValue)\n                        ? simpleValue('Age', node.graph_node.attributes?.ageBaseValue + ' ' + node.graph_node.attributes?.ageBaseUnit)\n                        : <> </>\n                }\n\n                { (node.graph_node.attributes?.weightUnit && node.graph_node.attributes?.weightValue)\n                    ? simpleValue('Weight', node.graph_node.attributes?.weightValue + ' ' + node.graph_node.attributes?.weightUnit)\n                    : <> </>\n                }\n\n                { node.graph_node?.attributes?.biologicalSex\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Biological Sex</Typography>\n                            <SimpleLinkedChip chips={[{ value : node.graph_node?.attributes?.biologicalSex}]} node={getGroupNode(node.graph_node?.attributes?.biologicalSex[0], node)} />\n                        </Box>)\n                    : <> </>\n                }\n                { iterateSimpleValue('Specimen identifier', node?.graph_node?.attributes?.specimenHasIdentifier) }\n                { node.graph_node?.attributes?.subjectSpecies\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Species</Typography>\n                            <SimpleLinkedChip chips={[{ value : node.graph_node?.attributes?.subjectSpecies}]} node={getGroupNode(node.graph_node?.attributes?.subjectSpecies[0], node)} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.subjectStrain\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Strains</Typography>\n                            <SimpleLinkedChip chips={[{ value : node.graph_node?.attributes?.subjectStrain}]} node={getGroupNode(node.graph_node?.attributes?.subjectStrain[0], node)} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.hasAssignedGroup && node.graph_node?.attributes?.hasAssignedGroup.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Assigned Groups</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.hasAssignedGroup} />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Protocol Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />)\n                }\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst GroupDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n    \n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'# of Subjects '} value={node?.graph_node?.subjects} heading={node?.graph_node?.name + ' group details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default GroupDetails;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport CollectionDetails from './Details/CollectionDetails';\nimport GroupDetails from './Details/GroupDetails';\n\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Group.key:\n                details = new Group(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                {/* <CollectionDetails node={node} /> */}\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                {/* <CollectionHeader node={node} />\n                <CollectionDetails node={node} /> */}\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Group = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <GroupDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <GroupDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        separator={<img src={DIVIDER} alt=\"DIVIDER\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography variant=\"subtitle2\" onClick={() => {goToLink(links?.current.id)}} className=\"breadcrumb_selected\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport { useSelector } from 'react-redux'\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\n\nconst NodeDetailView = (props) => {\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  if (nodeSelected.tree_node !== undefined && nodeSelected.tree_node !== null) {\n    path = [...nodeSelected.tree_node.path]\n    path.shift();\n    otherDetails = path.reverse().map( singleNode => {\n      const tree_node = window.datasets[nodeSelected.dataset_id].splinter.tree_map.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: tree_node.graph_reference,\n        tree_node: tree_node\n      }\n      // I don't like the check on primary and derivative below since this depends on the data\n      // but it's coming as a feature request, so I guess it can stay there.\n      if (new_node.tree_node.id !== subject_key\n        && new_node.tree_node.id !== contributors_key\n        && new_node.tree_node.id !== protocols_key\n        && new_node.tree_node.basename !== 'primary'\n        && new_node.tree_node.basename !== 'derivative') {\n        links.pages.push({\n          id: singleNode,\n          title: tree_node.text,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.tree_node.id,\n      text: nodeSelected.tree_node.text\n    };\n  } else {\n    path = [];\n    var latestNodeVisited = nodeSelected;\n    while ( latestNodeVisited.graph_node.parent !== undefined ) {\n      path.push(latestNodeVisited.graph_node.parent.id);\n      latestNodeVisited = {\n        tree_node: undefined,\n        graph_node: latestNodeVisited.graph_node.parent\n      };\n    };\n\n    otherDetails = path.reverse().map( singleNode => {\n      const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: graph_node,\n        tree_node: graph_node.tree_reference\n      }\n      if (new_node.graph_node.id !== subject_key\n        && new_node.graph_node.id !== contributors_key\n        && new_node.graph_node.id !== protocols_key) {\n        links.pages.push({\n          id: singleNode,\n          title: graph_node.name,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.graph_node.id,\n      text: nodeSelected.graph_node.name\n    };\n  }\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\">\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      {/**{ nodeDetails.getHeader() }*/}\n      { otherDetails }\n      { nodeDetails.getDetail() }\n      <NodeFooter />\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        available_datasets : [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        group_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {}\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_GROUP:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    group_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n            case Actions.SET_DATASET_LIST:\n                return {\n                    ...state,\n                    available_datasets: action.data.datasets\n                };\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        default:\n            return state;\n    }\n}\n","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        case Actions.SELECT_GROUP:\n            break;\n        case Actions.SET_DATASET_LIST:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nexport default class FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback, errorCallback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            errorCallback && errorCallback(undefined);\n        });\n    }\n}\n","export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\n\nexport const RDF_TO_JSON_TYPES = [\n    {key: 'sparc:Subject', toTrim: 'subject'}\n];\n\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Group\": {\n        \"image\": \"./images/graph/group.svg\",\n        \"key\": \"Group\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"title\",\n                \"property\": \"title\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"description\",\n                \"property\": \"description\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDoi\",\n                \"property\": \"hasDoi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriApi\",\n                \"property\": \"hasUriApi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasProtocol\",\n                \"property\": \"hasProtocol\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"subjectSpecies\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"subjectStrain\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"age\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"biologicalSex\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ],\n        \"additional_properties\": [\n            {\n                \"label\": \"Age unit\",\n                \"property\": \"ageUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age value\",\n                \"property\": \"ageValue\",\n                \"path\": [ \"TEMP:hasAge\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Age base unit\",\n                \"property\": \"ageBaseUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age base value\",\n                \"property\": \"ageBaseValue\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Weight unit\",\n                \"property\": \"weightUnit\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Weight value\",\n                \"property\": \"weightValue\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"rdf:value\", \"@value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            }\n        ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from the subject\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"To be filled\"\n            },\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"RRID\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"RRID\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"NCBITaxon\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"NCBITaxon\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"PATO\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"PATO\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"UBERON\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"UBERON\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        group: {\n            \"type\": \"Group\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        },\n        RRID: {\n            \"type\": \"RRID\",\n        }\n    },\n    \"Class\": {\n        NCBITaxon: {\n            \"type\": \"NCBITaxon\",\n        },\n        PATO: {\n            \"type\": \"PATO\",\n        },\n        UBERON: {\n            \"type\": \"UBERON\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n"],"sourceRoot":""}
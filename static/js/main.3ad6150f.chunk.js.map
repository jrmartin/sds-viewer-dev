{"version":3,"sources":["utils/graphModel.js","utils/Splinter.js","app/widgets.js","images/check.svg","components/FileUploader/UploadSubmit.js","images/tree/dataset.svg","images/tree/folder.svg","images/tree/file.svg","utils/nodesFactory.js","styles/constant.js","images/close.svg","components/DatasetsListViewer/DatasetsListSplinter.js","redux/actions.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","components/DatasetsListViewer/DatasetsListDialog.js","images/upload-icon.svg","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","components/FileUploader/UploadDialogHeader.js","components/FileUploader/UploadDialog.js","images/toggle-right.svg","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","images/plus.svg","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleLinkedChip.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/Views/SimpleChip.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/CollectionDetails.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/store.js","redux/initialState.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","utils/filesHandler.js","constants.js"],"names":["type_key","RDF_TO_JSON_TYPES","key","toTrim","rdfTypes","typesModel","ORCID","awards","collection","contributor","dataset","sample","subject","RRID","NCBITaxon","PATO","UBERON","Protocol","N3","require","ttl2jsonld","parse","Splinter","jsonFile","turtleFile","filterNode","node","basename","includes","this","factory","NodesFactory","types","jsonData","levelsMap","turtleData","tree","undefined","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","store","Store","rdf_to_json","rdf_to_json_map","Map","tree_parents_map2","JSON","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","push","prefix","iri","String","forEach","Array","isArray","some","item","id","replace","set","n","previousLevel","map","level","updateLevels","neighbors","processDataset","cleanLinks","self","link","find","l","source","target","a","b","links","maxLevel","Object","keys","reduce","length","furthestLeft","Math","ceil","positionsMap","levelsMapKeys","nodeSpace","sort","attributes","relativePath","localeCompare","parent","type","i","aSubject","bSubject","console","log","reverse","index","filter","neighbor","SUBJECTS_LEVEL","max","Number","MIN_SAFE_INTEGER","min","MAX_SAFE_INTEGER","xPos","radialVariant","hierarchyVariant","extractTurtle","processJSON","data","extractJson","initialiseNodesEdges","processTurtle","convertRDFToJson","create_graph","create_tree","mergeData","generateData","typeFound","unknown","owl","rdfType","NamedIndividual","Class","ontology","sparc","split","pop","sparcType","graph_node","get","additional_properties","error","name","value","proxies","properties","tree_reference","children_counter","proxy","Util","isBlankNode","predicate","object","datatype","found","indexOf","update_node","dataset_node","ontology_node","get_type","typedNode","createNode","Unknown","delete","concat","updatedAbout","isAbout","label","updateTechniques","protocolEmploysTechnique","temp_edges","subjects","subject_key","protocols","protocols_key","contributors","contributors_key","temp","target_node","Subject","Person","Sample","derivedFrom","source_node","Award","nodesToRemove","array","specimenHasIdentifier","subjectSpecies","biologicalSex","unshift","element","splice","img","src","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","children","hasFolderAboutIt","folder","jsonNode","newNode","buildFolder","folderChildren","child","linkToNode","child_node","tempChildren","copiedItem","newName","dataset_relative_path","new_node","buildNodeFromJson","node_id","identifier","size","size_bytes","mimetype","updated","timestamp_updated","status","tree_root","generateLeaf","build_leaf","from","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","Collection","File","path","findReference","reference","NodeViewWidget","WidgetStatus","ACTIVE","component","panelName","enableClose","enableRename","enableDrag","UploadSubmit","handleClose","enabledButton","Button","variant","fullWidth","disableElevation","color","onClick","disabled","CHECK","alt","createImage","Image","extension","image","extractProperties","ttlTypes","property","type_property","json_prop","new_attribute","step","innerPath","trimType","parseFloat","Contributor","firstName","middleName","lastName","namesArray","Dataset","typed_node","vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","ADD_DATASET","DELETE_DATASET","SET_DATASET_LIST","SELECT_INSTANCE","TRIGGER_ERROR","addDataset","deleteDataset","setDatasetsList","datasets","selectInstance","instance","triggerError","message","error_message","hot","module","queryParams","URLSearchParams","window","location","search","datasetID","doi","dispatch","useDispatch","useState","openUploadDialog","setOpenUploadDialog","openDatasetsListDialog","setOpenDatasetsListDialog","useSelector","state","sdsState","_turtle","setTurtle","_json","setJson","doiMatch","setDoiMatch","initialised","setInitialised","loading","setLoading","turtle_url","json_url","splinter","fillDataset","getDatasetId","getGraph","getTree","_dataset","graph","addWidget","substring","config","graph_id","loadTurtleFile","datasets_url","FileHandler","get_remote_file","url","loadJSONFile","loadDatsetFromDOI","fileData","file","DatasetsListSplinter","hasDoi","match","fileHandler","summaryURL","repository_url","available_datasets","theme","display","className","open","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","useStore","LayoutManager","setComponent","useEffect","myManager","getLayoutManagerInstance","model","visitNodes","setEventListener","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","active","IMPORT_TEXT","SPARC_DATASETS","ErrorDialog","onClose","DatasetsListDialog","React","selectedIndex","setSelectedIndex","searchField","setSearchField","filteredDatasets","setFilteredDatasets","turtle","json","handleDone","getFormattedListTex","reg","RegExp","str","callback","hasUriApi","lowerCaseLabel","toLowerCase","loadDatasets","PaperProps","style","align","CLOSE","datasetsButtonText","datasetsButtonSubtitleText","datasetsDialogSearchText","onChange","lowerCaseSearch","filtered","selected","primary","dangerouslySetInnerHTML","__html","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","progress","errors","Box","Typography","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","UploadProgress","onDelete","setProgress","upload","CANCEL","cursor","UploadError","DELETE","FilesUploading","files","fileWrapper","totalFiles","Uploader","rdf","setRdf","onDrop","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","random","nodeRef","useRef","fileObjects","e","showPreviewsInDropzone","accFiles","acceptedFiles","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","maxFiles","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","setFiles","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","fileHandler2","fileExt","curr","urls","base_url","shift","getJsonURL","CircularProgress","TabPanel","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","Tabs","Tab","UploadDialog","setValue","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","ToggleRight","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","nodeSelected","instance_selected","setNodes","setItems","widgets","TREE_SOURCE","layoutActions","globalId","GRAPH_SOURCE","matchingTitle","lowercaseSearch","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","justifyContent","Plus","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","flexDirection","margin","order","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","background","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","marginBottom","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","bottom","zIndex","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","TOP_DOWN","layout","maxNodesLevel","RADIAL_OUT","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","fill","GraphViewer","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","selectedLayout","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","cameraPosition","setCameraPosition","Boolean","handleLayoutClose","handleLayoutChange","handleNodeRightClick","ggv","centerAt","zoom","resetCamera","zoomToFit","center","setTimeout","d3Force","d3","strength","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","fillText","d2","warmupTicks","cooldownTicks","onEngineStop","linkColor","has","linkWidth","forceChargeStrength","linkDirectionalParticles","linkCurvature","curve","fx","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","clear","add","nodeCanvasObject","nodeCanvasObjectMode","nodeVal","fy","onNodeHover","onNodeClick","handleNodeLeftClick","onNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Menu","anchorEl","keepMounted","MenuItem","zoomIn","zoomOut","NodeFooter","FILTER","PersonHeader","headingStyle","title","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","detailsLabel","toString","DetailLinks","href","Link","LINKICON","SimpleChip","chips","Chip","FileDetails","latestUpdate","Date","DETAILS_LIST","hasUriHuman","Links","SimpleLinkedChip","uri_human","checksums","hex","cypher","List","ListItemText","PersonDetails","iterateSimpleValue","simpleValue","SampleDetails","hasAssignedGroup","hasDerivedInformationAsParticipant","hasDigitalArtifactThatIsAboutIt","participantInPerformanceOf","wasDerivedFromSubject","wasExtractedFromAnatomicalRegion","DatasetDetails","description","contactPerson","hasResponsiblePrincipalInvestigator","user","designation","USER","hasContactPerson","errorIndex","hasDatasetTemplateSchemaVersion","hasExperimentalModality","SubjectDetails","weightUnit","weightValue","hasAgeCategory","ageValue","ageUnit","ageBaseUnit","ageBaseValue","subjectStrain","ProtocolDetails","protocolHasNumberOfSteps","CollectionDetails","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","getElementById","scrollIntoView","behavior","Breadcrumbs","DIVIDER","pages","page","componentMap","otherDetails","nodeDetails","singleNode","getDetail","latestNodeVisited","close","reducers","action","Actions","ids","slice","LayoutActions","SET_LAYOUT","createStore","all_tree","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","hostname","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","axios","progressCallback","reader","FileReader","onload","response","result","onprogress","lengthComputable","parseInt","loaded","total","readAsText","errorCallback","crossDomain","responseType","onDownloadProgress","progressEvent","catch"],"mappings":"+GAAA,wIAAO,IAAMA,EAAW,kDAGXC,EAAoB,CAC7B,CAACC,IAAK,gBAAiBC,OAAQ,YAItBC,EAAW,CACpB,SAAY,CACR,MAAS,8BACT,IAAO,WACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,MAAS,CACL,MAAS,wCACT,IAAO,QACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,WAAc,CACV,MAAS,4BACT,IAAO,aACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,QAAW,CACP,MAAS,6BACT,IAAO,UACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,gBAEb,CACI,KAAQ,KACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,KACR,IAAO,cACP,SAAY,cACZ,MAAS,gBAEb,CACI,KAAQ,UACR,IAAO,GACP,SAAY,UACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,4BACP,SAAY,eACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,aACP,SAAY,aACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,iBACP,SAAY,iBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,SACP,SAAY,SACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,kCACP,SAAY,kCACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,0BACP,SAAY,0BACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,sCACP,SAAY,sCACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,YACP,SAAY,YACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,2BACP,SAAY,2BACZ,MAAS,kBAIrB,KAAQ,CACJ,MAAS,wCACT,IAAO,OACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,QAAW,CACP,MAAS,4BACT,IAAO,UACP,WAAc,CACV,CACI,KAAQ,QACR,IAAO,2BACP,SAAY,iBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,mBACP,SAAY,mBACZ,MAAS,8DAEb,CACI,KAAQ,QACR,IAAO,0BACP,SAAY,gBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,SACP,SAAY,MACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,iBACP,SAAY,iBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,mBACP,SAAY,mBACZ,MAAS,gBAEb,CACI,KAAQ,QACR,IAAO,mBACP,SAAY,gBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,UACP,SAAY,aACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,qCACP,SAAY,qCACZ,MAAS,gBAEb,CACI,KAAQ,QACR,IAAO,wBACP,SAAY,wBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,6BACP,SAAY,6BACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,iBAGjB,sBAAyB,CACrB,CACI,MAAS,WACT,SAAY,UACZ,KAAQ,CAAE,cAAe,eAAgB,OACzC,SAAY,QACZ,KAAQ,UAEZ,CACI,MAAS,YACT,SAAY,WACZ,KAAQ,CAAE,cAAe,aACzB,UAAa,SACb,SAAY,GACZ,KAAQ,SAEZ,CACI,MAAS,gBACT,SAAY,cACZ,KAAQ,CAAE,cAAe,mBAAoB,eAAgB,OAC7D,SAAY,QACZ,KAAQ,UAEZ,CACI,MAAS,iBACT,SAAY,eACZ,KAAQ,CAAE,cAAe,mBAAoB,aAC7C,UAAa,SACb,SAAY,GACZ,KAAQ,SAEZ,CACI,MAAS,cACT,SAAY,aACZ,KAAQ,CAAE,+BAAgC,eAAgB,OAC1D,SAAY,QACZ,KAAQ,UAEZ,CACI,MAAS,eACT,SAAY,cACZ,KAAQ,CAAE,+BAAgC,YAAa,UACvD,SAAY,GACZ,KAAQ,WAIpB,OAAU,CACN,MAAS,4BACT,IAAO,SACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,mBACP,SAAY,mBACZ,MAAS,8DAEb,CACI,KAAQ,OACR,IAAO,wBACP,SAAY,cACZ,MAAS,4BAEb,CACI,KAAQ,OACR,IAAO,UACP,SAAY,aACZ,MAAS,8BAEb,CACI,KAAQ,OACR,IAAO,mBACP,SAAY,mBACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,qCACP,SAAY,qCACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,kCACP,SAAY,kCACZ,MAAS,8BAEb,CACI,KAAQ,OACR,IAAO,6BACP,SAAY,6BACZ,MAAS,8BAEb,CACI,KAAQ,UACR,IAAO,mCACP,SAAY,mCACZ,MAAS,8BAEb,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,OAAU,CACN,MAAS,0BACT,IAAO,SACP,WAAc,CACV,CACI,KAAQ,QACR,IAAO,YACP,SAAY,YACZ,MAAS,gBAEb,CACI,KAAQ,QACR,IAAO,WACP,SAAY,WACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,aACP,SAAY,aACZ,MAAS,kBAIrB,SAAY,CACR,MAAS,wCACT,IAAO,WACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,2BACP,SAAY,2BACZ,MAAS,kBAIrB,KAAQ,CACJ,MAAS,wCACT,IAAO,OACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,UAAa,CACT,MAAS,wCACT,IAAO,YACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,KAAQ,CACJ,MAAS,wCACT,IAAO,OACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,OAAU,CACN,MAAS,wCACT,IAAO,SACP,WAAc,CACV,CACI,KAAQ,OACR,IAAO,QACP,SAAY,QACZ,MAAS,gBAEb,CACI,KAAQ,OACR,IAAO,cACP,SAAY,cACZ,MAAS,kBAIrB,QAAW,CACP,MAAS,wCACT,IAAO,UACP,WAAc,KAKTC,EAAa,CACtB,gBAAmB,CACfC,MAAO,CACH,KAAQ,UAEZC,OAAQ,CACJ,KAAQ,SAEZC,WAAY,CACR,KAAQ,cAEZC,YAAa,CACT,KAAQ,UAEZC,QAAS,CACL,KAAQ,WAEZC,OAAQ,CACJ,KAAQ,UAEZC,QAAS,CACL,KAAQ,WAEZC,KAAM,CACF,KAAQ,SAGhB,MAAS,CACLC,UAAW,CACP,KAAQ,aAEZC,KAAM,CACF,KAAQ,QAEZC,OAAQ,CACJ,KAAQ,WAGhB,MAAS,CACLC,SAAU,CACN,KAAQ,WACR,OAAU,MAGlB,SAAY,CACR,KAAQ,WACR,OAAU,KAEd,QAAW,CACP,KAAQ,UACR,OAAU,G,+HCxhBZC,EAAKC,EAAQ,KACbC,EAAaD,EAAQ,KAAuBE,MAiD5CC,E,WACF,WAAYC,EAAUC,GAAa,yBAqrBnCC,WAAa,SAACC,GACV,OAAOA,EAAKC,SAASC,SAtuBZ,OAuuBZ,EAtrBGC,KAAKC,QAAU,IAAIC,IACnBF,KAAKN,SAAWA,EAChBM,KAAKL,WAAaA,EAClBK,KAAKG,MAAQ,CAAC,EACdH,KAAKI,SAAW,CAAC,EACjBJ,KAAKK,UAAY,CAAC,EAClBL,KAAKM,WAAa,GAClBN,KAAKO,UAAOC,EACZR,KAAKS,WAAQD,EACbR,KAAKU,WAAQF,EACbR,KAAKW,aAAUH,EACfR,KAAKY,cAAWJ,EAChBR,KAAKa,iBAAcL,EACnBR,KAAKc,kBAAeN,EACpBR,KAAKe,kBAAeP,EACpBR,KAAKgB,sBAAmBR,EACxBR,KAAKiB,WAAajB,KAAKkB,mBACvBlB,KAAKmB,MAAQ,IAAI9B,EAAG+B,MACpBpB,KAAKqB,iBAAcb,EACnBR,KAAKsB,qBAAkBd,CAC1B,C,wDAGD,WACIR,KAAKU,MAAQ,GACbV,KAAKS,MAAQ,IAAIc,IACjBvB,KAAKY,SAAW,IAAIW,IACpBvB,KAAKa,YAAc,IAAIU,IACvBvB,KAAKgB,iBAAmB,IAAIO,IAC5BvB,KAAKwB,kBAAoB,IAAID,IAC7BvB,KAAKsB,gBAAkB,IAAIC,GAC9B,G,yBAGD,WACI,MAA6B,kBAAlBvB,KAAKN,UAA2C,OAAlBM,KAAKN,SACnCM,KAAKN,SAEL+B,KAAKjC,MAAMQ,KAAKN,SAE9B,G,2BAGD,WACI,IAAIgC,EAAO1B,KACX,OAAO,IAAI2B,SAAQ,SAASC,EAASC,IAClB,IAAIxC,EAAGyC,QAiBftC,MAAMkC,EAAK/B,YAfE,SAAUoC,EAAKC,EAAMC,GACjCD,GACAN,EAAKP,MAAMe,QAAQF,GACnBN,EAAKpB,WAAW6B,KAAKH,IAErBJ,EAAQF,EAAKpB,WAEpB,IAEsB,SAAU8B,EAAQC,GACrCX,EAAKvB,MAAMmC,OAAOF,IAAW,CACzB,KAAQA,EACR,IAAOC,EAEd,GAEJ,GACJ,G,8BAED,WAAqB,IAAD,OAChBrC,KAAKqB,YAAc9B,EAAWS,KAAKL,YACnCK,KAAKqB,YAAY,UAAUkB,SAAQ,SAAA1C,GAC/B,IACIvB,EAAS,GAkBb,GAjBIkE,MAAMC,QAAQ5C,EAAK,UACXzB,IAAkBsE,MAAM,SAAAC,GAC5B,QAAI9C,EAAK,SAASE,SAAS4C,EAAKtE,OAC5BC,EAASqE,EAAKrE,QACP,EAGd,IAEOF,IAAkBsE,MAAM,SAAAC,GAC5B,OAAI9C,EAAK,WAAa8C,EAAKtE,MACvBC,EAASqE,EAAKrE,QACP,EAGd,IAEM,CACP,IAAIsE,EAAK,EAAKzC,MAAM7B,GAAQ+D,IAAIO,GAAK/C,EAAK,OAAOgD,QAAQvE,EAAS,IAAK,IACvE,EAAKgD,gBAAgBwB,IAAIF,EAAI/C,EAChC,CACJ,GACJ,G,qBAGD,WACI,OAAOG,KAAKI,QACf,G,uBAGD,WACI,OAAOJ,KAAKM,UACf,G,0BAED,SAAayC,EAAGC,GAAgB,IAAD,OAC3BD,EAAEE,KAAK,SAAApD,GACEA,EAAKqD,MAAQF,IACd,EAAKG,aAAatD,EAAKuD,UAAWvD,EAAKqD,OACvCrD,EAAKqD,MAAQrD,EAAKqD,MAAQ,EAEjC,GAGJ,G,uEAED,+HACuB1C,IAAfR,KAAKS,YAAsCD,IAAfR,KAAKU,MADzC,gCAEcV,KAAKqD,iBAFnB,OA8CI,IAzCIC,EAAa,GACbC,EAAOvD,KAGXA,KAAKc,aAAayB,SAAQ,SAAAiB,GAGtB,IADmBF,EAAWG,MAAM,SAAAC,GAAC,OAAIA,EAAEC,SAAWH,EAAKG,QAAUD,EAAEE,SAAWJ,EAAKI,MAAlD,IAChB,CACjB,IAAMC,EAAIN,EAAKxC,aAAa0C,MAAM,SAAA5D,GAAI,OAAIA,EAAK+C,KAAOY,EAAKG,MAArB,IAChCG,EAAIP,EAAKxC,aAAa0C,MAAM,SAAA5D,GAAI,OAAIA,EAAK+C,KAAOY,EAAKI,MAArB,KACrCC,EAAET,YAAcS,EAAET,UAAY,KAC9BU,EAAEV,YAAcU,EAAEV,UAAY,IAC/BS,EAAET,UAAUjB,KAAK2B,GACjBA,EAAEV,UAAUjB,KAAK0B,IAEhBA,EAAEE,QAAUF,EAAEE,MAAQ,KACtBD,EAAEC,QAAUD,EAAEC,MAAQ,IACvBF,EAAEE,MAAM5B,KAAKqB,GACbM,EAAEC,MAAM5B,KAAKqB,GAEbF,EAAWnB,KAAKqB,EACnB,CACJ,IAGGQ,EAAWC,OAAOC,KAAKlE,KAAKK,WAAW8D,QAAO,SAACN,EAAGC,GAAJ,OAAU,EAAKzD,UAAUwD,GAAGO,OAAS,EAAK/D,UAAUyD,GAAGM,OAASP,EAAIC,CAApE,IAElC,GAEZO,EAAe,EAAKC,KAAKC,KAAKvE,KAAKK,UAAU2D,GAAUI,QAAQ,EAFnD,GAGZI,EAAe,CAAC,GAEhBC,EAAgBR,OAAOC,KAAKlE,KAAKK,YAEvBkC,SAAS,SAAAW,GACnBsB,EAAatB,GAASmB,EAAeK,GACrC,EAAKrE,UAAU6C,GAAOyB,MAAK,SAACd,EAAGC,GAAJ,2BAAUD,EAAEe,kBAAZ,iBAAU,EAAcC,oBAAxB,aAAU,EAA4BC,cAA5B,UAA0ChB,EAAEc,kBAA5C,aAA0C,EAAcC,aAAlE,GAC9B,IAED,UAAA7E,KAAKK,UAAU,UAAf,SAAmBsE,MAAK,SAACd,EAAGC,GAAJ,2BAAUD,EAAEkB,cAAZ,iBAAU,EAAUC,YAApB,aAAU,EAAgBF,cAAhB,UAA8BhB,EAAEiB,cAAhC,aAA8B,EAAUC,KAAlD,IAEdC,EAlNK,EAkNeA,GAAKjB,EAAWiB,IAC1C,UAAAjF,KAAKK,UAAU4E,UAAf,SAAmBN,MAAM,SAACd,EAAGC,GAEzB,IAFgC,IAAD,EAC3BoB,EAAWrB,EACU,YAAlBqB,EAASF,MACZE,EAAWA,EAASH,OAGxB,IADA,IAAII,EAAWrB,EACU,YAAlBqB,EAASH,MACZG,EAAWA,EAASJ,OAExB,OAAe,QAAR,EAAAG,SAAA,eAAUtC,IAAKuC,EAASvC,GAAK,GAAK,CAC5C,IAzDT,OA4DIwC,QAAQC,IAAI,cAAerF,KAAKK,WAG5B+C,EAAY,EAChBqB,EAAca,UAAU/C,SAAS,SAAAW,GAC7B,EAAK7C,UAAU6C,GAAOX,SAAU,SAACQ,EAAGwC,GAAW,IAAD,EAO1C,GANAnC,EAAS,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAGK,iBAAN,aAAG,EAAcoC,QAAO,SAAAC,GAAc,OAAOA,EAASvC,MAAQH,EAAEG,KAAO,IAE/DwC,IAAZ3C,EAAEG,QACH,EAAKC,aAAaJ,EAAEK,UAAWL,EAAEG,OAC5BE,EAAUgB,OAAS,IAAIrB,EAAEG,MAAQH,EAAEG,MAAQ,IAE/CE,EAAUgB,OAAS,EAAI,CACxB,IAAIuB,EAAMC,OAAOC,iBAAkBC,EAAMF,OAAOG,iBAChD3C,EAAUb,SAAS,SAAAkD,GACVA,EAASO,KAAOL,IAAQA,EAAMF,EAASO,MACvCP,EAASO,KAAOF,IAAQA,EAAML,EAASO,KAC/C,IACDjD,EAAEiD,KAAOF,IAAQH,EAAMG,EAAMA,EAAoB,IAAbH,EAAMG,GAC1CtB,EAAazB,EAAEG,OAASH,EAAEiD,KA/CtB,EAgDP,MACGjD,EAAEiD,KAAOxB,EAAazB,EAAEG,OAjDpB,GAkDJsB,EAAazB,EAAEG,OAASH,EAAEiD,IAEjC,GACJ,IAEDZ,QAAQC,IAAIrF,KAAKK,WAvFrB,kBAyFW,CACHI,MAAOT,KAAKe,aACZgD,MAAOT,EACP2C,cAAgBjG,KAAKK,UAAU2D,GAAUI,OACzC8B,iBAA8B,GAAXlC,IA7F3B,iD,4HAkGA,gGACsBxD,IAAdR,KAAKO,KADb,gCAEcP,KAAKqD,iBAFnB,gCAIWrD,KAAKO,MAJhB,gD,gFAQA,WACI,OAAOP,KAAKiB,UACf,G,4EAGD,wGACUjB,KAAKmG,gBADf,gD,oFAKA,WAEI,OADAnG,KAAKoG,cACEpG,KAAKI,SAASiG,KAAK,GAAGpF,WAAW4B,QAAQ,WAAY,GAC/D,G,yBAGD,WACI7C,KAAKI,SAAWJ,KAAKsG,aACxB,G,6EAID,+FACItG,KAAKuG,uBADT,SAEUvG,KAAKwG,gBAFf,OAGIxG,KAAKyG,mBACLzG,KAAKoG,cACLpG,KAAK0G,eACL1G,KAAK2G,cACL3G,KAAK4G,YACL5G,KAAK6G,eART,gD,4EAaA,SAAShH,GACL,IADW,EACLiH,EAAY,CACd9B,KAAMxG,IAAWuI,QAAQ/B,KACzBZ,OAAQ,GAHD,qBAKQvE,QALR,IAKQA,OALR,EAKQA,EAAMM,OALd,IAKX,2BAAgC,CAAC,IAAtB6E,EAAqB,QAC5B,GAAIA,EAAKA,OAAShF,KAAKG,MAAM6G,IAAI3E,IAAIO,GAAK,kBACtC,IAAK,IAAMqE,KAAWjH,KAAKG,MAClBN,EAAK+C,GAAG7C,SAASC,KAAKG,MAAM8G,GAAS5E,IAAIO,KAAS5C,KAAKG,MAAM8G,GAAS5E,IAAIO,GAAGwB,OAAS0C,EAAU1C,aAA6E5D,IAAjEhC,IAAW0I,gBAAgB5E,OAAOtC,KAAKG,MAAM8G,GAASjC,SACnK8B,EAAU9B,KAAOxG,IAAW0I,gBAAgB5E,OAAOtC,KAAKG,MAAM8G,GAASjC,OAAOA,KAC9E8B,EAAU1C,OAASpE,KAAKG,MAAM8G,GAAS5E,IAAIO,GAAGwB,QAGxD,GAAIY,EAAKA,OAAShF,KAAKG,MAAM6G,IAAI3E,IAAIO,GAAK,QACxC,IAAK,IAAMqE,KAAWjH,KAAKG,MAClBN,EAAK+C,GAAG7C,SAASC,KAAKG,MAAM8G,GAAS5E,IAAIO,KAAS5C,KAAKG,MAAM8G,GAAS5E,IAAIO,GAAGwB,OAAS0C,EAAU1C,aAAmE5D,IAAvDhC,IAAW2I,MAAM7E,OAAOtC,KAAKG,MAAM8G,GAASjC,SACzJ8B,EAAU9B,KAAOxG,IAAW2I,MAAM7E,OAAOtC,KAAKG,MAAM8G,GAASjC,OAAOA,KACpE8B,EAAU1C,OAASpE,KAAKG,MAAM8G,GAAS5E,IAAIO,GAAGwB,aAGnD,GAAIY,EAAKA,OAAShF,KAAKG,MAAM6G,IAAI3E,IAAIO,GAAK,WAC7CkE,EAAU9B,KAAOxG,IAAW4I,SAASpC,KACrC8B,EAAU1C,OAAS5F,IAAW4I,SAAShD,YACpC,GAAKY,EAAKA,KAAKjF,SAASC,KAAKG,MAAMkH,MAAMhF,IAAIO,UAA8EpC,IAArEhC,IAAW6I,MAAMrC,EAAKA,KAAKsC,MAAMtH,KAAKG,MAAMkH,MAAMhF,IAAIO,IAAI2E,OAAuB,CAC1I,IAAIC,EAAYxC,EAAKA,KAAKsC,MAAMtH,KAAKG,MAAMkH,MAAMhF,IAAIO,IAAI2E,MACzDT,EAAU9B,KAAOxG,IAAW6I,MAAMG,GAAWxC,KAC7C8B,EAAU1C,OAAS5F,IAAW6I,MAAMG,GAAWpD,MAClD,CACJ,CA5BU,+BA6BX,OAAO0C,EAAU9B,IACpB,G,wBAGD,SAAWnF,GACP,IAAM4H,EAAazH,KAAKS,MAAMiH,IAAI7H,EAAK+C,IACjC+E,EAAwB3H,KAAKsB,gBAAgBoG,IAAI7H,EAAK+C,IACxD6E,GACArC,QAAQwC,MAAM,2DACdxC,QAAQwC,MAAM/H,IAEdG,KAAKS,MAAMqC,IAAIjD,EAAK+C,GAAI,CACpBA,GAAI/C,EAAK+C,GACTgC,WAAY,CAAC,EACbzE,MAAO,GACP0H,KAAMhI,EAAKiI,MACXC,QAAS,GACTC,WAAY,GACZC,eAAgB,KAChBC,iBAAkB,EAClBP,sBAAuBA,GAGlC,G,yBAGD,SAAY3F,EAAMmG,GAAQ,IAAD,OAErB,IAAI9I,EAAG+I,KAAKC,YAAYrG,EAAKjD,SAA7B,CAGA,IAAI0I,EAAazH,KAAKS,MAAMiH,IAAI1F,EAAKjD,QAAQ6D,IAE7C,GAAI6E,EACIzF,EAAKsG,UAAU1F,KAAOzE,KACtBsJ,EAAWtH,MAAX,sBAAuBsH,EAAWtH,OAAlC,CAAyC,CACrCmI,UAAWtG,EAAKsG,UAAU1F,GAC1BoC,KAAMhD,EAAKuG,OAAOC,SAAWxG,EAAKuG,OAAOC,SAAS5F,GAAKZ,EAAKuG,OAAO3F,GACnEkF,MAAO9F,EAAKuG,OAAOT,SAEvB9H,KAAKS,MAAMqC,IAAId,EAAKjD,QAAQ6D,GAAI6E,KAEhCA,EAAWO,WAAX,sBAA4BP,EAAWO,YAAvC,CAAmD,CAC/CM,UAAWtG,EAAKsG,UAAU1F,GAC1BoC,KAAMhD,EAAKuG,OAAOC,SAAWxG,EAAKuG,OAAOC,SAAS5F,GAAKZ,EAAKuG,OAAO3F,GACnEkF,MAAO9F,EAAKuG,OAAOT,SAEnBK,IACAV,EAAWM,QAAX,sBAAyBN,EAAWM,SAApC,CAA6C/F,EAAKuG,OAAO3F,KACzD5C,KAAKa,YAAYiC,IAAId,EAAKuG,OAAO3F,GAAIZ,EAAKjD,QAAQ6D,KAEtD5C,KAAKS,MAAMqC,IAAId,EAAKjD,QAAQ6D,GAAI6E,QAEjC,CAEH,IAAIgB,GAAQ,EACZzI,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,IACiC,IAApDyJ,EAAMC,QAAQW,QAAQpG,OAAON,EAAKjD,QAAQ6D,OAC1CkF,EAAME,WAAN,sBAAuBF,EAAME,YAA7B,CAAyC,CACrCM,UAAWtG,EAAKsG,UAAU1F,GAC1BoC,KAAMhD,EAAKuG,OAAOC,SAClBV,MAAO9F,EAAKuG,OAAOT,SAEvBA,EAAMC,QAAN,sBAAoBD,EAAMC,SAA1B,CAAmC/F,EAAKuG,OAAO3F,KAC/C,EAAK/B,YAAYiC,IAAId,EAAKuG,OAAO3F,GAAIvE,GACrC,EAAKoC,MAAMqC,IAAIzE,EAAKyJ,GACpBW,GAAQ,EAEf,IACGA,IAGArD,QAAQwC,MAAM,+BACdxC,QAAQwC,MAAM5F,GAErB,CA7CA,CA8CJ,G,wBAGD,SAAWA,GAIP,IAAM2B,EAAS3D,KAAKS,MAAMiH,IAAI1F,EAAKjD,QAAQ6D,IACrCgB,EAAS5D,KAAKS,MAAMiH,IAAI1F,EAAKuG,OAAO3F,IACtCe,GAAUC,GAAW5B,EAAKjD,QAAQ6D,KAAOZ,EAAKuG,OAAO3F,IACrD5C,KAAKU,MAAMyB,KAAK,CACZwB,OAAQ3B,EAAKjD,QAAQ6D,GACrBgB,OAAQ5B,EAAKuG,OAAO3F,KAExB5C,KAAK2I,YAAY3G,GAAM,IAGvBhC,KAAK2I,YAAY3G,GAAM,EAE9B,G,wBAGD,WAAc,IAAD,WAGL4G,OAAepI,EACfqI,OAAgBrI,EAGpBR,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,GACvByJ,EAAM9C,KAAO,EAAK8D,SAAShB,GAC3B,IAAMiB,EAAY,EAAK9I,QAAQ+I,WAAWlB,EAAO,EAAK3H,OAClD4I,EAAU/D,OAASzG,IAAS0K,QAAQ5K,IACpC,EAAKoC,MAAMqC,IAAIzE,EAAK0K,IAEpB,EAAKtI,MAAMyI,OAAO7K,GAClB,EAAKqC,MAAQ,EAAKA,MAAM8E,QAAO,SAAAhC,GAC3B,OAAIA,EAAKG,SAAWtF,GAAOmF,EAAKI,SAAWvF,CAI9C,KAEDyJ,EAAM9C,OAASxG,IAAW0I,gBAAgBrI,QAAQmG,OAClD4D,EAAed,GAEfA,EAAM9C,OAASxG,IAAW4I,SAASpC,OACnC6D,EAAgBf,EAEvB,IAED9H,KAAKW,QAAUiI,EAAahG,GAE5BgG,EAAaZ,WAAaY,EAAaZ,WAAWmB,OAAON,EAAcb,YACvEY,EAAab,QAAUa,EAAab,QAAQoB,OAAON,EAAcd,SACjEa,EAAa1F,MAAQ,EACrB,IAAIkG,EAAe,GACnBR,EAAahE,WAAWyE,QAAQ9G,SAAS,SAACsB,GACtC,GAAIA,EAAE9D,SAASxB,IAASU,UAAUZ,MAAQwF,EAAE9D,SAASxB,IAASW,KAAKb,MAAQwF,EAAE9D,SAASxB,IAASY,OAAOd,KAAO,CACzG,IAAIwB,EAAO,EAAKY,MAAMiH,IAAI7D,GACtBhE,EACAuJ,EAAajH,KAAK,CAAC,aAAStC,QAAT,IAASA,OAAT,EAASA,EAAM+E,WAAW0E,MAAM,GAAI,YAAQzJ,QAAR,IAAQA,OAAR,EAAQA,EAAM+C,KAErEwG,EAAajH,KAAK,CAAC,MAAS0B,GAEnC,MACGuF,EAAajH,KAAK,CAAC,MAAS0B,GAEnC,IACD+E,EAAahE,WAAWyE,QAAUD,EAElC,IAAIG,EAAmB,GACvB,UAAAX,EAAahE,WAAW4E,gCAAxB,SAAkDjH,SAAS,SAACsB,GACxD,GAAIA,EAAE9D,SAASxB,IAASU,UAAUZ,MAAQwF,EAAE9D,SAASxB,IAASW,KAAKb,MAAQwF,EAAE9D,SAASxB,IAASY,OAAOd,KAAO,CACzG,IAAIwB,EAAO,EAAKY,MAAMiH,IAAI7D,GACtBhE,EACA0J,EAAiBpH,KAAK,CAAC,aAAStC,QAAT,IAASA,OAAT,EAASA,EAAM+E,WAAW0E,MAAM,GAAI,YAAQzJ,QAAR,IAAQA,OAAR,EAAQA,EAAM+C,KAEzE2G,EAAiBpH,KAAK,CAAC,MAAS0B,GAEvC,MACG0F,EAAiBpH,KAAK,CAAC,MAAS0B,GAEvC,IACD+E,EAAahE,WAAW4E,yBAA2BD,EACnDvJ,KAAKS,MAAMqC,IAAI8F,EAAahG,GAAIgG,GAChC5I,KAAKS,MAAMyI,OAAOL,EAAcjG,IAEhC,IAAI6G,EAAU,UAAGzJ,KAAKU,aAAR,aAAG,EAAYuC,KAAI,SAAAO,GAO7B,OANIA,EAAKG,SAAWkF,EAAcjG,KAC9BY,EAAKG,OAASiF,EAAahG,IAE3BY,EAAKI,SAAWiF,EAAcjG,KAC9BY,EAAKI,OAASgF,EAAahG,IAExBY,CACV,IAED,OADAxD,KAAKU,MAAQ+I,EACNb,CACV,G,4BAGD,SAAe7D,GAAS,IAAD,OAEbnC,EAAKmC,EAAOnC,GACZ8G,EAAW,CACb9G,GAAI+G,IACJ9B,KAAM,WACN7C,KAAMxG,IAAW0I,gBAAgBnI,QAAQiG,KACzCgD,WAAY,GACZjD,OAASA,EACTgD,QAAS,GACT7E,MA1gBW,EA2gBX+E,eAAgB,KAChBC,iBAAkB,QAEc1H,IAAhCR,KAAKS,MAAMiH,IAAIiC,MACf3J,KAAKS,MAAMqC,IAAI6G,IAAa3J,KAAKC,QAAQ+I,WAAWU,IACpD1J,KAAKU,MAAMyB,KAAK,CACZwB,OAAQf,EACRgB,OAAQ8F,EAAS9G,MAGrBwC,QAAQwC,MAAM,qCAGlB,IAAMgC,EAAY,CACdhH,GAAIiH,IACJhC,KAAM,YACN7C,KAAMxG,IAAW6I,MAAMjI,SAAS4F,KAChCgD,WAAY,GACZjD,OAASA,EACTgD,QAAS,GACT7E,MA9hBY,EA+hBZ+E,eAAgB,KAChBC,iBAAkB,QAEiB1H,IAAnCR,KAAKS,MAAMiH,IAAImC,MACf7J,KAAKS,MAAMqC,IAAI+G,IAAe7J,KAAKC,QAAQ+I,WAAWY,IACtD5J,KAAKU,MAAMyB,KAAK,CACZwB,OAAQf,EACRgB,OAAQgG,EAAUhH,MAGtBwC,QAAQwC,MAAM,qCAGlB,IAAMkC,EAAe,CACjBlH,GAAImH,IACJlC,KAAM,eACN7C,KAAMxG,IAAW0I,gBAAgBtI,YAAYoG,KAC7CgD,WAAY,GACZjD,OAASA,EACTgD,QAAS,GACT7E,MAnjBqC,EAojBrC+E,eAAgB,KAChBC,iBAAkB,QAEmB1H,IAArCR,KAAKS,MAAMiH,IAAIqC,MACf/J,KAAKS,MAAMqC,IAAIiH,IAAkB/J,KAAKC,QAAQ+I,WAAWc,IACzD9J,KAAKU,MAAMyB,KAAK,CACZwB,OAAQf,EACRgB,OAAQkG,EAAalH,MAGzBwC,QAAQwC,MAAM,qCAGlB5H,KAAKc,aAAed,KAAKU,MAAM8E,QAAO,SAAAhC,GAClC,OAAKA,EAAKI,SAAWJ,EAAKG,QACtB,EAAKlD,MAAMiH,IAAIlE,EAAKG,QAAQT,QAAU,EAAKzC,MAAMiH,IAAIlE,EAAKI,QAAQV,KAIzE,IAAED,KAAI,SAAAO,GACH,GAAIA,EAAKI,SAAWhB,EAAI,CACpB,IAAIoH,EAAOxG,EAAKI,OAChBJ,EAAKI,OAASJ,EAAKG,OACnBH,EAAKG,OAASqG,CACjB,CACD,IAAIC,EAAc,EAAKxJ,MAAMiH,IAAIlE,EAAKI,QAClCJ,EAAKG,SAAWf,GAAMY,EAAKI,SAAW+F,KAAeM,EAAYjF,OAASzG,IAAS2L,QAAQ7L,KAC3FmF,EAAKG,OAASgG,IACdM,EAAY/G,MAAQwG,EAASxG,MAAQ,EACrC+G,EAAYlF,OAAS2E,EACrB,EAAKjJ,MAAMqC,IAAImH,EAAYrH,GAAIqH,IACxBzG,EAAKG,SAAWf,GAAMY,EAAKI,SAAWmG,KAAoBE,EAAYjF,OAASzG,IAAS4L,OAAO9L,KACtGmF,EAAKG,OAASoG,IACdE,EAAY/G,MAAQ4G,EAAa5G,MAAQ,EACzC+G,EAAYlF,OAAS+E,EACrB,EAAKrJ,MAAMqC,IAAImH,EAAYrH,GAAIqH,IACxBzG,EAAKG,SAAWf,GAAMY,EAAKI,SAAWiG,KAAiBI,EAAYjF,OAASzG,IAASa,SAASf,KACrGmF,EAAKG,OAASkG,IACdI,EAAY/G,MAAQ0G,EAAU1G,MAAQ,EACtC+G,EAAYlF,OAAS6E,EACrB,EAAKnJ,MAAMqC,IAAImH,EAAYrH,GAAIqH,IACxBzG,EAAKG,SAAWf,GAAMqH,EAAYjF,OAASzG,IAAS6L,OAAO/L,MAClEmF,EAAKG,OAASsG,EAAYrF,WAAWyF,YAAY,GACjDJ,EAAY/G,MAAQwG,EAASxG,MAAQ,EACrC+G,EAAYlF,OAAS,EAAKtE,MAAMiH,IAAIuC,EAAYrF,WAAWyF,YAAY,IACvE,EAAK5J,MAAMqC,IAAImH,EAAYrH,GAAIqH,IAEnC,IAAIK,EAAc,EAAK7J,MAAMiH,IAAIlE,EAAKG,QAGtC,OAFA2G,EAAYpC,mBACZ,EAAKzH,MAAMqC,IAAIwH,EAAY1H,GAAI0H,GACxB9G,CACV,IAAEgC,QAAO,SAAAhC,GACN,IAAIyG,EAAc,EAAKxJ,MAAMiH,IAAIlE,EAAKI,QACtC,OAAKJ,EAAKG,SAAWf,GAAOqH,EAAYjF,OAASzG,IAASgM,MAAMlM,KAASmF,EAAKI,SAAWmG,KAAoBvG,EAAKI,SAAW+F,KAAenG,EAAKI,SAAWiG,GAI/J,GACJ,G,uBAGD,WAAa,IAAD,OACJW,EAAgB,GAEpBxK,KAAKe,aAAawB,SAAQ,SAAC1C,EAAM0F,EAAOkF,GAAW,IAAD,IAC9C,GAAI5K,EAAKmF,OAASzG,IAAS6L,OAAO/L,UACMmC,IAAhCX,EAAK+E,WAAWyF,YAA2B,CAC3C,IAAI1G,EAAS,EAAKlD,MAAMiH,IAAI7H,EAAK+E,WAAWyF,YAAY,SACxC7J,IAAXmD,IACDA,EAAOuE,mBAEPuC,EAAMlF,GAAOrC,MAAQS,EAAOT,MAAQ,EACpC,EAAKpC,aAAaqB,KAAK,CACnBwB,OAAQ9D,EAAK+E,WAAWyF,YAAY,GACpCzG,OAAQ/D,EAAK+C,KAGxB,CAGL,GAAI/C,EAAKmF,OAASzG,IAAS2L,QAAQ7L,IAAK,CAAC,IAAD,MACpC,QAA+CmC,KAA3C,UAAAX,EAAK+E,kBAAL,eAAiB8F,uBAAqC,CACtD,IAAI/G,EAAS,EAAKlD,MAAMiH,IAAI7H,EAAK+E,WAAW8F,sBAAsB,SAClDlK,IAAXmD,IACD9D,EAAK+E,WAAW8F,sBAAsB,GAAK/G,EAAOiB,WAAW0E,MAAM,GAE1E,CACD,QAAwC9I,KAApC,UAAAX,EAAK+E,kBAAL,eAAiB+F,gBAA8B,CAC/C,IAAIhH,EAAS,EAAKlD,MAAMiH,IAAI7H,EAAK+E,WAAW+F,eAAe,SAC3CnK,IAAXmD,IACD9D,EAAK+E,WAAW+F,eAAe,GAAKhH,EAAOiB,WAAW0E,MAAM,GAEnE,CACD,QAAuC9I,KAAnC,UAAAX,EAAK+E,kBAAL,eAAiBgG,eAA6B,CAC9C,IAAIjH,EAAS,EAAKlD,MAAMiH,IAAI7H,EAAK+E,WAAWgG,cAAc,SAC1CpK,IAAXmD,IACD9D,EAAK+E,WAAWgG,cAAc,GAAKjH,EAAOiB,WAAW0E,MAAM,GAElE,CACJ,CAEGzJ,EAAKmF,OAASzG,IAASS,KAAKX,KAAOwB,EAAKmF,QAAL,UAAczG,IAASU,iBAAvB,aAAc,EAAoBZ,MAAOwB,EAAKmF,QAAL,UAAczG,IAASW,YAAvB,aAAc,EAAeb,MACzGmM,EAAcK,QAAQtF,QAGN/E,IAAfX,EAAKqD,QACD,EAAK7C,UAAUR,EAAKqD,OACrB,EAAK7C,UAAUR,EAAKqD,OAApB,sBAAiC,EAAK7C,UAAUR,EAAKqD,QAArD,CAA6DrD,IAE7D,EAAKQ,UAAUR,EAAKqD,OAAS,CAACrD,GAGzC,IAED2K,EAAcjI,SAAQ,SAAAuI,GAClB,EAAK/J,aAAagK,OAAOD,EAAS,EACrC,GACJ,G,wCAED,WACI9K,KAAKe,aAAawB,SAAQ,SAAC1C,EAAM0F,EAAOkF,GAC/B5K,EAAKmF,OAASzG,IAAS6L,OAAO/L,KAAOwB,EAAKmF,OAASzG,IAAS2L,QAAQ7L,KAAmC,IAA1BwB,EAAKqI,mBACnFrI,EAAKmL,IAAIC,IAAM,mCAEtB,GACJ,G,0BAGD,WAAe,oBAEQjL,KAAKmB,MAAM+J,eAFnB,IAEX,2BAA6C,CAAC,IAAnCrL,EAAkC,QACpCR,EAAG+I,KAAKC,YAAYxI,IACrBG,KAAKmL,WAAWtL,EAEvB,CANU,mDASiBG,KAAKM,WAAW8K,WATjC,IASX,2BAAuD,CAAC,IAAD,yBAApCpJ,GAAoC,WAC/C3C,EAAG+I,KAAKiD,UAAUrJ,EAAKuG,SAAWvG,EAAKsG,UAAU1F,KAAOzE,IAExD6B,KAAK2I,YAAY3G,GAAM,GAGvBhC,KAAKsL,WAAWtJ,EAEvB,CAjBU,+BAmBX,IAAI4G,EAAe5I,KAAKuL,aACxBvL,KAAKwL,eAAe5C,EACvB,G,yBAGD,WAAe,IAAD,gBACS5I,KAAKI,SAASiG,MADvB,IACV,2BAAuC,CAAC,IAA7BoF,EAA4B,QAEnC,GADAzL,KAAKY,SAASkC,IAAI2I,EAAKC,QAASD,GAC5BA,EAAKE,YAAcF,EAAKG,UAA5B,CAGA,IAAIC,EAAW7L,KAAKgB,iBAAiB0G,IAAI+D,EAAKE,WAC1CE,GACA7L,KAAKgB,iBAAiB8B,IAAI2I,EAAKE,UAA/B,sBAA8CE,GAA9C,CAAwDJ,KACxDzL,KAAKwB,kBAAkBsB,IAAI2I,EAAKE,UAAhC,sBAA+CE,GAA/C,CAAyDJ,OAEzDzL,KAAKgB,iBAAiB8B,IAAI2I,EAAKE,UAAW,CAACF,IAC3CzL,KAAKwB,kBAAkBsB,IAAI2I,EAAKE,UAAW,CAACF,IAP/C,CASJ,CAdS,+BAeb,G,uBAYD,WAAa,IAAD,OACRzL,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,QACEmC,IAArBsH,EAAMlD,iBAAkEpE,IAAtCsH,EAAMlD,WAAWkH,kBACnDhE,EAAMlD,WAAWkH,iBAAiBvJ,SAAQ,SAAAwJ,GAAW,IAAD,EAC5CC,EAAW,EAAKpL,SAAS8G,IAAIqE,GAC7BE,EAAU,EAAKC,YAAYF,EAAUlE,GACrCqE,EAAc,UAAG,EAAK3K,kBAAkBkG,IAAIuE,EAAQN,kBAAtC,aAAG,EAA+C1I,KAAI,SAAAmJ,GAEpE,OADAA,EAAMT,UAAYM,EAAQP,QACnBU,CACV,IAMD,GAJK,EAAKxM,WAAWqM,SAAoDzL,IAAvC,EAAKC,MAAMiH,IAAIuE,EAAQL,YACrD,EAAKS,WAAWJ,EAASnE,QAGuBtH,IAAhD,EAAKgB,kBAAkBkG,IAAIuE,EAAQP,SACnC,EAAKlK,kBAAkBsB,IAAImJ,EAAQP,QAASS,GAC5C,EAAK3K,kBAAkB0H,OAAO+C,EAAQN,WACxB,OAAdQ,QAAc,IAAdA,KAAgB5J,SAAQ,SAAA6J,GACpB,IAAME,EAAa,EAAK7L,MAAMiH,IAAI,EAAK7G,YAAY6G,IAAI0E,EAAMV,UACxD,EAAK9L,WAAWwM,KAAoB,OAAVE,QAAU,IAAVA,OAAA,EAAAA,EAAYtH,QAASzG,IAAS6L,OAAO/L,KAChE,EAAKgO,WAAWD,EAAO,EAAK3L,MAAMiH,IAAIuE,EAAQL,WAErD,QACE,CACH,IAAIW,OAAkC/L,IAAnB2L,EAAA,YAAmC,EAAK3K,kBAAkBkG,IAAIuE,EAAQP,UAAtE,sBAAsF,EAAKlK,kBAAkBkG,IAAIuE,EAAQP,UAAzH,YAAsIS,IACzJ,EAAK3K,kBAAkBsB,IAAImJ,EAAQP,QAASa,GAC5C,EAAK/K,kBAAkB0H,OAAO+C,EAAQN,WAC1B,OAAZY,QAAY,IAAZA,KAAchK,SAAQ,SAAA6J,GAClB,IAAME,EAAa,EAAK7L,MAAMiH,IAAI,EAAK7G,YAAY6G,IAAI0E,EAAMV,UACxD,EAAK9L,WAAWwM,KAAoB,OAAVE,QAAU,IAAVA,OAAA,EAAAA,EAAYtH,QAASzG,IAAS6L,OAAO/L,KAChE,EAAKgO,WAAWD,EAAO,EAAK3L,MAAMiH,IAAIuE,EAAQL,WAErD,GACJ,CACJ,GAER,GACJ,G,yBAED,SAAYjJ,GACR,IAAI6J,EAAU,eAAO7J,GACjB8J,EAAUD,EAAWE,sBAAsBpF,MAAM,KAAK,GAM1D,OALAkF,EAAWb,UAAYa,EAAWZ,UAClCY,EAAWZ,UAAYY,EAAW1M,SAAW,IAAM2M,EACnDD,EAAWd,QAAUc,EAAWZ,UAChCY,EAAW1M,SAAW2M,EAEfD,CACV,G,wBAGD,SAAW3M,EAAMkF,GAAS,IAAD,OACjB7B,EAAQ6B,EAAO7B,MACf6B,EAAOC,OAASzG,IAAS6L,OAAO/L,UACMmC,IAAlCuE,EAAOH,WAAWyF,cAClBnH,EAAQlD,KAAKS,MAAMiH,IAAI3C,EAAOH,WAAWyF,YAAY,IAAInH,MAAQ,GAGzE6B,EAAOmD,mBACP,IAAMyE,EAAW3M,KAAK4M,kBAAkB/M,EAAMqD,GAC9CyJ,EAAS5H,OAASA,EAClB/E,KAAKc,aAAaqB,KAAK,CACnBwB,OAAQoB,EAAOnC,GACfgB,OAAQ+I,EAAS/J,KAErB5C,KAAKS,MAAMqC,IAAI6J,EAAS/J,GAAI5C,KAAKC,QAAQ+I,WAAW2D,IACpD,IAAId,EAAW7L,KAAKwB,kBAAkBkG,IAAI7H,EAAK+L,YACnC,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUzH,QAAS,GACnByH,EAAStJ,SAAQ,SAAA6J,IACZ,EAAKxM,WAAWwM,IAAU,EAAKC,WAAWD,EAAOO,EACrD,GAER,G,+BAGD,SAAkBhK,EAAMO,GACpB,IAAM2J,EAAU7M,KAAKa,YAAY6G,IAAI/E,EAAK+I,SAC1C,GAAImB,EACA,OAAO7M,KAAKS,MAAMiH,IAAImF,GAE1B,IAAMF,EAAW,CACb/J,GAAID,EAAK+I,QACTxI,MAAOA,EAAQ,EACf0B,WAAY,CACRkI,WAAYnK,EAAK7C,SACjB+E,aAAclC,EAAK+J,sBACnBK,KAAMpK,EAAKqK,WACXC,SAAUtK,EAAKsK,SACfC,QAASvK,EAAKwK,kBACdC,OAAQzK,EAAKyK,QAEjBjN,MAAO,GACP0H,KAAMlF,EAAK7C,SACXiI,QAAS,GACTC,WAAY,GACZhD,KAAwB,oBAAlBrC,EAAKsK,SAAiC,aAAe,OAC3DhF,eAAgB,KAChBC,iBAAkB,GAEtB,OAAOlI,KAAKC,QAAQ+I,WAAW2D,EAAU,GAC5C,G,0BAGD,WAAgB,IAAD,SAEPU,EAAYrN,KAAKY,SAAS8G,IAAI1H,KAAKW,SACnCkL,EAAW7L,KAAKgB,iBAAiB0G,IAAtB,OAA0B2F,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAWzB,WACpD,UAAA5L,KAAKgB,wBAAL,SAAuBkI,OAAvB,OAA8BmE,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAWzB,WACzC5L,KAAKO,KAAOP,KAAKsN,aAAaD,GAC9BxB,EAAStJ,SAAQ,SAAAkJ,GACb,EAAK8B,WAAW9B,EAAM,EAAKlL,KAC9B,IAGDP,KAAKe,aAAeyB,MAAMgL,KAAKxN,KAAKS,OAAOwC,KAAI,YAAmB,IAAD,mBAAhB5E,EAAgB,KAAXyJ,EAAW,KACzD2F,EAAY,EAAK7M,SAAS8G,IAAII,EAAMlF,IAmBxC,OAlBI6K,GACA3F,EAAMG,eAAiBwF,EACvB,EAAKhN,MAAMqC,IAAIzE,EAAKyJ,GACpB2F,EAAUC,gBAAkB5F,EAC5B,EAAKlH,SAASkC,IAAIgF,EAAMlF,GAAI6K,IAE5B3F,EAAMC,QAAQ4F,OAAM,SAAAxF,GAEhB,QADAsF,EAAY,EAAK7M,SAAS8G,IAAIS,MAE1BL,EAAMG,eAAiBwF,EACvB,EAAKhN,MAAMqC,IAAIzE,EAAKyJ,GACpB2F,EAAUC,gBAAkB5F,EAC5B,EAAKlH,SAASkC,IAAIqF,EAAOsF,IAClB,EAGd,IAEE3F,CACV,IAED9H,KAAK4N,YACL5N,KAAK6N,4BACR,G,wBAED,SAAWhO,EAAMkF,GAAS,IAAD,OACjB+I,EAAW9N,KAAKsN,aAAazN,EAAMkF,GACvCA,EAAOgJ,MAAM5L,KAAK2L,GAElB,IAAIjC,EAAW7L,KAAKgB,iBAAiB0G,IAAI7H,EAAK+L,WAC9C5L,KAAKgB,iBAAiBkI,OAAOrJ,EAAK+L,WAC9BC,GACAA,EAAStJ,SAAQ,SAAA6J,GACb,EAAKmB,WAAWnB,EAAO0B,EAC1B,GAER,G,0BAED,SAAajO,EAAMkF,GAAS,IAAD,EAkBvB,OAjBAlF,EAAK+C,GAAL,OAAU/C,QAAV,IAAUA,OAAV,EAAUA,EAAM6L,QAChB7L,EAAKkF,QAAS,EACdlF,EAAKmO,UAAkBxN,IAAXuE,EAAA,OAAuBlF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMC,SAAWE,KAAKiB,WACzDpB,EAAKmF,KAAyB,oBAAlBnF,EAAKoN,SAAiC1O,IAAS0P,WAAW5P,IAAME,IAAS2P,KAAK7P,IAC1FwB,EAAKsO,UAAmB3N,IAAXuE,QAAwCvE,IAAhBuE,EAAOoJ,KAAhC,CAAuDtO,EAAK+C,IAA5D,mBAAmEmC,EAAOoJ,OAAQ,CAACtO,EAAK+C,IAC/F/C,EAAKkO,QACNlO,EAAKkO,MAAQ,IAEjBlO,EAAK6N,gBAAkB1N,KAAKoO,cAAcvO,EAAK6L,SAC/C1L,KAAKY,SAASkC,IAAIjD,EAAK+C,GAAI/C,GACX,CACZ+C,GAAI/C,EAAK6L,QACTsC,KAAMnO,EAAKmO,KACXD,MAAOlO,EAAKkO,MACZL,gBAAe,OAAE7N,QAAF,IAAEA,GAAF,UAAEA,EAAM6N,uBAAR,aAAE,EAAuB9K,GACxCuL,KAAMtO,EAAKsO,KAGlB,G,2BAED,SAAcvL,GACV,IAAIyL,EAAYrO,KAAKS,MAAMiH,IAAI9E,GAQ/B,YAPkBpC,IAAd6N,GACArO,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,IACoB,IAAvCyJ,EAAMC,QAAQW,QAAQpG,OAAOM,MAC7ByL,EAAYvG,EAEnB,IAEEuG,CACV,K,KAGU5O,K,mCCz7Bf,8CAca6O,GAJDC,eAAaC,OAIK,CAC1B5L,GAAI,iBACJiF,KAAM,YACN4G,UAAW,WACXC,UAAW,aACXC,aAAa,EACbC,cAAc,EACdC,YAAY,EACZzB,OAAQmB,eAAaC,Q,qDCtBV,MAA0B,kC,OCoB1BM,IAhBM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACnC,OACE,eAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,WAAS,EACTC,kBAAgB,EAChBC,MAAM,UACNC,QAASP,EACTQ,SAAUP,EANZ,UAQE,qBAAK/D,IAAKuE,EAAOC,IAAI,UARvB,SAYH,C,mCClBc,QAA0B,mC,mCCA1B,QAA0B,kC,mCCA1B,QAA0B,gC,uDCEzC,SAASC,EAAY7P,GACjB,IAAMmL,EAAM,IAAI2E,MAChB,GAAK9P,EAAKmF,OAASzG,IAAS2P,KAAK7P,IAAK,CAClC,IAAMuR,EAAY/P,EAAKgI,KAAKP,MAAM,KAAKC,MACvCyD,EAAIC,IAAM,wBAA0B2E,EAAY,MACnD,KAAM,CAAC,IAAD,EACH5E,EAAIC,IAA8C,MAAvC,UAAA1M,IAAS+D,OAAOzC,EAAKmF,cAArB,eAA6B6K,OAAgBtR,IAAS+D,OAAOzC,EAAKmF,OAAO6K,MAAQtR,IAAS0K,QAAQ4G,KAChH,CACD,OAAO7E,CACV,CAED,SAAS8E,EAAkBjQ,EAAMkQ,GAAW,IAAD,EACvC,QAAiBvP,IAAbuP,EAAJ,CADuC,oBAIhBlQ,EAAKmI,YAJW,IAIvC,2BAAwC,CAAC,IAAD,EAA7BgI,EAA6B,sBACRzR,IAASsB,EAAKmF,MAAMgD,YADZ,IACpC,2BAA4D,CAAC,IAAD,IAAjDiI,EAAiD,QACpDD,EAAS1H,aAAe,UAAAyH,EAASE,EAAcjL,aAAvB,mBAA8B3C,WAA9B,eAAmCO,IAAKqN,EAAc5R,WAC9BmC,IAA5CX,EAAK+E,WAAWqL,EAAcD,YAG9BnQ,EAAK+E,WAAWqL,EAAcD,UAAY,IAF1CnQ,EAAK+E,WAAWqL,EAAcD,UAAU7N,KAAK6N,EAASlI,OAMjE,CAVmC,+BAWvC,CAfsC,+BAiBvC,GAAIjI,EAAK8H,sBAAuB,CAAC,IAAD,gBACJpJ,IAASsB,EAAKmF,MAAM2C,uBADhB,IAC5B,2BAAmE,CAAC,IAAD,EAAxDuI,EAAwD,QAC3DC,EAAgBtQ,EAAK8H,sBADsC,cAE5CuI,EAAU/B,MAFkC,IAE/D,2BAAmC,CAAC,IAAzBiC,EAAwB,QAC/B,QAA4B5P,IAAxB2P,EAAcC,GAEX,CACHD,OAAgB3P,EAChB,KACH,CAJG2P,EAAgBA,EAAcC,EAKrC,CAT8D,oCAUzC5P,IAAlB2P,IAC6B,kBAAlBA,GAAgD,OAAlBA,GAA0BA,EAAcD,EAAUG,aACvFF,EAAgBA,EAAcD,EAAUG,YAG5CxQ,EAAK+E,WAAWsL,EAAUF,UAAY,GACf,WAAnBE,EAAUlL,KACVnF,EAAK+E,WAAWsL,EAAUF,UAAU7N,KAAKgO,EAActN,QAAQqN,EAAUI,SAAU,KAEnFzQ,EAAK+E,WAAWsL,EAAUF,UAAU7N,KAAKoO,WAAWJ,IAG/D,CAvB2B,+BAwB/B,MAEoC3P,KAA7B,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAM+E,kBAAN,eAAkBkI,cAClBjN,EAAKgI,KAAOhI,EAAK+E,WAAWkI,WAzC/B,CA2CJ,CAED,IAwCMmB,EAAa,SAAUpO,EAAMkQ,GAG/B,OAFAlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,GACjBlQ,CACV,EAEK2Q,EAAc,SAAU3Q,EAAMkQ,GAAW,IAAD,wBAa1C,OAZAD,EAAkBjQ,EAAMkQ,GACxBlQ,EAAKmL,IAAM0E,EAAY7P,GAEvBA,EAAKgI,UAAsCrH,KAA/B,UAAAX,EAAK+E,kBAAL,eAAiB6L,gBACSjQ,KAAhC,UAAAX,EAAK+E,kBAAL,eAAiB8L,iBACiBlQ,KAA9B,UAAAX,EAAK+E,kBAAL,eAAiB+L,WACb,UAAA9Q,EAAK+E,kBAAL,eAAiB6L,WAAY,KAA7B,UAAmC5Q,EAAK+E,kBAAxC,aAAmC,EAAiB8L,YAAa,KAAjE,UAAuE7Q,EAAK+E,kBAA5E,aAAuE,EAAiB+L,WACxF,UAAA9Q,EAAK+E,kBAAL,eAAiB6L,WAAY,KAA7B,UAAmC5Q,EAAK+E,kBAAxC,aAAmC,EAAiB8L,iBAC1BlQ,KAA9B,UAAAX,EAAK+E,kBAAL,eAAiB+L,WACb,UAAA9Q,EAAK+E,kBAAL,eAAiB6L,WAAY,KAA7B,UAAmC5Q,EAAK+E,kBAAxC,aAAmC,EAAiB+L,UADxD,UAEI9Q,EAAK+E,kBAFT,aAEI,EAAiB6L,UACzB5Q,EAAKgI,KACJhI,CACV,EAGK0K,EAAQ,SAAU1K,EAAMkQ,GAC1BD,EAAkBjQ,EAAMkQ,GACxBlQ,EAAKmL,IAAM0E,EAAY7P,GACvB,IAAI+Q,EAAa/Q,EAAKgI,KAAKP,MAAM,KAEjC,OADAzH,EAAKgI,KAAO+I,EAAWA,EAAWxM,OAAS,GACpCvE,CACV,EAEKgR,EAAU,SAAUhR,EAAMkQ,GAC5BlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,GACxB,IAAIa,EAAa/Q,EAAKgI,KAAKP,MAAM,KAEjC,OADAzH,EAAKgI,KAAO+I,EAAWA,EAAWxM,OAAS,GACpCvE,CACV,EAEKT,EAAW,SAAUS,EAAMkQ,GAC7BlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,GACxB,IAAIa,EAAa/Q,EAAKgI,KAAKP,MAAM,KAEjC,OADAzH,EAAKgI,KAAO+I,EAAWA,EAAWxM,OAAS,GACpCvE,CACV,EAEKuK,EAAS,SAAUvK,EAAMkQ,GAG3B,OAFAlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,GACjBlQ,CACV,EAEKqK,EAAU,SAAUrK,EAAMkQ,GAAW,IAAD,EAGtC,GAFAlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,QACYvP,KAAhC,UAAAX,EAAK+E,kBAAL,eAAiBkI,YAA0B,CAAC,IAAD,EAC3CjN,EAAKgI,KAAL,UAAYhI,EAAK+E,kBAAjB,aAAY,EAAiBkI,WAAW,EAC3C,KAAM,CACH,IAAI8D,EAAa/Q,EAAKgI,KAAKP,MAAM,KACjCzH,EAAKgI,KAAO+I,EAAWA,EAAWxM,OAAS,EAC9C,CACD,OAAOvE,CACV,EAEKqO,EAAO,SAAUrO,EAAMkQ,GAGzB,OAFAlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,GACjBlQ,CACV,EAEKsK,EAAS,SAAUtK,EAAMkQ,GAAW,IAAD,wBAarC,OAZAD,EAAkBjQ,EAAMkQ,GACxBlQ,EAAKmL,IAAM0E,EAAY7P,GAEvBA,EAAKgI,UAAsCrH,KAA/B,UAAAX,EAAK+E,kBAAL,eAAiB6L,gBACSjQ,KAAhC,UAAAX,EAAK+E,kBAAL,eAAiB8L,iBACiBlQ,KAA9B,UAAAX,EAAK+E,kBAAL,eAAiB+L,WACb,UAAA9Q,EAAK+E,kBAAL,eAAiB6L,WAAY,KAA7B,UAAmC5Q,EAAK+E,kBAAxC,aAAmC,EAAiB8L,YAAa,KAAjE,UAAuE7Q,EAAK+E,kBAA5E,aAAuE,EAAiB+L,WACxF,UAAA9Q,EAAK+E,kBAAL,eAAiB6L,WAAY,KAA7B,UAAmC5Q,EAAK+E,kBAAxC,aAAmC,EAAiB8L,iBAC1BlQ,KAA9B,UAAAX,EAAK+E,kBAAL,eAAiB+L,WACb,UAAA9Q,EAAK+E,kBAAL,eAAiB6L,WAAY,KAA7B,UAAmC5Q,EAAK+E,kBAAxC,aAAmC,EAAiB+L,UADxD,UAEI9Q,EAAK+E,kBAFT,aAEI,EAAiB6L,UACzB5Q,EAAKgI,KACJhI,CACV,EAEKoJ,EAAU,SAAUpJ,EAAMkQ,GAG5B,OAFAlQ,EAAKmL,IAAM0E,EAAY7P,GACvBiQ,EAAkBjQ,EAAMkQ,GACjBlQ,CACV,EAEcK,IArII,WACfF,KAAKgJ,WAAa,SAAUnJ,EAAMkQ,GAC9B,IAAIe,EAEJ,OAAOjR,EAAKmF,MACR,IAAK,QACD8L,EAAa,IAAIvG,EAAM1K,EAAMkQ,GAC7B,MACJ,IAAK,aACDe,EAAa,IAAI7C,EAAWpO,EAAMkQ,GAClC,MACJ,IAAK,cACDe,EAAa,IAAIN,EAAY3Q,EAAMkQ,GACnC,MACJ,IAAK,UACDe,EAAa,IAAID,EAAQhR,EAAMkQ,GAC/B,MACJ,IAAK,WACDe,EAAa,IAAI1R,EAASS,EAAMkQ,GAChC,MACJ,IAAK,SACDe,EAAa,IAAI1G,EAAOvK,EAAMkQ,GAC9B,MACJ,IAAK,UACDe,EAAa,IAAI5G,EAAQrK,EAAMkQ,GAC/B,MACJ,IAAK,OACDe,EAAa,IAAI5C,EAAKrO,EAAMkQ,GAC5B,MACJ,IAAK,SACDe,EAAa,IAAI3G,EAAOtK,EAAMkQ,GAC9B,MACJ,QACIe,EAAa,IAAI7H,EAAQpJ,EAAMkQ,GAGvC,OAAOe,CACV,CACJ,C,kCCzDcC,IA1CF,CACXC,WAAY,oBACZC,aAAc,UACdC,kBAAmB,UACnBC,oBAAqB,UACrBC,eAAgB,UAChBC,SAAU,2BACVC,eAAgB,UAChBC,iBAAkB,UAClBC,iBAAkB,2BAClBC,gBAAiB,2BACjBC,eAAgB,2BAChBC,gBAAiB,2BACjBC,OAAQ,EACRC,OAAQ,GACRC,WAAY,UACZC,iBAAkB,2BAClBC,kBAAmB,sBACnBC,WAAY,UACZC,mBAAoB,0BACpBC,gBAAiB,UACjBC,YAAa,UACbC,kBAAmB,0BACnBC,oBAAqB,0BACrBC,kBAAmB,wBACnBC,iBAAkB,0BAClBC,wBAAyB,2BACzBC,iBAAkB,wBAClBC,aAAc,qBACdC,gBAAiB,qBACjBC,kBAAmB,2BACnBC,iBAAkB,wBAClBC,YAAa,yBACblU,QAAS,UACTmU,OAAQ,UACRC,MAAO,UACPC,OAAQ,UACRC,kBAAmB,wBACnBC,gBAAiB,UACjBC,YAAa,sB,mCCvCA,QAA0B,iC,uHCcnChU,EAAKC,EAAQ,KAIbG,E,WACF,WAAYC,EAAUC,GAAa,yBA4anCC,WAAa,SAACC,GACV,OAAOA,EAAKC,SAASC,SAhbZ,OAibZ,EA7aGC,KAAKC,QAAU,IAAIC,IACnBF,KAAKL,WAAaA,EAClBK,KAAKG,MAAQ,CAAC,EACdH,KAAKK,UAAY,CAAC,EAClBL,KAAKM,WAAa,GAClBN,KAAKO,UAAOC,EACZR,KAAKS,WAAQD,EACbR,KAAKU,WAAQF,EACbR,KAAKW,aAAUH,EACfR,KAAKa,iBAAcL,EACnBR,KAAKe,kBAAeP,EACpBR,KAAKmB,MAAQ,IAAI9B,EAAG+B,KACvB,C,wDAGD,WACIpB,KAAKU,MAAQ,GACbV,KAAKS,MAAQ,IAAIc,IACjBvB,KAAKa,YAAc,IAAIU,GAC1B,G,2BAED,WACI,IAAIG,EAAO1B,KACX,OAAO,IAAI2B,SAAQ,SAASC,EAASC,IAClB,IAAIxC,EAAGyC,QAiBftC,MAAMkC,EAAK/B,YAfE,SAAUoC,EAAKC,EAAMC,GACjCD,GACAN,EAAKP,MAAMe,QAAQF,GACnBN,EAAKpB,WAAW6B,KAAKH,IAErBJ,EAAQF,EAAKpB,WAEpB,IAEsB,SAAU8B,EAAQC,GACrCX,EAAKvB,MAAMmC,OAAOF,IAAW,CACzB,KAAQA,EACR,IAAOC,EAEd,GAEJ,GACJ,G,uBAED,WACI,OAAOrC,KAAKM,UACf,G,uEAGD,gGACuBE,IAAfR,KAAKS,YAAsCD,IAAfR,KAAKU,MADzC,gCAEcV,KAAKqD,iBAFnB,gCAKW,CACH5C,MAAOT,KAAKe,eANpB,gD,4HAWA,gGACsBP,IAAdR,KAAKO,KADb,gCAEcP,KAAKqD,iBAFnB,gCAIWrD,KAAKO,MAJhB,gD,gFAQA,WACI,OAAOP,KAAKiB,UACf,G,4EAGD,wGACUjB,KAAKmG,gBADf,gD,mIAKA,+FACInG,KAAKuG,uBADT,SAEUvG,KAAKwG,gBAFf,OAGIxG,KAAK0G,eACL1G,KAAK4G,YACL5G,KAAK6G,eALT,gD,4EAUA,SAAShH,GACL,IADW,EACLiH,EAAY,CACd9B,KAAMxG,IAAWuI,QAAQ/B,KACzBZ,OAAQ,GAHD,qBAKQvE,QALR,IAKQA,OALR,EAKQA,EAAMM,OALd,IAKX,2BAAgC,CAAC,IAAtB6E,EAAqB,QAC5B,GAAIA,EAAKA,OAAShF,KAAKG,MAAM6G,IAAI3E,IAAIO,GAAK,kBACtC,IAAK,IAAMqE,KAAWjH,KAAKG,MAClBN,EAAK+C,GAAG7C,SAASC,KAAKG,MAAM8G,GAAS5E,IAAIO,KAAS5C,KAAKG,MAAM8G,GAAS5E,IAAIO,GAAGwB,OAAS0C,EAAU1C,aAA6E5D,IAAjEhC,IAAW0I,gBAAgB5E,OAAOtC,KAAKG,MAAM8G,GAASjC,SACnK8B,EAAU9B,KAAOxG,IAAW0I,gBAAgB5E,OAAOtC,KAAKG,MAAM8G,GAASjC,OAAOA,KAC9E8B,EAAU1C,OAASpE,KAAKG,MAAM8G,GAAS5E,IAAIO,GAAGwB,aAGnD,GAAIY,EAAKA,OAAShF,KAAKG,MAAM6G,IAAI3E,IAAIO,GAAK,WAC7CkE,EAAU9B,KAAOxG,IAAW4I,SAASpC,KACrC8B,EAAU1C,OAAS5F,IAAW4I,SAAShD,YACpC,GAAKY,EAAKA,KAAKjF,SAASC,KAAKG,MAAMkH,MAAMhF,IAAIO,UAA8EpC,IAArEhC,IAAW6I,MAAMrC,EAAKA,KAAKsC,MAAMtH,KAAKG,MAAMkH,MAAMhF,IAAIO,IAAI2E,OAAuB,CAC1I,IAAIC,EAAYxC,EAAKA,KAAKsC,MAAMtH,KAAKG,MAAMkH,MAAMhF,IAAIO,IAAI2E,MACzDT,EAAU9B,KAAOxG,IAAW6I,MAAMG,GAAWxC,KAC7C8B,EAAU1C,OAAS5F,IAAW6I,MAAMG,GAAWpD,MAClD,CACJ,CArBU,+BAsBX,OAAO0C,EAAU9B,IACpB,G,wBAGD,SAAWnF,GACYG,KAAKS,MAAMiH,IAAI7H,EAAK+C,KAEnCwC,QAAQwC,MAAM,2DACdxC,QAAQwC,MAAM/H,IAEdG,KAAKS,MAAMqC,IAAIjD,EAAK+C,GAAI,CACpBA,GAAI/C,EAAK+C,GACTgC,WAAY,CAAC,EACbzE,MAAO,GACP0H,KAAMhI,EAAKiI,MACXC,QAAS,GACTC,WAAY,GACZC,eAAgB,KAChBC,iBAAkB,GAG7B,G,yBAGD,SAAYlG,EAAMmG,GAAQ,IAAD,OAErB,IAAI9I,EAAG+I,KAAKC,YAAYrG,EAAKjD,SAA7B,CAGA,IAAI0I,EAAazH,KAAKS,MAAMiH,IAAI1F,EAAKjD,QAAQ6D,IAE7C,GAAI6E,EACIzF,EAAKsG,UAAU1F,KAAOzE,KACtBsJ,EAAWtH,MAAX,sBAAuBsH,EAAWtH,OAAlC,CAAyC,CACrCmI,UAAWtG,EAAKsG,UAAU1F,GAC1BoC,KAAMhD,EAAKuG,OAAOC,SAAWxG,EAAKuG,OAAOC,SAAS5F,GAAKZ,EAAKuG,OAAO3F,GACnEkF,MAAO9F,EAAKuG,OAAOT,SAEvB9H,KAAKS,MAAMqC,IAAId,EAAKjD,QAAQ6D,GAAI6E,KAEhCA,EAAWO,WAAX,sBAA4BP,EAAWO,YAAvC,CAAmD,CAC/CM,UAAWtG,EAAKsG,UAAU1F,GAC1BoC,KAAMhD,EAAKuG,OAAOC,SAAWxG,EAAKuG,OAAOC,SAAS5F,GAAKZ,EAAKuG,OAAO3F,GACnEkF,MAAO9F,EAAKuG,OAAOT,SAEnBK,IACAV,EAAWM,QAAX,sBAAyBN,EAAWM,SAApC,CAA6C/F,EAAKuG,OAAO3F,KACzD5C,KAAKa,YAAYiC,IAAId,EAAKuG,OAAO3F,GAAIZ,EAAKjD,QAAQ6D,KAEtD5C,KAAKS,MAAMqC,IAAId,EAAKjD,QAAQ6D,GAAI6E,QAEjC,CAEH,IAAIgB,GAAQ,EACZzI,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,IACiC,IAApDyJ,EAAMC,QAAQW,QAAQpG,OAAON,EAAKjD,QAAQ6D,OAC1CkF,EAAME,WAAN,sBAAuBF,EAAME,YAA7B,CAAyC,CACrCM,UAAWtG,EAAKsG,UAAU1F,GAC1BoC,KAAMhD,EAAKuG,OAAOC,SAClBV,MAAO9F,EAAKuG,OAAOT,SAEvBA,EAAMC,QAAN,sBAAoBD,EAAMC,SAA1B,CAAmC/F,EAAKuG,OAAO3F,KAC/C,EAAK/B,YAAYiC,IAAId,EAAKuG,OAAO3F,GAAIvE,GACrC,EAAKoC,MAAMqC,IAAIzE,EAAKyJ,GACpBW,GAAQ,EAEf,IACGA,IAGArD,QAAQwC,MAAM,+BACdxC,QAAQwC,MAAM5F,GAErB,CA7CA,CA8CJ,G,wBAGD,SAAWA,GAIP,IAAM2B,EAAS3D,KAAKS,MAAMiH,IAAI1F,EAAKjD,QAAQ6D,IACrCgB,EAAS5D,KAAKS,MAAMiH,IAAI1F,EAAKuG,OAAO3F,IACtCe,GAAUC,GAAW5B,EAAKjD,QAAQ6D,KAAOZ,EAAKuG,OAAO3F,IACrD5C,KAAKU,MAAMyB,KAAK,CACZwB,OAAQ3B,EAAKjD,QAAQ6D,GACrBgB,OAAQ5B,EAAKuG,OAAO3F,KAExB5C,KAAK2I,YAAY3G,GAAM,IAGvBhC,KAAK2I,YAAY3G,GAAM,EAE9B,G,wBAGD,WAAc,IAAD,OAGL4G,OAAepI,EACfqI,OAAgBrI,EAGpBR,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,GACvByJ,EAAM9C,KAAO,EAAK8D,SAAShB,GAC3B,IAAMiB,EAAY,EAAK9I,QAAQ+I,WAAWlB,EAAO,EAAK3H,OAClD4I,EAAU/D,OAASzG,IAAS0K,QAAQ5K,IACpC,EAAKoC,MAAMqC,IAAIzE,EAAK0K,IAEpB,EAAKtI,MAAMyI,OAAO7K,GAClB,EAAKqC,MAAQ,EAAKA,MAAM8E,QAAO,SAAAhC,GAC3B,OAAIA,EAAKG,SAAWtF,GAAOmF,EAAKI,SAAWvF,CAI9C,KAEDyJ,EAAM9C,OAASxG,IAAW0I,gBAAgBrI,QAAQmG,OAClD4D,EAAed,GAEfA,EAAM9C,OAASxG,IAAW4I,SAASpC,OACnC6D,EAAgBf,EAEvB,IAED9H,KAAKW,QAAUiI,EAAahG,GAE5BgG,EAAaZ,WAAaY,EAAaZ,WAAWmB,OAAON,EAAcb,YACvEY,EAAab,QAAUa,EAAab,QAAQoB,OAAON,EAAcd,SACjEa,EAAa1F,MAAQ,EACrBlD,KAAKS,MAAMqC,IAAI8F,EAAahG,GAAIgG,GAChC5I,KAAKS,MAAMyI,OAAOL,EAAcjG,IAEhC,IAAI6G,EAAazJ,KAAKU,MAAMuC,KAAI,SAAAO,GAO5B,OANIA,EAAKG,SAAWkF,EAAcjG,KAC9BY,EAAKG,OAASiF,EAAahG,IAE3BY,EAAKI,SAAWiF,EAAcjG,KAC9BY,EAAKI,OAASgF,EAAahG,IAExBY,CACV,IAED,OADAxD,KAAKU,MAAQ+I,EACNb,CACV,G,4BAED,SAAe7D,GAAS,IAAD,OAEbnC,EAAKmC,EAAOnC,GACZ8G,EAAW,CACb9G,GAAI+G,IACJ9B,KAAM,WACN7C,KAAMxG,IAAW0I,gBAAgBnI,QAAQiG,KACzCgD,WAAY,GACZjD,OAASA,EACTgD,QAAS,GACTE,eAAgB,KAChBC,iBAAkB,QAEc1H,IAAhCR,KAAKS,MAAMiH,IAAIiC,MACf3J,KAAKS,MAAMqC,IAAI6G,IAAa3J,KAAKC,QAAQ+I,WAAWU,IACpD1J,KAAKU,MAAMyB,KAAK,CACZwB,OAAQf,EACRgB,OAAQ8F,EAAS9G,MAGrBwC,QAAQwC,MAAM,qCAGlB,IAAMgC,EAAY,CACdhH,GAAIiH,IACJhC,KAAM,YACN7C,KAAMxG,IAAW6I,MAAMjI,SAAS4F,KAChCgD,WAAY,GACZjD,OAASA,EACTgD,QAAS,GACTE,eAAgB,KAChBC,iBAAkB,QAEiB1H,IAAnCR,KAAKS,MAAMiH,IAAImC,MACf7J,KAAKS,MAAMqC,IAAI+G,IAAe7J,KAAKC,QAAQ+I,WAAWY,IACtD5J,KAAKU,MAAMyB,KAAK,CACZwB,OAAQf,EACRgB,OAAQgG,EAAUhH,MAGtBwC,QAAQwC,MAAM,qCAGlB,IAAMkC,EAAe,CACjBlH,GAAImH,IACJlC,KAAM,eACN7C,KAAMxG,IAAW0I,gBAAgBtI,YAAYoG,KAC7CgD,WAAY,GACZjD,OAASA,EACTgD,QAAS,GACTE,eAAgB,KAChBC,iBAAkB,QAEmB1H,IAArCR,KAAKS,MAAMiH,IAAIqC,MACf/J,KAAKS,MAAMqC,IAAIiH,IAAkB/J,KAAKC,QAAQ+I,WAAWc,IACzD9J,KAAKU,MAAMyB,KAAK,CACZwB,OAAQf,EACRgB,OAAQkG,EAAalH,MAGzBwC,QAAQwC,MAAM,qCAGlB5H,KAAKc,aAAed,KAAKU,MAAM8E,QAAO,SAAAhC,GAClC,OAAKA,EAAKI,SAAWJ,EAAKG,QACtB,EAAKlD,MAAMiH,IAAIlE,EAAKG,QAAQT,QAAU,EAAKzC,MAAMiH,IAAIlE,EAAKI,QAAQV,KAIzE,IAAED,KAAI,SAAAO,GACH,GAAIA,EAAKI,SAAWhB,EAAI,CACpB,IAAIoH,EAAOxG,EAAKI,OAChBJ,EAAKI,OAASJ,EAAKG,OACnBH,EAAKG,OAASqG,CACjB,CACD,IAAIC,EAAc,EAAKxJ,MAAMiH,IAAIlE,EAAKI,QAClCJ,EAAKG,SAAWf,GAAMY,EAAKI,SAAW+F,KAAeM,EAAYjF,OAASzG,IAAS2L,QAAQ7L,KAC3FmF,EAAKG,OAASgG,IACdM,EAAY/G,MAAQwG,EAASxG,MAAQ,EACrC+G,EAAYlF,OAAS2E,EACrB,EAAKjJ,MAAMqC,IAAImH,EAAYrH,GAAIqH,IACxBzG,EAAKG,SAAWf,GAAMY,EAAKI,SAAWmG,KAAoBE,EAAYjF,OAASzG,IAAS4L,OAAO9L,KACtGmF,EAAKG,OAASoG,IACdE,EAAY/G,MAAQ4G,EAAa5G,MAAQ,EACzC+G,EAAYlF,OAAS+E,EACrB,EAAKrJ,MAAMqC,IAAImH,EAAYrH,GAAIqH,IACxBzG,EAAKG,SAAWf,GAAMY,EAAKI,SAAWiG,KAAiBI,EAAYjF,OAASzG,IAASa,SAASf,MACrGmF,EAAKG,OAASkG,IACdI,EAAY/G,MAAQ0G,EAAU1G,MAAQ,EACtC+G,EAAYlF,OAAS6E,EACrB,EAAKnJ,MAAMqC,IAAImH,EAAYrH,GAAIqH,IAEnC,IAAIK,EAAc,EAAK7J,MAAMiH,IAAIlE,EAAKG,QAGtC,OAFA2G,EAAYpC,mBACZ,EAAKzH,MAAMqC,IAAIwH,EAAY1H,GAAI0H,GACxB9G,CACV,IAAEgC,QAAO,SAAAhC,GACN,IAAIyG,EAAc,EAAKxJ,MAAMiH,IAAIlE,EAAKI,QACtC,OAAKJ,EAAKG,SAAWf,GAAOqH,EAAYjF,OAASzG,IAASgM,MAAMlM,KAASmF,EAAKI,SAAWmG,KAAoBvG,EAAKI,SAAW+F,KAAenG,EAAKI,SAAWiG,GAI/J,GACJ,G,uBAED,WAAa,IAAD,OACR7J,KAAKe,aAAawB,SAAQ,SAAC1C,EAAM0F,EAAOkF,GACpC,GAAI5K,EAAKmF,OAASzG,IAAS6L,OAAO/L,UACMmC,IAAhCX,EAAK+E,WAAWyF,YAA2B,CAC3C,IAAI1G,EAAS,EAAKlD,MAAMiH,IAAI7H,EAAK+E,WAAWyF,YAAY,SACxC7J,IAAXmD,IACDA,EAAOuE,mBAEPuC,EAAMlF,GAAOrC,MAAQS,EAAOT,MAAQ,EACpC,EAAKpC,aAAaqB,KAAK,CACnBwB,OAAQ9D,EAAK+E,WAAWyF,YAAY,GACpCzG,OAAQ/D,EAAK+C,KAGxB,MAGepC,IAAfX,EAAKqD,QACD,EAAK7C,UAAUR,EAAKqD,OACrB,EAAK7C,UAAUR,EAAKqD,OAApB,sBAAiC,EAAK7C,UAAUR,EAAKqD,QAArD,CAA6DrD,IAE7D,EAAKQ,UAAUR,EAAKqD,OAAS,CAACrD,GAGzC,GACJ,G,wCAED,WACIG,KAAKe,aAAawB,SAAQ,SAAC1C,EAAM0F,EAAOkF,GAC/B5K,EAAKmF,OAASzG,IAAS6L,OAAO/L,KAAOwB,EAAKmF,OAASzG,IAAS2L,QAAQ7L,KAAmC,IAA1BwB,EAAKqI,mBACnFrI,EAAKmL,IAAIC,IAAM,mCAEtB,GACJ,G,0BAGD,WAAe,oBAEQjL,KAAKmB,MAAM+J,eAFnB,IAEX,2BAA6C,CAAC,IAAnCrL,EAAkC,QACpCR,EAAG+I,KAAKC,YAAYxI,IACrBG,KAAKmL,WAAWtL,EAEvB,CANU,mDASiBG,KAAKM,WAAW8K,WATjC,IASX,2BAAuD,CAAC,IAAD,yBAApCpJ,GAAoC,WAC/C3C,EAAG+I,KAAKiD,UAAUrJ,EAAKuG,SAAWvG,EAAKsG,UAAU1F,KAAOzE,IAExD6B,KAAK2I,YAAY3G,GAAM,GAGvBhC,KAAKsL,WAAWtJ,EAEvB,CAjBU,+BAoBX,IAAI4G,EAAe5I,KAAKuL,aACxBvL,KAAKwL,eAAe5C,EACvB,G,uBAYD,WAAa,IAAD,OACR5I,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,GACvB,QAAyBmC,IAArBsH,EAAMlD,iBAAkEpE,IAAtCsH,EAAMlD,WAAWkH,iBAAgC,CAAC,IAAD,EAC7ED,EAAW,EAAK7K,iBAAiB0G,IAAtB,UAA0B,EAAK9G,SAAS8G,IAAII,EAAMlD,WAAWkH,iBAAiB,WAA9E,aAA0B,EAAyDF,WAC5F,OAARC,QAAQ,IAARA,KAAUtJ,SAAQ,SAAA6J,IACb,EAAKxM,WAAWwM,IAAU,EAAKC,WAAWD,EAAOtE,EACrD,GACJ,CACJ,GACJ,G,wBAGD,SAAWjI,EAAMkF,GAAS,IAAD,OACjB7B,EAAQ6B,EAAO7B,MACf6B,EAAOC,OAASzG,IAAS6L,OAAO/L,UACMmC,IAAlCuE,EAAOH,WAAWyF,cAClBnH,EAAQlD,KAAKS,MAAMiH,IAAI3C,EAAOH,WAAWyF,YAAY,IAAInH,MAAQ,GAGzE6B,EAAOmD,mBACP,IAAMyE,EAAW3M,KAAK4M,kBAAkB/M,EAAMqD,GAC9CyJ,EAAS5H,OAASA,EAClB/E,KAAKc,aAAaqB,KAAK,CACnBwB,OAAQoB,EAAOnC,GACfgB,OAAQ+I,EAAS/J,KAErB5C,KAAKS,MAAMqC,IAAI6J,EAAS/J,GAAI5C,KAAKC,QAAQ+I,WAAW2D,IACpD,IAAId,EAAW7L,KAAKgB,iBAAiB0G,IAAI7H,EAAK+L,YAClC,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUzH,QAAS,GACnByH,EAAStJ,SAAQ,SAAA6J,IACZ,EAAKxM,WAAWwM,IAAU,EAAKC,WAAWD,EAAOO,EACrD,GAER,G,+BAGD,SAAkBhK,EAAMO,GACpB,IAAM2J,EAAU7M,KAAKa,YAAY6G,IAAI/E,EAAK+I,SAC1C,GAAImB,EACA,OAAO7M,KAAKS,MAAMiH,IAAImF,GAE1B,IAAMF,EAAW,CACb/J,GAAID,EAAK+I,QACTxI,MAAOA,EAAQ,EACf0B,WAAY,CACRkI,WAAYnK,EAAK7C,SACjB+E,aAAclC,EAAK+J,sBACnBK,KAAMpK,EAAKqK,WACXC,SAAUtK,EAAKsK,SACfC,QAASvK,EAAKwK,kBACdC,OAAQzK,EAAKyK,QAEjBjN,MAAO,GACP0H,KAAMlF,EAAK7C,SACXiI,QAAS,GACTC,WAAY,GACZhD,KAAwB,oBAAlBrC,EAAKsK,SAAiC,aAAe,OAC3DhF,eAAgB,KAChBC,iBAAkB,GAEtB,OAAOlI,KAAKC,QAAQ+I,WAAW2D,EAAU,GAC5C,G,0BAGD,WACI3M,KAAKe,aAAeyB,MAAMgL,KAAKxN,KAAKS,OAAOwC,KAAI,YAAmB,IAAD,mBAAX6E,GAAW,WAK7D,OAJIA,EAAMC,QAAQ4F,OAAM,SAAAxF,GAChB,OAAO,CACV,IAEEL,CACV,IAED9H,KAAK4N,YACL5N,KAAK6N,4BACR,G,wBAED,SAAWhO,EAAMkF,GAAS,IAAD,OACjB+I,EAAW9N,KAAKsN,aAAazN,EAAMkF,GACvCA,EAAOgJ,MAAM5L,KAAK2L,GAElB,IAAIjC,EAAW7L,KAAKgB,iBAAiB0G,IAAI7H,EAAK+L,WAC9C5L,KAAKgB,iBAAiBkI,OAAOrJ,EAAK+L,WAC9BC,GACAA,EAAStJ,SAAQ,SAAA6J,GACb,EAAKmB,WAAWnB,EAAO0B,EAC1B,GAER,G,0BAED,SAAajO,EAAMkF,GAAS,IAAD,EAkBvB,OAjBAlF,EAAK+C,GAAK/C,EAAK6L,QACf7L,EAAKkF,QAAS,EACdlF,EAAKmO,UAAkBxN,IAAXuE,EAAuBlF,EAAKC,SAAWE,KAAKiB,WACxDpB,EAAKmF,KAAyB,oBAAlBnF,EAAKoN,SAAiC1O,IAAS0P,WAAW5P,IAAME,IAAS2P,KAAK7P,IAC1FwB,EAAKsO,UAAmB3N,IAAXuE,QAAwCvE,IAAhBuE,EAAOoJ,KAAhC,CAAuDtO,EAAK+C,IAA5D,mBAAmEmC,EAAOoJ,OAAQ,CAACtO,EAAK+C,IAC/F/C,EAAKkO,QACNlO,EAAKkO,MAAQ,IAEjBlO,EAAK6N,gBAAkB1N,KAAKoO,cAAcvO,EAAK6L,SAC/C1L,KAAKY,SAASkC,IAAIjD,EAAK+C,GAAI/C,GACX,CACZ+C,GAAI/C,EAAK6L,QACTsC,KAAMnO,EAAKmO,KACXD,MAAOlO,EAAKkO,MACZL,gBAAe,OAAE7N,QAAF,IAAEA,GAAF,UAAEA,EAAM6N,uBAAR,aAAE,EAAuB9K,GACxCuL,KAAMtO,EAAKsO,KAGlB,G,2BAED,SAAcvL,GACV,IAAIyL,EAAYrO,KAAKS,MAAMiH,IAAI9E,GAQ/B,YAPkBpC,IAAd6N,GACArO,KAAKS,MAAM8B,SAAQ,SAACuF,EAAOzJ,IACoB,IAAvCyJ,EAAMC,QAAQW,QAAQpG,OAAOM,MAC7ByL,EAAYvG,EAEnB,IAEEuG,CACV,K,KAGU5O,K,kCChkBf,oVAAO,IAAM6T,EAAc,cACdC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gBAEhBC,EAAa,SAAA9U,GAAO,MAAK,CAClCmG,KAAMsO,EACNjN,KAAM,CAAExH,QAASA,GAFY,EAMpB+U,EAAgB,SAAA3S,GAAU,MAAK,CACxC+D,KAAMuO,EACNlN,KAAM,CAAEpF,WAAYA,GAFe,EAK1B4S,EAAkB,SAAAC,GAAQ,MAAK,CACxC9O,KAAMwO,EACNnN,KAAM,CAAEyN,SAAUA,GAFiB,EAK1BC,EAAiB,SAAAC,GAAQ,MAAK,CACvChP,KAAMyO,EACNpN,KAAM,CACFpF,WAAY+S,EAAS/S,WACrBwG,WAAYuM,EAASvM,WACrBgG,UAAWuG,EAASvG,UACpB9J,OAAQqQ,EAASrQ,QANa,EAUzBsQ,EAAe,SAAAC,GAAO,MAAK,CACpClP,KAAM0O,EACNrN,KAAM,CAAE8N,cAAeD,GAFQ,C,gRCkKpBE,kBAAIC,EAAJD,EA3KH,WACV,IAAME,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDC,EAAYL,EAAY5M,IAAI,MAC5BkN,EAAMN,EAAY5M,IAAI,OAEtBmN,EAAWC,cACjB,EAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA4DF,oBAAS,GAArE,mBAAOG,EAAP,KAA+BC,EAA/B,KACMrB,EAAWsB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASxB,QAAnB,IAC5BK,EAAgBiB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASnB,aAAnB,IACvC,EAA6BY,wBAASvU,GAAtC,mBAAO+U,EAAP,KAAgBC,EAAhB,KACA,EAAyBT,wBAASvU,GAAlC,mBAAOiV,EAAP,KAAcC,EAAd,KACA,EAAgCX,oBAAS,GAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAsCb,oBAAS,GAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACA,GAA8Bf,oBAAS,WACrC,SAAIJ,GAA2B,KAAdA,OAGbC,GAAe,KAARA,EAIZ,IARD,qBAAOmB,GAAP,MAAgBC,GAAhB,MAWIC,GAAa,GACbC,GAAW,GACXC,QAAW3V,EAET4V,GAAW,iDAAG,qGAClBD,GAAW,IAAI1W,IAASgW,EAAOF,GADb,KAGZY,GAASE,eAHG,SAIHF,GAASG,WAJN,mCAKJH,GAASI,UALL,wBAMNJ,GAJNK,EAFY,CAGhB5T,GAHgB,KAIhB6T,MAJgB,KAKhBlW,KALgB,KAMhB4V,SANgB,MAQlBtB,EAASlB,YAAW6C,IACpB3B,EAAS6B,oBAAU,CACjB9T,GAAI4T,EAAS5T,GACbiF,KAAM2O,EAAS5T,GAAG+T,UAAU,EAAE,IAAM,YACpClI,UAAW,iBACXC,UAAW,YACXC,aAAa,EACbC,cAAc,EACdC,YAAY,EACZzB,OAAQmB,eAAaC,OACrBoI,OAAQ,CACNC,SAAUL,EAAS5T,GACnB6L,UAAW,qBAGfoG,EAAS6B,oBAAUpI,MACnB0H,IAAW,GAxBO,4CAAH,qDA2BXc,GAAc,iDAAG,wFACrBb,GAAaW,EAAOG,aAAepC,EAAY,+BAC5B,IAAIqC,KACZC,gBAAgBhB,IAAY,SAACiB,EAAK7Q,GACvCA,GACFmP,EAAUnP,EAEb,IAAE,WACD2P,IAAW,EACZ,IAToB,2CAAH,qDAYdmB,GAAY,iDAAG,WAAOxC,GAAP,2EACnBuB,GAAWU,EAAOG,aAAepC,EAAY,8BACzB,IAAIqC,KACZC,gBAAgBf,IAAU,SAACgB,EAAK7Q,GACtCA,GACFqP,EAAQrP,EAEX,IAAE,WACD2P,IAAW,EACZ,IATkB,2CAAH,sDAYZoB,GAAiB,iDAAG,WAAOF,EAAKG,GAAZ,kGACpBC,EAAO,CACT1U,GAAI,MACJsU,IAAKA,EACL7Q,KAAMgR,EACNC,KAAM,CAAEzP,KAAM,MAAO7C,KAAM,gBAEvBmR,EAAW,IAAIoB,SAAqB/W,EAAW8W,EAAKjR,MAPlC,SAQN8P,EAASG,WARH,OAQpBG,EARoB,OASpB3C,EAAW2C,EAAMhW,MAAM+E,QAAO,SAAC3F,GAAD,oBAAUA,QAAV,IAAUA,GAAV,UAAUA,EAAM+E,kBAAhB,aAAU,EAAkB4S,MAA5B,KAC5BC,EAAQ3D,EAASrQ,MAAM,SAAA5D,GAAI,2BAAIA,EAAK+E,kBAAT,iBAAI,EAAiB4S,cAArB,iBAAI,EAA0B,UAA9B,aAAI,EAA8BzX,SAAS6U,EAA3C,MAEzBD,EAAY8C,EAAM5P,KACxBoO,GAAaW,EAAOG,aAAepC,EAAY,+BAC5B,IAAIqC,KACZC,gBAAgBhB,IAAY,SAACiB,EAAK7Q,GACvCA,IACFmP,EAAUnP,GACV8Q,GAAaxC,GAEhB,GAAC,QAEFqB,IAAW,GACXF,GAAe,IAvBO,2CAAH,wDAmCvB,GARInB,GAA2B,KAAdA,QAAgCnU,IAAZ+U,GACnCuB,KAGEnC,GAA2B,KAAdA,QAA8BnU,IAAViV,GACnC0B,GAAaxC,GAGXC,GAAe,KAARA,GAAce,GAClBA,EAAU,CACb,IAAM+B,GAAc,IAAIV,IAClBW,GAAaf,EAAOgB,eAAiBhB,EAAOiB,mBAClDH,GAAYT,gBAAgBU,GAAYP,IACxCxB,GAAY,EACb,CAQH,OALIL,GAAWE,IAAUI,IACvBO,KACAN,GAAe,IAIf,eAAC,IAAD,CAAkBgC,MAAOA,IAAzB,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAKC,QAAQ,OAAOC,UAAU,iBAA9B,UACE,cAAC,IAAD,CACEhD,iBAAkBA,EAClBC,oBAAqBA,EACrBC,uBAAwBA,EACxBC,0BAA2BA,IAE7B,cAAC,IAAD,CAAK6C,UAAW,qBAAhB,SACIlE,EAAS1P,OAAS,EAChB,cAAC,IAAD,IACA,cAAC,IAAD,CACE2R,QAASA,GACTf,iBAAkBA,EAClBC,oBAAqBA,EACrBC,uBAAwBA,EACxBC,0BAA2BA,SAMrC,cAAC,IAAD,CACE8C,KAAMjD,EACNjG,YAAa,kBAAMkG,GAAoB,EAA1B,IAGf,cAAC,IAAD,CACEgD,KAAM/C,EACNnG,YAAa,kBAAMoG,GAA0B,EAAhC,IAGf,cAAC,IAAD,CACE8C,KAAwB,OAAlB9D,EACNA,cAAeA,MAItB,G,uHC1LK+D,EAAYC,YAAW,CACzBC,gBAAiB,CACbC,SAAU,WACVC,MAAO,OACPC,OAAQ,UA0CDC,IAnCI,WACf,IAAMC,EAAUP,IACV/W,EAAQuX,cACd,EAAsC3D,wBAASvU,GAA/C,mBAAOmY,EAAP,KAAsBC,EAAtB,KAyBA,OAvBAC,qBAAU,WAIN,QAAsBrY,IAAlBmY,EAA6B,CAC7B,IAAMG,EAAYC,qCAElBD,EAAUE,MAAMC,YAAW,SAACpZ,EAAMqD,GAC9BrD,EAAKqZ,iBAAiB,UAAU,SAACrZ,GAC7B,IAAMsZ,EAAQ,IAAIC,YAAY,cAAe,CACzCC,OAAQxZ,IAEZyZ,SAASC,cAAcJ,EAE1B,GACJ,IAEGL,GACAF,EAAaE,EAAUU,eAE9B,CACJ,GAAE,CAACrY,EAAOwX,IAGP,qBAAKX,UAAWS,EAAQL,gBAAxB,cACuB5X,IAAlBmY,EAA8B,cAAC,IAAD,IAAuB,cAACA,EAAD,KAGjE,C,mCClDD,kEA4Bec,IAvBQ,SAACC,GACtB,OACE,cAAC,IAAD,CAAK1B,UAAU,eAAf,SACK0B,EAAM3D,QACL,mCACA,cAAC,IAAD,CAAQ4D,OAAQD,EAAM3D,YAEtB,qCACE,eAAC,IAAD,CAAY7G,QAAQ,KAApB,UAA0B0K,IAA1B,gBACA,eAAC,IAAD,CACE1K,QAAQ,WACRE,kBAAgB,EAChBC,MAAM,UACNC,QAAS,kBAAMoK,EAAMvE,2BAA0B,EAAtC,EAJX,eAMM0E,WAOjB,C,mCC3BD,yDA2BeC,IAtBK,SAACJ,GACjB,IAAQzB,EAAwByB,EAAxBzB,KAAM9D,EAAkBuF,EAAlBvF,cACRU,EAAWC,cAOjB,OACI,eAAC,IAAD,CAAQmD,KAAMA,EAAM8B,QALJ,WAChBlF,EAASZ,YAAa,MACzB,EAGG,UACI,cAAC,IAAD,CAAK+D,UAAU,gBAAf,SACI,cAAC,IAAD,CAAY9I,QAAQ,KAApB,sCAGJ,cAAC,IAAD,CAAK8I,UAAU,cAAf,SACI,eAAC,IAAD,CAAY9I,QAAQ,KAApB,cAA2BiF,EAA3B,WAIf,C,oRC8Mc6F,IA3MY,SAACN,GAC1B,IAAM7E,EAAWC,cACTmD,EAAsByB,EAAtBzB,KAAMlJ,EAAgB2K,EAAhB3K,YACd,EAA0CkL,IAAMlF,cAASvU,GAAzD,mBAAO0Z,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,IAAMlF,SAAS,IAArD,mBAAOqF,EAAP,KAAoBC,EAApB,KACMvG,EAAWsB,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASuC,kBAA1B,IAC7B,EAAgDoC,IAAMlF,SAASjB,GAA/D,mBAAOwG,EAAP,KAAyBC,EAAzB,KAEItE,EAAa,GACbC,EAAW,GACXC,OAAW3V,EAMT4V,EAAW,iDAAG,WAAOoE,EAAQC,GAAf,wFAClBtE,EAAW,IAAI1W,IAASgb,EAAMD,GADZ,KAGZrE,EAASE,eAHG,SAIHF,EAASG,WAJN,mCAKJH,EAASI,UALL,wBAMNJ,EAJNK,EAFY,CAGhB5T,GAHgB,KAIhB6T,MAJgB,KAKhBlW,KALgB,KAMhB4V,SANgB,MAQlBtB,EAASlB,YAAW6C,IACpB3B,EACE6B,oBAAU,CACR9T,GAAI4T,EAAS5T,GACbiF,KAAM2O,EAAS5T,GAAG+T,UAAU,EAAG,IAAM,YACrClI,UAAW,iBACXC,UAAW,YACXC,aAAa,EACbC,cAAc,EACdC,YAAY,EACZzB,OAAQmB,eAAaC,OACrBoI,OAAQ,CACNC,SAAUL,EAAS5T,GACnB6L,UAAW,qBAIjBoG,EAAS6B,oBAAUpI,MAzBD,4CAAH,wDA4BXoM,EAAa,SAAC7b,GAClBoX,EACEW,EAAOG,aAAelY,EAAU,8BAClC,IAAM6Y,EAAc,IAAIV,IACxBU,EAAYT,gBAAgBhB,GAAY,SAACiB,EAAK5W,GACxCA,IACF4V,EACEU,EAAOG,aACPlY,EACA,6BACF6Y,EAAYT,gBAAgBf,GAAU,SAACgB,EAAK7Q,GACtCA,IACF+P,EAAY9V,EAAY+F,GACxBkU,EAAoBzG,GACpBqG,OAAiB3Z,GACjBuO,IAEH,IAEJ,GACF,EAqCK4L,EAAsB,SAACrR,GAC3B,IAAMsR,EAAM,IAAIC,OAAOT,EAAa,MAEpC,YAAuB5Z,IAAhB4Z,GAA6C,KAAhBA,EAElC9Q,EAEAA,EAAMzG,QAAQ+X,GAAK,SAASE,GAAM,MAAO,MAAMA,EAAI,MAAO,GAC7D,EAMD,OAJAjC,qBAAU,WACRZ,GAA4B,IAApBnE,EAAS1P,QA9CE,WACnB,IAAMsT,EAAc,IAAIV,IAClB+D,EAAQ,iDAAG,WAAO7D,EAAKG,GAAZ,8FACXC,EAAO,CACT1U,GAAI,MACJsU,IAAKA,EACL7Q,KAAMgR,EACNC,KAAM,CAAEzP,KAAM,MAAO7C,KAAM,gBAEvBmR,EAAW,IAAIoB,SAAqB/W,EAAW8W,EAAKjR,MAP3C,SAQG8P,EAASG,WARZ,OAQXG,EARW,QASX3C,EAAW2C,EAAMhW,MAAM+E,QAAO,SAAC3F,GAAD,oBAAUA,QAAV,IAAUA,GAAV,UAAUA,EAAM+E,kBAAhB,aAAU,EAAkBoW,SAA5B,KACzBzY,SAAS,SAAA1C,GAAI,iBAAIA,EAAK+E,WAAa/E,EAAK+E,WAAWqW,eAAhB,UAAiCpb,EAAK+E,kBAAtC,iBAAiC,EAAiB0E,aAAlD,iBAAiC,EAAyB,UAA1D,aAAiC,EAA6B4R,cAAgB,IAApG,IACtBrG,EAAShB,YAAgBC,IACzByG,EAAoBzG,GAZL,2CAAH,wDAcR6D,EAAaf,EAAOgB,eAAiBhB,EAAOiB,mBAClDH,EAAYT,gBAAgBU,EAAYoD,EACzC,CA4BkCI,EAClC,IAGC,eAAC,IAAD,CACEnD,UAAU,kBACVC,KAAMA,EACNlJ,YAxBgB,WAClBwL,EAAoBzG,GACpBqG,OAAiB3Z,GACjBuO,GACD,EAqBGqM,WAAY,CACVC,MAAO,CACL/C,MAAQ,UANd,UAUE,eAAC,IAAD,CAAagD,MAAM,SAAnB,UACE,qBACEtD,UAAU,eACV/M,IAAKsQ,IACLjM,QAASP,EACTU,IAAI,UAEN,cAAC,IAAD,CAAYP,QAAQ,KAApB,SAA0B0H,EAAO5I,KAAKwN,qBACtC,cAAC,IAAD,CAAYtM,QAAQ,YAApB,SAAiC0H,EAAO5I,KAAKyN,gCAE9C3H,EAAS1P,OAAS,EACjB,qCACE,cAAC,IAAD,CAAK4T,UAAU,gBAAf,SACE,cAAC,IAAD,CACE7I,WAAS,EACTI,SAA8B,IAApBuE,EAAS1P,OACnBkF,MAAOsN,EAAO5I,KAAK0N,yBACnB9Y,GAAG,YACH+Y,SA1DS,SAACxC,GACpB,IAAMyC,EAAkBzC,EAAMvV,OAAOkE,MAAMoT,cACvCW,EAAW/H,EAAStO,QAAO,SAAC3G,GAAD,OAC7BA,EAAQ+F,WAAWqW,eAAelb,SAAS6b,IAAoB/c,EAAQgJ,KAAK9H,SAAS6b,EADxD,IAG/BvB,EAAeuB,GACfrB,EAAoBsB,EACrB,MAsDQvB,EAAiBlW,OAAS,EACzB,cAAC,IAAD,CAAK4T,UAAU,sCAAsCsD,MAAM,QAA3D,SACE,eAAC,IAAD,WAAahB,EAAiBlW,OAA9B,cAIJ,KAEA,cAAC,IAAD,CAAK4T,UAAU,gBAAf,SACE,cAAC,IAAD,CAAOA,UAAU,uBAAjB,SACE,cAAC,IAAD,CAAMA,UAAU,gBAAhB,SACGsC,EAAiBrX,KAAI,SAACpE,GAAD,aACpB,qCACE,cAAC,IAAD,CACEmZ,UAAU,eAEV8D,SAAU5B,IAAkBrb,EAAQgJ,KACpCyH,QAAS,SAAC6J,GAAD,OAxJO5T,EAyJa1G,EAAQgJ,UAxJvDsS,EAAiB5U,GADS,IAAQA,CAwJP,EAJX,SAQE,cAAC,IAAD,CACEwW,QACE,cAAC,IAAD,CACE/W,KAAK,UACLgT,UAAU,oBACVgE,wBAAyB,CACvBC,OACEtB,EAAmB,UAAC9b,EAAQ+F,kBAAT,aAAC,EAAoB0E,MAAM,UAf1D,eAEezK,EAAQgJ,OAmBvB,cAAC,IAAD,MAvBkB,aA+B9B,cAAC,IAAD,CAAKmQ,UAAU,gBAAf,SACE,cAAC,IAAD,CAAkBA,UAAU,sBAGhC,cAAC,IAAD,CAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CACEjJ,YAAa,kBAAM2L,EAAWR,EAAjB,EACblL,mBAAiCxO,IAAlB0Z,QAKxB,C,wGCrOc,MAA0B,wC,iECGnCgC,EAAsBC,aAAW,kBACrCC,YAAa,CACXC,aAAc,CACZC,gBAAiBvL,IAAKmB,oBAExBqK,gBAAiB,CACfD,gBAAiBvL,IAAKkB,aANW,GAAXkK,CAS1BK,KAQaC,EANK,SAAC/C,GAAD,OAAWA,EAAM9R,MACnC,cAACsU,EAAD,aAAqBhN,QAAQ,eAAkBwK,IAE/C,cAAC8C,EAAA,EAAD,aAAgBtN,QAAQ,eAAkBwK,GAHxB,ECkBLgD,EA5BE,SAAChD,GAAW,IAAD,EAClBiD,EAA8BjD,EAA9BiD,SAAUrF,EAAoBoC,EAApBpC,KAAlB,EAAsCoC,EAAdkD,cAAxB,MAA+B,GAA/B,EACA,OACE,eAACC,EAAA,EAAD,CAAK7E,UAAU,OAAf,UACE,cAAC8E,EAAA,EAAD,iBAAaxF,QAAb,IAAaA,OAAb,EAAaA,EAAMzP,OAEjB+U,EAAOxY,OAAS,EACd,qCACE,cAAC0Y,EAAA,EAAD,CAAYrO,UAAU,SAAtB,mBAAgCmO,EAAO,UAAvC,aAAgC,EAAW1I,UAC3C,cAAC,EAAD,CAAapM,MAAO,GAAIF,OAAO,OAGjC+U,EAAW,IACT,qCACE,eAACG,EAAA,EAAD,CAAYrO,UAAU,OAAtB,UAA8BkO,EAA9B,OACA,cAAC,EAAD,CAAa7U,MAAO6U,OAGtB,qCACE,eAACG,EAAA,EAAD,CAAYrO,UAAU,SAAtB,UAAgCkO,EAAhC,OACA,cAAC,EAAD,CAAa7U,MAAO6U,EAAUtN,MAAM,mBAOjD,EC/Bc,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,qCCK1B,SAAS0N,EAAT,GAAiC,IAAR9R,EAAO,EAAPA,IACtC,OACE,qBAAKA,IAAa,QAARA,EAAgB+R,EAAc,QAAR/R,EAAgBgS,EAAMC,EAAUzN,IAAKxE,GAExE,CCTc,UAA0B,mC,QCOnCkS,EAAa,SAAC7F,EAAM8F,EAAYC,IAChB,IAAIrG,KAIZsG,eAAehG,GAHV,SAAAD,GACfgG,EAAS/F,EAAMD,EAChB,GAC0C+F,EAC5C,EAEM,SAASG,EAAT,GAAuD,IAA7BjG,EAA4B,EAA5BA,KAAMkG,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,SAC/C,EAAgCtI,mBAAS,GAAzC,mBAAO4H,EAAP,KAAiBc,EAAjB,KASA,OAPA5E,qBAAU,WAAM,sDACd,wFACEsE,EAAW7F,EAAMmG,EAAaJ,GADhC,4CADc,uBAAC,WAAD,wBAIdK,EACD,GAAE,IAGD,eAACb,EAAA,EAAD,CAAK7E,UAAU,qBAAf,UAEE,cAAC+E,EAAD,CAAe9R,IAAK,QACpB,cAAC,EAAD,CAAUqM,KAAMA,EAAMqF,SAAUA,IAC/BA,EAAW,IACV,qBACE1R,IAAK0S,EACLrO,QAAS,kBAAMkO,EAASlG,EAAf,EACTgB,MAAM,KACN+C,MAAO,CAAEuC,OAAQ,WACjBnO,IAAI,WAGJ,qBACAxE,IAAK0S,EACLrO,QAAS,kBAAMkO,EAASlG,EAAf,EACTgB,MAAM,KACN+C,MAAO,CAAEuC,OAAQ,WACjBnO,IAAI,WAMb,CClDc,UAA0B,mCCMlC,SAASoO,EAAT,GAAkD,IAA3BvG,EAA0B,EAA1BA,KAAMkG,EAAoB,EAApBA,SAAUZ,EAAU,EAAVA,OAC5C,OACE,eAACC,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UAEE,cAAC+E,EAAD,CAAe9R,IAAK,QACpB,cAAC,EAAD,CAAUqM,KAAMA,EAAMsF,OAAQA,IAC9B,qBACE3R,IAAK6S,EACLxO,QAAS,kBAAMkO,EAASlG,EAAf,EACTgB,MAAM,KACN+C,MAAO,CAAEuC,OAAQ,WACjBnO,IAAI,aAIX,CCjBM,SAASsO,EAAT,GAAwD,IAA9BC,EAA6B,EAA7BA,MAAOR,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,SAChD,OACE,eAACR,EAAA,EAAD,CAAK7E,UAAU,iBAAf,UACE,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,KAAtB,4BACCuP,EAAM/a,KAAI,SAACgb,GAAD,OACT,cAACpB,EAAA,EAAD,UACGoB,EAAYrB,OAAOxY,OAClB,cAACyZ,EAAD,CACEvG,KAAM2G,EAAY3G,KAClBsF,OAAQqB,EAAYrB,OACpBY,SAAUA,IAGZ,cAACD,EAAD,CACEC,SAAUA,EACVH,SAAUA,EACV/F,KAAM2G,EAAY3G,KAClB4G,WAAYF,EAAM5Z,UAZd6Z,EAAYrb,GADb,MAoBhB,C,WCkEcub,EAvFE,SAAC,GAAgC,EAA9BpP,YAA+B,IAAlB2L,EAAiB,EAAjBA,WAC/B,EAAsB3F,wBAASvU,GAA/B,mBAAO4d,EAAP,KAAYC,EAAZ,KACA,EAAwBtJ,wBAASvU,GAAjC,mBAAOia,EAAP,KAAa/E,EAAb,KA6BM4I,EAAS,SAACN,GAA0B,IAAD,gBACpBA,GADoB,IACvC,2BAA0B,CAAC,IAAhB1G,EAAe,QACN,gBAAdA,EAAKtS,MAA0BsS,EAAKzP,KAAKP,MAAM,KAAKC,QAAUgX,IAAmBC,uBAAuB,GAC1GH,EAAO,CACL/G,OACAsF,OAAQtF,EAAKvK,KAAOwR,IAAmBE,YAAc,CAAC,CAAEvK,QAAS,6BAAgC,GACjGtR,GAAI0B,KAAKoa,WAEY,qBAAdpH,EAAKtS,MAA+BsS,EAAKzP,KAAKP,MAAM,KAAKC,QAAUgX,IAAmBC,uBAAuB,GACtH9I,EAAQ,CACN4B,OACAsF,OAAQtF,EAAKvK,KAAOwR,IAAmBE,YAAc,CAAC,CAAEvK,QAAS,6BAAgC,GACjGtR,GAAI0B,KAAKoa,WAGXtZ,QAAQwC,MAAM,4BAEjB,CAjBsC,+BAkBxC,EAEK+W,EAAU1E,IAAM2E,OAAO,UAIvBZ,EAAQ,CAACI,EAAK3D,GAAMjV,QAAO,SAAA7C,GAAI,YAAanC,IAATmC,CAAJ,IAErC,OACE,0CACYnC,IAATia,QAA8Bja,IAAR4d,EACnB,yCACA,cAAC,IAAD,CACFS,YAAab,EAAM/a,KAAI,SAAAN,GAAI,OAAIA,EAAK2U,IAAT,IAC3BqE,SAAU,SAACmD,GAAD,EACVC,wBAAwB,EACxBT,OAAQ,SAACU,GAAD,OAAcV,EAAOU,EAArB,EACRC,cAAeV,IAAmBC,uBAClCC,YAAaF,IAAmBE,YAChCS,eAAgB,SAACC,GAAD,OAAcb,EAAOa,GAAU,EAA/B,EAChBC,YAAY,EACZC,IAAKV,EACLW,KAlBqB,kBAAM,qBAAKrU,IAAKsU,EAAY9P,IAAI,UAAhC,EAmBrB+P,aAAc,8BACdC,WAAYlB,IAAmBmB,WAGhC1B,GAASA,EAAM5Z,OACd,cAAC2Z,EAAD,CAAgBC,MAAOA,EAAOR,SAxDnB,SAAClG,IACT,OAAH8G,QAAG,IAAHA,OAAA,EAAAA,EAAK9G,QAASA,GAAuB,gBAAdA,EAAKtS,MAA0BsS,EAAKzP,KAAKP,MAAM,KAAKC,QAAUgX,IAAmBC,uBAAuB,IAEpH,OAAJ/D,QAAI,IAAJA,OAAA,EAAAA,EAAMnD,QAASA,GAAuB,qBAAdA,EAAKtS,MAA+BsS,EAAKzP,KAAKP,MAAM,KAAKC,QAAUgX,IAAmBC,uBAAuB,GAG9IpZ,QAAQwC,MAAM,6BAFd8N,OAAQlV,GAFR6d,OAAO7d,EAMV,EAgDuD6c,SAtEvC,SAAC/F,EAAMjR,IACf,OAAH+X,QAAG,IAAHA,OAAA,EAAAA,EAAK9G,QAASA,GAAuB,gBAAdA,EAAKtS,MAA0BsS,EAAKzP,KAAKP,MAAM,KAAKC,QAAUgX,IAAmBC,uBAAuB,IAIpH,OAAJ/D,QAAI,IAAJA,OAAA,EAAAA,EAAMnD,QAASA,GAAuB,qBAAdA,EAAKtS,MAA+BsS,EAAKzP,KAAKP,MAAM,KAAKC,QAAUgX,IAAmBC,uBAAuB,GAK9IpZ,QAAQwC,MAAM,6BAJd8N,EAAQ,2BACH+E,GADE,IACIpU,UALXgY,EAAO,2BACFD,GADC,IACI/X,SASb,IA2DM,UAEO7F,IAATia,QAA8Bja,IAAR4d,GACrB,cAACtP,EAAA,EAAD,CAAcC,YAAa,WAAO2L,EAAWsD,EAAO,MAI3D,E,6CC5Fc,MAA0B,gCCA1B,MAA0B,uCCoI1B2B,EAtHK,SAAC,GAAgC,EAA9B5Q,YAA+B,IAAlB2L,EAAiB,EAAjBA,WAClC,EAA4B3F,oBAAS,GAArC,mBAAO6K,EAAP,KAAeC,EAAf,KACA,EAAsB9K,mBAAS,IAA/B,mBAAOmC,EAAP,KAAY4I,EAAZ,KACA,EAA4C/K,oBAAS,GAArD,mBAAOgL,EAAP,KAAuBC,EAAvB,KACA,EAA0BjL,mBAAS,CACjC,CACEnS,GAAI,MACJsU,SAAK1W,EACL6F,UAAM7F,EACN8W,KAAM,CACJzP,KAAM,MACN7C,KAAM,gBAGV,CACEpC,GAAI,OACJsU,SAAK1W,EACL6F,UAAM7F,EACN8W,KAAM,CACJzP,KAAM,OACN7C,KAAM,uBAhBZ,mBAAOgZ,EAAP,KAAciC,EAAd,KAwEA,OATApH,qBAAU,WACJ+G,IAAWG,QACSvf,IAAlBwd,EAAM,GAAG3X,WAAwC7F,IAAlBwd,EAAM,GAAG3X,OAC1CwZ,GAAU,GACVG,GAAkB,GAGvB,GAAE,CAACJ,EAAQG,EAAgB/B,IAG1B,qCACE,cAACkC,EAAA,EAAD,CAAahR,QAAQ,SAASC,WAAS,EAAvC,SACE,cAACgR,EAAA,EAAD,CACEvd,GAAG,eACHwd,YAAY,cACZpI,UAAW+H,EAAiB,gBAAkB,GAC9CM,eACE,cAACC,EAAA,EAAD,CAAgBjI,SAAS,QAAzB,SACE,qBAAKpN,IAAK8U,EAAiBQ,EAAaC,EAAM/Q,IAAI,WAGtD3H,MAAOoP,EACPyE,SAAU,SAACmD,GAAD,OAAOgB,EAAOhB,EAAElb,OAAOkE,MAAvB,EACV2Y,aACU,KAARvJ,EACE,cAACoJ,EAAA,EAAD,CAAgBjI,SAAS,MAAM/I,QA9BzB,WAChBwQ,EAAO,IACPE,GAAkB,EACnB,EA2BW,SACE,qBAAK/U,IAAK0S,EAAQlO,IAAI,aAEtB,SAKTsQ,EACC,cAACjR,EAAA,EAAD,CAAcC,YAAa,WAAO2L,EAAWsD,EAAO,IAEpD,cAAC/O,EAAA,EAAD,CACEC,QAAQ,YACRC,WAAS,EACTI,SAAkB,KAAR2H,EACV9H,kBAAgB,EAChBC,MAAM,UACNC,QA1DW,WACjB,IAAMoI,EAAc,IAAIV,IAClB0J,EAAe,IAAI1J,IACnB+D,EAAW,SAAC7D,EAAKG,IA7BR,SAACH,EAAK7Q,GACrB,IAAIsa,EAAUzJ,EAAI5P,MAAM,KAAKC,MAE7B0Y,GAAS,SAACW,GAAD,OACPA,EAAK3d,KAAI,SAACN,GACR,OAAIA,EAAKC,KAAO+d,QAAoBngB,IAAT6F,EAClB,2BAAK1D,GAAZ,IAAkBuU,MAAK7Q,SAElB1D,CACR,GANM,GAQV,CAmBG0a,CAASnG,EAAKG,EACf,EACDwI,GAAU,GACVnI,EAAYT,gBAAgBC,EAAK6D,GAAU,WAAQ,IACnD2F,EAAazJ,gBArBI,SAAAC,GACjB,IAAI2J,EAAO3J,EAAI5P,MAAM,KACjBzI,EAAUgiB,EAAKtZ,MAAM1E,QAAQ,iBAAkB,IAAIA,QAAQ,OAAQ,IACnEie,EAAWD,EAAKE,QAOpB,OANAF,EAAKtZ,MACLsZ,EAAK5d,KAAI,SAAAN,GAEP,OADAme,EAAWA,EAAW,IAAMne,EACrBA,CACR,IACcme,EAAW,kBAAoBjiB,EAAU,gCAEzD,CAU8BmiB,CAAW9J,GAAM6D,GAAU,WAAQ,GACjE,EA2CK,SAQG6E,EAAS,cAACqB,EAAA,EAAD,CAAkBlU,KAAM,GAAIsC,MAAO,YAAgB,WAKtE,E,8CCxGc6R,EAvBE,SAACxH,GAChB,IAAQ7N,EAAqC6N,EAArC7N,SAAU/D,EAA2B4R,EAA3B5R,MAAOvC,EAAoBmU,EAApBnU,MAAU4b,EAAnC,YAA6CzH,EAA7C,GAEA,OACE,6CACE0H,KAAK,WACLC,OAAQvZ,IAAUvC,EAClByS,UAAU,cACVpV,GAAE,0BAAqB2C,GACvB,uCAA+BA,IAC3B4b,GANN,aAQGrZ,IAAUvC,GAAS,mCAAGsG,MAG5B,E,oCCdD,SAASyV,EAAU/b,GACjB,MAAO,CACL3C,GAAG,cAAD,OAAgB2C,GAClB,gBAAgB,mBAAhB,OAAoCA,GAEvC,CAED,IAqBegc,EArBY,SAAC7H,GAC1B,IAAQ5R,EAAqC4R,EAArC5R,MAAO0Z,EAA8B9H,EAA9B8H,aAAczS,EAAgB2K,EAAhB3K,YAE7B,OACE,qCACE,qBAAK9D,IAAKsQ,IAAOjM,QAASP,EAAaU,IAAI,UAC3C,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAtB,iCAEA,eAACgT,EAAA,EAAD,CACEzJ,UAAU,UACVlQ,MAAOA,EACP6T,SAAU6F,EACV,aAAW,sBAJb,UAME,cAACE,EAAA,EAAD,aAAK1J,UAAU,UAAU1O,MAAM,gBAAmBgY,EAAU,KAC5D,cAACI,EAAA,EAAD,aAAK1J,UAAU,UAAU1O,MAAM,cAAiBgY,EAAU,UAIjE,E,+CC2DcK,IA5EM,SAACjI,GACpB,IAAM7E,EAAWC,cACTmD,EAAsByB,EAAtBzB,KAAMlJ,EAAgB2K,EAAhB3K,YACd,EAA0BkL,IAAMlF,SAAS,GAAzC,mBAAOjN,EAAP,KAAc8Z,EAAd,KAUMlH,EAAU,iDAAG,WAAOsD,GAAP,kGACK,IAAjBA,EAAM5Z,aAAoC5D,IAAlBwd,EAAM,GAAG3X,WAAwC7F,IAAlBwd,EAAM,GAAG3X,KADpD,iBAEXoP,OAAQjV,EACR+U,OAAU/U,EAHC,cAKEwd,GALF,IAKf,2BAAS1G,EAAe,QAEJ,SADd1H,EAAY0H,EAAKA,KAAKzP,KAAKP,MAAM,KAAKC,SAExCgO,EAAU+B,EAAKjR,MAEC,SAAduJ,IACF6F,EAAQ6B,EAAKjR,KAXF,sCAcT8P,EAAW,IAAI1W,KAASgW,EAAOF,GAdtB,KAgBTY,EAASE,eAhBA,SAiBAF,EAASG,WAjBT,oCAkBDH,EAASI,UAlBR,yBAmBHJ,EAJNK,EAfS,CAgBb5T,GAhBa,KAiBb6T,MAjBa,KAkBblW,KAlBa,KAmBb4V,SAnBa,MAsBfpH,IACA8F,EAASlB,aAAW6C,IACpB3B,EAAS6B,qBAAU,CACjB9T,GAAI4T,EAAS5T,GACbiF,KAAM2O,EAAS5T,GAAG+T,UAAU,EAAE,IAAM,YACpClI,UAAW,iBACXC,UAAW,YACXC,aAAa,EACbC,cAAc,EACdC,YAAY,EACZzB,OAAQmB,gBAAaC,OACrBoI,OAAQ,CACNC,SAAUL,EAAS5T,GACnB6L,UAAW,qBAGfoG,EAAS6B,qBAAUpI,OAtCJ,wBAwCfS,IACA8F,EAASZ,aAAa,sCAzCP,4CAAH,sDA6ChB,OACE,eAAC4N,EAAA,EAAD,CAAQ5J,KAAMA,EAAM8B,QAAShL,EAA7B,UACE,cAAC8N,EAAA,EAAD,CAAK7E,UAAU,gBAAf,SACE,cAAC,EAAD,CAAoBwJ,aAxDL,SAACrI,EAAO2I,GAC3BF,EAASE,EACV,EAsDqDha,MAAOA,EAAOiH,YAAaA,MAG7E,eAAC8N,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACE,cAAC+J,EAAD,CAAgBja,MAAOA,EAAOvC,MAAO,EAArC,SACE,cAAC,EAAD,CAAUwJ,YAAaA,EAAa2L,WAAYA,MAElD,cAACqH,EAAD,CAAgBja,MAAOA,EAAOvC,MAAO,EAArC,SACE,cAAC,EAAD,CAAawJ,YAAaA,EAAa2L,WAAYA,WAK5D,C,oHCvFc,MAA0B,yCCA1B,MAA0B,iCCA1B,MAA0B,wCCA1B,MAA0B,mC,OCsD1BsH,EAxCO,SAACtI,GACrB,IAAQuI,EAAiDvI,EAAjDuI,OAAQC,EAAyCxI,EAAzCwI,UAAWC,EAA8BzI,EAA9ByI,cAAeC,EAAe1I,EAAf0I,WAK1C,OACE,eAACvF,EAAA,EAAD,CAAK7E,UAAU,iBAAf,UACI,qBAAK/M,IAAKoX,EAAM5S,IAAI,SACpB,cAAC6S,EAAA,EAAD,CAAY,aAAW,SAAShT,QAAS,kBAAM4S,GAAWD,EAAjB,EAAzC,SACE,qBAAKhX,IAAMgX,EAAuBM,EAAdC,EAA0B/S,IAAI,aAGnDwS,GACC,cAAC/B,EAAA,EAAD,CAAahR,QAAQ,SAASC,WAAS,EAAvC,SACE,cAACsT,EAAA,EAAD,CACE,oBAAkB,OAClBC,kBAAkB,EAClB9f,GAAG,4BACHwd,YAAY,yBACZC,eACE,cAACC,EAAA,EAAD,CAAgBjI,SAAS,QAAzB,SACE,qBAAKpN,IAAK0X,EAAQlT,IAAI,aAG1BgR,aACE,cAACH,EAAA,EAAD,CAAgBjI,SAAS,MAAzB,SACE,cAACpJ,EAAA,EAAD,CAAQK,QAAS,kBAAM6S,EAAcA,EAApB,EAAjB,sBAGJra,MAAOsa,EACPzG,SA7BS,SAAEmD,GACrBqD,EAAcrD,EAAElb,OAAOkE,MACxB,QAkCF,E,4ECpDc,MAA0B,iC,6ECwD1B8a,EAlDQ,SAAClJ,GACtB,IACE7a,EAOE6a,EAPF7a,QACAgkB,EAMEnJ,EANFmJ,UAEAC,GAIEpJ,EALFqJ,UAKErJ,EAJFoJ,WACAE,EAGEtJ,EAHFsJ,UACAC,EAEEvJ,EAFFuJ,aACG9B,EAPL,YAQIzH,EARJ,GAUA,OACE,cAACwJ,EAAA,EAAD,aACE7c,KAAMxH,EACNyK,MACE,sBAAK0O,UAAS,oBAAegL,GAA7B,UACE,cAACnG,EAAA,EAAD,CAAK7E,UAAU,cACf,cAAC8E,EAAA,EAAD,CACExN,QAAS,SAAA6J,GACP8J,EAAa9J,EAAOO,EAAMyJ,QAC1BhK,EAAMiK,gBACP,EACDlU,QAAQ,QACR8I,UAAU,YANZ,SAOG6K,IAEFC,EAAY,EACX,eAAChG,EAAA,EAAD,CACE5N,QAAQ,UACR8I,UAAU,eACV3I,MAAM,UAHR,UAKGyT,EACD,qBAAK7X,IAAKoY,EAAM5T,IAAI,YAEpB,SAGJ0R,GAGT,E,uCC0HcmC,EA7JW,SAAC5J,GAAW,IAAD,EAC7B7E,EAAWC,cAETsN,EAA2B1I,EAA3B0I,WAAYnhB,EAAeyY,EAAfzY,WACd6S,EAAWrS,KAAKjC,MAAMiC,KAAK8hB,UAAU,CAAC/O,OAAOV,SAAS7S,GAAYV,QAClEijB,EAAepO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASmO,iBAAnB,IACtC,EAA0B1O,mBAAS,IAAnC,mBAAOtU,EAAP,KAAcijB,EAAd,KACA,EAA0B3O,mBAASjB,GAAnC,mBAAO/F,EAAP,KAAc4V,EAAd,KACMC,EAAUxO,aAAY,SAAAC,GAAK,OAAIA,EAAMuO,OAAV,IAE3BX,EAAe,SAACnE,EAAGqE,GAAY,IAAD,EAC5BtjB,EAAO2U,OAAOV,SAAS7S,GAAYkV,SAASvV,SAAS8G,IAAIyb,GAC/DtO,EAASd,YAAe,CACtB9S,WAAYA,EACZwG,WAAU,OAAE5H,QAAF,IAAEA,GAAF,UAAEA,EAAM6N,uBAAR,aAAE,EAAuB9K,GACnC6K,UAAW5N,EAAK+C,GAChBe,OAAQkgB,YAEkBrjB,IAAxBojB,EAAQ3iB,KACV2iB,EAAQ3iB,GAAYmM,OAASmB,eAAaC,OAC1CqG,EAASiP,eAA2BF,EAAQ3iB,WAElBT,IAAxBojB,EAAQ3iB,KACV2iB,EAAQ3iB,GAAYmM,OAASmB,eAAaC,OAC1CqG,EAASiP,eAA2BF,EAAQ3iB,KAE/C,EAuBG8iB,EAAWP,EAAaviB,WAAWqG,MAAM,KACzCyc,EAASA,EAAS3f,OAAS,KAAOnD,GAAcR,EAAM2D,OAAS,EACjEsf,EAAS,IACAK,EAASA,EAAS3f,OAAS,KAAOnD,GAAcuiB,EAAa7f,SAAWqgB,KAAgBR,EAAa/V,WAAa+V,EAAa/V,UAAUU,KAAK,KAAO1N,EAAM,IACpKijB,EAASF,EAAa/V,UAAUU,MAsClC0K,qBAAU,WACR8K,EACEvB,EAAWhe,QAAU,EAjBN,SAAC0G,EAASmZ,GAC3B,IAAMC,EAAkBD,EAAc/I,cAClCiJ,EAAMrZ,EAAQtF,QAAO,SAAS4e,EAAYC,GAC5C,QAAIA,EAAErW,KAAKkN,cAAcnb,SAASmkB,MAG9BG,EAAEtW,QACIsW,EAAEtW,MAAQsW,EAAEtW,MAAMvI,OAAO4e,IAAchgB,MAGlD,IAED,OADAsf,EA/BiB,SAACY,GAClB,IAAMH,EAAM,GAgBZ,OAfgB,SAAVI,EAAWD,EAAKE,GACpB,IAAK,IAAMnmB,KAAOimB,EAAK,CACrB,IAAIxc,EAAQwc,EAAIjmB,GAChB,QAAcmC,IAAVsH,EACF,GAAIA,GAA0B,kBAAVA,EAClByc,EAAQzc,EAAOzJ,QACV,GAAY,OAARA,EACT8lB,EAAIhiB,KAAK2F,QACJ,GAAY,SAARzJ,EACT,QAGL,CACF,CACDkmB,CAAQD,GACDH,CACR,CAaUM,CAAWN,IACbA,CACR,CAI4BO,CAAW,YAAI5Q,GAAWsO,GAActO,EAEpE,GAAE,CAACsO,IAGJvJ,qBAAU,YAEc,IAAjB9K,EAAM3J,QAAgB0P,EAAS1P,OAAS,GAEjC0P,EAAS1P,OAAS,GAAK2J,EAAM3J,SAAW0P,EAAS1P,SAD3Duf,EAAS7P,EAKZ,IAED,IA4BM6Q,EAAU1K,IAAM2K,YAEtB,OACE,mCACE,cAACC,EAAA,EAAD,CACE7M,UAAU,uBACV8M,gBAAiBrkB,EACjBskB,qBAAqB,EACrBC,mBAAmB,EACnBC,gBAAgB,EAChB5F,IAAKsF,EACLO,SAAUzkB,EACV0kB,aAxHe,SAACrG,EAAGsG,GACvB,GAAuB,IAAnBA,EAAQhhB,OAAZ,CAIA,GAAK3D,EAAM2D,SAAWghB,EAAQhhB,QAAY3D,EAAM,KAAO2kB,EAAQ,GAAK,CAGlE,IAFA,IAAIC,EAAQ,YAAO5kB,GACf6kB,EAAO,YAAOF,GACXC,EAAS,KAAOC,EAAQ,IAC7BD,EAAStE,QACTuE,EAAQvE,QAEVqE,EAAUC,CACX,CAED,IAAMxlB,EAAO2U,OAAOV,SAAS7S,GAAYkV,SAASvV,SAAS8G,IAAI0d,EAAQ,IACnEvlB,QAAsBW,IAAdX,EAAKsO,MAAsBtO,EAAKsO,KAAK,KAAO1N,EAAM,IAC5DijB,EAAS7jB,EAAKsO,KAdf,CAgBF,EAsGK2N,SAAU,QAAC0H,QAAD,IAACA,GAAD,UAACA,EAAc/V,iBAAf,aAAC,EAAyB7K,IATtC,SAhCyB,SAAvB2iB,EAAwBC,GAC5B,OAAOA,EAAUviB,KAAI,SAACwiB,GAAkB,IAAD,EACjC1X,OAAQvN,EACRilB,EAAa1X,OAAS0X,EAAa1X,MAAM3J,OAAS,IACpD2J,EAAQwX,EAAqBE,EAAa1X,QAE5C,IAAM2X,EAAU,UAAG3X,SAAH,aAAG,EAAO3J,OACpBuhB,EAAyB,OAAZF,QAAY,IAAZA,KAAc1gB,OAC/B,CAAEge,UAAW6C,IAAS5C,UAAW,WAC/B0C,EAAa,EAAI,CAAE3C,UAAW8C,IAAQ7C,UAAW,UACjD,CAAED,UAAW+C,IAAM9C,UAAW,QAElC,OACE,cAAC,EAAD,CACEnkB,QAAO,OAAE4mB,QAAF,IAAEA,OAAF,EAAEA,EAAcxkB,WACvBkiB,OAAM,OAAEsC,QAAF,IAAEA,OAAF,EAAEA,EAAc7iB,GACtBigB,UAAS,OAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAAczX,KACzB+U,UAAS,OAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAAY5C,UACvBD,UAAW4C,EACX7Z,SAAUkC,EAEViV,UAAS,OAAE2C,QAAF,IAAEA,OAAF,EAAEA,EAAY3C,UACvBC,aAAcA,GAThB,OAOOwC,QAPP,IAOOA,OAPP,EAOOA,EAAc7iB,GAKxB,GACF,CAiBO2iB,CAAqBxX,MAI9B,ECrHcgY,EAxCQ,SAACrM,GACtB,IAAQuI,EAAkCvI,EAAlCuI,OAAQC,EAA0BxI,EAA1BwI,UAAWE,EAAe1I,EAAf0I,WACrBtO,EAAWsB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASxB,QAAnB,IAuBlC,OACE,cAAC+I,EAAA,EAAD,CAAK7E,UAAU,eAAf,SACIiK,GAtBQ,OAARnO,QAAQ,IAARA,OAAA,EAAAA,EAAU1P,QAAS,EAEnB,qCACE,cAAC0Y,EAAA,EAAD,CAAYrO,UAAU,KAAtB,gCACA,cAACoO,EAAA,EAAD,CAAK7E,UAAU,YAAf,SACIlE,EAAS7Q,KAAI,SAACL,EAAI2C,GAAL,OAAe,cAAC,EAAD,CAAyC6c,WAAYA,EAAYnhB,WAAY2B,GAArD,QAAU2C,EAAjD,SAMnB,mCACE,cAACuX,EAAA,EAAD,CAAY9E,UAAU,cAAtB,4CAWF,cAACsK,EAAA,EAAD,CACE,aAAW,SACXhT,QAAS,kBAAM4S,GAAWD,EAAjB,EAFX,SAIE,qBAAKhX,IAAK0X,EAAQlT,IAAI,cAM/B,EChDc,MAA0B,iC,QC+B1BuW,EA1BO,SAACtM,GACrB,OACE,eAACmD,EAAA,EAAD,CAAK9E,QAAQ,OAAOkO,eAAe,gBAAnC,UACE,eAAChX,EAAA,EAAD,CACEC,QAAQ,YACRE,kBAAgB,EAChBC,MAAM,UACNgM,MAAO,CAAE,MAAU,MAAM,SAAa,OACtC/L,QAAS,kBAAMoK,EAAMzE,qBAAoB,EAAhC,EALX,UAOE,qBAAKhK,IAAKib,EAAMzW,IAAI,SACnB6D,OAEH,cAACrE,EAAA,EAAD,CACEC,QAAQ,YACRE,kBAAgB,EAChBC,MAAM,UACNgM,MAAO,CAAE,MAAU,MAAO,SAAa,OACvC/L,QAAS,kBAAMoK,EAAMvE,2BAA0B,EAAtC,EALX,SAOGyB,EAAO5I,KAAKwN,uBAIpB,ECHc2K,IApBC,SAACzM,GACf,MAA4B3E,oBAAS,GAArC,mBAAOkN,EAAP,KAAeC,EAAf,KACA,EAAoCnN,mBAAS,IAA7C,mBAAOqN,EAAP,KAAmBD,EAAnB,KAEA,OACE,eAACtF,EAAA,EAAD,CAAK7E,UAAW,WAAciK,EAAqB,GAAZ,WAAvC,UACE,cAAC,EAAD,CAAeC,UAAWA,EAAWD,OAAQA,EAAQE,cAAeA,EAAeC,WAAYA,IAC/F,cAAC,EAAD,CAAgBF,UAAWA,EAAWD,OAAQA,EAAQG,WAAYA,IAClE,cAAC,EAAD,CACEF,UAAWA,EACXD,OAAQA,EACRjN,iBAAkB0E,EAAM1E,iBACxBC,oBAAqByE,EAAMzE,oBAC3BC,uBAAwBwE,EAAMxE,uBAC9BC,0BAA2BuE,EAAMvE,8BAIxC,C,iECxBc,MAA0B,kCCA1B,MAA0B,2CCA1B,MAA0B,0CCA1B,MAA0B,wCCA1B,MAA0B,2C,2BCYvClE,EAiCEF,IAjCFE,aACAG,EAgCEL,IAhCFK,eACAG,EA+BER,IA/BFQ,iBACAC,EA8BET,IA9BFS,iBACAI,EA6BEb,IA7BFa,OACAV,EA4BEH,IA5BFG,kBACAY,EA2BEf,IA3BFe,WACAX,EA0BEJ,IA1BFI,oBACAG,EAyBEP,IAzBFO,eACAI,EAwBEX,IAxBFW,eACA2B,EAuBEtC,IAvBFsC,YACA1B,EAsBEZ,IAtBFY,gBACAK,EAqBEjB,IArBFiB,kBACAhB,EAoBED,IApBFC,WACAmB,EAmBEpB,IAnBFoB,gBACAV,EAkBEV,IAlBFU,gBACAI,EAiBEd,IAjBFc,OACAI,EAgBElB,IAhBFkB,WACAG,EAeErB,IAfFqB,YACAC,EAcEtB,IAdFsB,kBACAC,EAaEvB,IAbFuB,oBACAC,EAYExB,IAZFwB,kBACAC,EAWEzB,IAXFyB,iBACAC,EAUE1B,IAVF0B,wBACAC,EASE3B,IATF2B,iBACAC,EAQE5B,IARF4B,aACAC,EAOE7B,IAPF6B,gBACAC,EAME9B,IANF8B,kBACAC,EAKE/B,IALF+B,iBACAK,EAIEpC,IAJFoC,kBACAJ,EAGEhC,IAHFgC,YACAqT,EAEErV,IAFFqV,gBACAhT,EACErC,IADFqC,gBAGI0E,EAAQuO,IAAY,CACxBC,WAAY,CACVtV,aACAuV,GAAI,CACFC,WAAY,MACZC,SAAU,SACVC,WAAY,YACZrX,MAAOkC,IAIXoV,UAAW,CACTC,eAAgB,CACdC,KAAM,CACJC,UAAW,UAEbC,GAAI,CACFL,WAAY,GAEdM,UAAW,CACTC,WAAY,SACZC,YAAa,SACb7X,MAAOkD,GAET4U,GAAI,CACFV,SAAU,SACVC,WAAY,UACZU,cAAe,YACfZ,WAAY,MACZnX,MAAOkD,EACP,MAAO,CACLlD,MAAO4B,GAET,MAAO,CACLwV,SAAU,SACVC,WAAY,UACZU,cAAe,YACfZ,WAAY,MACZnX,MAAOkD,KAIb8U,QAAS,CACPR,KAAM,CACJvK,gBAAiBvJ,EACjBuU,aAAc,WACdvP,QAAS,cACTwP,WAAY,SACZhP,OAAQ,WACRuO,UAAW,SACXI,YAAa,UACb,mBAAoB,CAClBM,QAAS,YACTf,SAAU,SACVpX,MAAOkC,KAIbkW,oBAAqB,CACnBpL,aAAc,CACZhN,MAAOyC,IAGX4V,kBAAmB,CACjBb,KAAM,CACJS,aAAc,WAEhBjL,aAAc,CACZC,gBAAiBjK,GAEnBsV,eAAgB,CACdrL,gBAAiBjK,GAEnBkK,gBAAiB,CACfD,gBAAiBrL,EACjBqW,aAAc,UAEhBM,kBAAmB,CACjBtL,gBAAiBnK,EACjBmV,aAAc,WAGlBO,gBAAiB,CACfhB,KAAM,CACJiB,YAAa,aACbC,YAAazV,EACbgV,aAAc,QACd/O,OAAQ,UACRyP,UAAW,UACX1L,gBAAiB,cACjBvE,QAAS,OACTwP,WAAY,SACZtB,eAAgB,SAEhB,sBAAuB,CACrBa,UAAW,QAGb,SAAU,CACR/O,QAAS,QAGX,mCAAoC,CAClCA,QAAS,OACTkQ,cAAe,SACfV,WAAY,SACZtB,eAAgB,SAChB,0BAA2B,CACzBiC,OAAQ,IACR1B,WAAY,MACZC,SAAU,SACVC,WAAY,UACZU,cAAe,UACfe,MAAO,EACPrB,UAAW,WACXzX,MAAOkD,GAET,QAAS,CACPlD,MAAO4B,MAKfmX,iBAAkB,CAChBvB,KAAM,CACJvK,gBAAiBxK,EACjBwV,aAAc,QACd,iBAAkB,CAChBjY,MAAOkD,EACP,qCAAsC,CACpCwV,YAAa,gBAGjB,gBAAiB,CACf,qCAAsC,CACpCD,YAAa,WACbC,YAAa9W,EACboX,UAAU,kBAAD,OAAoB7V,KAGjC,UAAW,CACT,qCAAsC,CACpCuV,YAAa9W,IAIjB,kBAAmB,CACjB,4BAA6B,CAC3B5B,MAAO8C,GAET,qCAAsC,CACpC4V,YAAa5V,GAEf,UAAW,CACT,qCAAsC,CACpC4V,YAAa5V,IAGjB,gBAAiB,CACf,qCAAsC,CACpC2V,YAAa,WACbC,YAAa5V,EACbkW,UAAU,kBAAD,OAAoB5V,OAMrC6V,eAAgB,CACdP,YAAa,eAEfQ,MAAO,CACL9B,SAAU,SACVW,cAAe,UACfI,QAAS,WACT,iBAAkB,CAChBnY,MAAOqD,IAGX8V,aAAc,CACZC,YAAa,SACb,4BAA6B,CAC3B3B,UAAW,iBAGf4B,WAAY,CACVC,aAAc,WAGlBC,UAAW,CACTC,aAAc,CACZvQ,MAAO,QACPgP,aAAc,SACde,UAAU,qBAAD,OAAuB1V,KAGpCmW,QAAS,CACPjC,KAAM,CACJmB,UAAW,WACX,kBAAmB,CACjBe,UAAU,kBAAD,OAAoBnW,GAC7BoW,aAAa,kBAAD,OAAoBpW,GAChC4U,QAAS3V,EAAS,GAGpB,YAAa,CACXwW,UAAU,qBAAD,OAAuB1V,GAChCsW,WAAY7W,EACZoV,QAAS,kBACTF,aAAc,SACdhP,MAAO,WACPP,QAAS,OACTwP,WAAY,SACZW,OAAQ,UAGV,uBAAwB,CACtBnQ,QAAS,qBAIfmR,OAAQ,CACNrC,KAAM,CACJsC,SAAU,sBACVC,cAAe,OACfpB,UAAW,WACX,kBAAmB,CACjBR,QAAS,QACTF,aAAc1V,EACd4U,WAAY,IACZC,SAAU,WACVC,WAAY,WACZU,cAAe,UACf/X,MAAM,GAAD,OAAKkC,EAAL,eACL,uBAAwB,CACtB8X,QAAS,KAGb,YAAa,CACX/Q,MAAO,MACPkP,QAAS,EACTf,SAAU,SACVC,WAAY,UACZY,aAAc,SACd/O,OAAQ,UACR+Q,UAAW,SACXlC,cAAe,UACf/X,MAAO4B,EACP,uBAAwB,CACtBoY,QAAS,GAEX,iBAAkB,CAChBJ,WAAYhY,EACZ5B,MAAOyC,MAKfyX,eAAgB,CACd1C,KAAM,CACJ7V,aACAsL,gBAAiB9K,EACjB+G,OAAQ,WACR+O,aAAa,GAAD,OAAK1V,EAAL,iBACZ+W,aAAa,uBACb,UAAW,CACTrM,gBAAiB9K,GAEnB,qCAAsC,CACpCsV,UAAU,iBAGdyB,MAAO,CACLiB,WAAY,EACZC,cAAe,EACfhD,SAAU,UACVW,cAAe,UACf/X,MAAOqC,EACP,iBAAkB,CAChBrC,MAAOqC,IAGXgX,WAAY,CACV,oBAAqB,CACnBlB,QAAS,YACT2B,SAAU,EACV1C,SAAU,UACVD,WAAY,MACZjO,OAAQ,OACRlJ,MAAOyC,KAIb4X,cAAe,CACb7C,KAAM,CACJW,QAAS,EACTF,aAAc1V,EACd0K,gBAAiB9K,EACjB,UAAW,CACT8K,gBAAiB3K,KAIvBgY,UAAW,CACT9C,KAAM,CACJS,aAAc1V,EACd2G,OAAQ,WACRiP,QAAS,EACT2B,SAAU,YAEZ7f,MAAO,CACL8f,cAAe,OACfrR,QAAS,OACT,QAAS,CACPmP,YAAa,WAGjB0C,iBAAkB,CAChBtN,gBAAiBrL,EACjB,UAAW,CACTqL,gBAAiBpL,GAGnB,iBAAkB,CAChBoL,gBAAiBhK,EACjBjD,MAAOyC,IAGX+X,gBAAiB,CACf9B,YAAa9W,EACb5B,MAAO4B,EACP,UAAW,CACTqL,gBAAiBnL,KAIvB2Y,eAAgB,CACd,UAAW,CACT,yBAA0B,CACxBC,UAAW,cAEb,QAAS,CACPzN,gBAAiBlL,GAEnB,kBAAmB,CACjB2G,QAAS,OACTiS,SAAU,UAEZ,aAAc,CACZA,SAAU,OACV,uBAAwB,CACtB1R,MAAO,UAEP,eAAgB,CACdC,OAAQ,YAGZ,6BAA8B,CAC5B0Q,WAAY5V,EACZiU,aAAc,WAGlB,eAAgB,CACd0C,SAAU,OACVC,eAAgB,OAChB,uBAAwB,CACtBlS,QAAS,SAGb,UAAW,CACT,SAAU,CACRkR,WAAYpW,EACZ2U,QAAS,OACT,oBAAqB,CACnBV,UAAW,WAIf,WAAY,CACVU,QAAS,OACTzP,QAAS,OACTkQ,cAAe,SACfwB,cAAe,OACf,QAAS,CACP7L,OAAQ,UACRqJ,WAAY,OACZ3O,MAAO,OACP4R,aAAc,YAEhB,OAAQ,CACN1D,WAAY,MACZC,SAAU,SACVC,WAAY,YACZ4C,UAAW,SAEXlC,cAAe,UACf/X,MAAOkC,KAIb,WAAY,CACV+G,MAAO,WACP0R,SAAU,SACV1N,gBAAiBlL,EACjBmH,OAAQ,QACR4R,WAAY,EACZ3C,QAAS,eACTzP,QAAS,OACTkQ,cAAe,SACfmC,WAAYpY,EACZ,WAAY,CACVsG,MAAO,WACP8R,WAAYpY,EACZ,aAAc,CACZ,WAAY,CACV,SAAU,CACRkY,aAAc,YACdT,cAAe,YACfT,aAAa,mBAAD,OAAqBxX,KAGrC,SAAU,CACR,OAAQ,CACNuG,QAAS,SAGb,WAAY,CACV,oBAAqB,CACnB,QAAS,CACPmQ,OAAQ,QAKhB,wBAAyB,CACvBV,QAAS,EACTlP,MAAO,UACP6Q,SAAU,YACV1C,SAAU,EACVyB,OAAQ,SACRnQ,QAAS,QACTQ,OAAQ,YAGZ,iBAAkB,CAChB,aAAc,CACZ,WAAY,CACV,wBAAyB,CACvB+D,gBAAiB,eAEnB,yBAA0B,CACxBwK,UAAW,aAGf,WAAY,CACV,wBAAyB,CACvBxO,MAAO,OACPC,OAAQ,OACR+O,aAAc1V,EAAS,GAEzB,yBAA0B,CACxB0G,MAAO,OACP,QAAS,CACP4O,YAAa,iBAMvB,WAAY,CACVnP,QAAS,OACTwP,WAAY,SACZtB,eAAgB,gBAChBwD,cAAe,YACfT,aAAa,mBAAD,OAAqBxX,GACjC6Y,SAAU,OACV,SAAU,CACRzM,OAAQ,UACR0M,SAAU,OACVF,WAAYpY,IAGhB,SAAU,CACRwV,QAAS,oBACTjP,OAAQ,0BACR2P,OAAQ,aACRqC,SAAU,EACVlS,SAAU,WAEV,YAAa,CACXmS,QAAS,KACTnS,SAAU,WACVoS,MAAO,UACPC,OAAQ,QACRpS,MAAO,SACPC,OAAQ,SACR0Q,WAAY7X,EACZuZ,OAAQ,QAGV,gEAAiE,CAC/DrD,aAAc,QACd2B,WAAY,cACZ2B,OAAQ,+BACRzB,SAAU,SAGZ,6EAA8E,CAC5EF,WAAW,yBAAD,OAA2BzX,EAA3B,aAAgDA,EAAhD,cAAsEJ,GAChF2W,YAAa9W,GAGf,qKAAsK,CACpKgY,WAAW,yBAAD,OAA2BzX,EAA3B,aAAgDA,EAAhD,cAAsEJ,GAChF2W,YAAa9W,GAGf,yBAA0B,CACxBoH,SAAU,WACVsS,OAAQ,KAGV,sBAAuB,CACrB,4DAA6D,CAC3DE,gBAAgB,OAAD,OAASC,EAAT,MAEjB,yDAA0D,CACxDD,gBAAgB,OAAD,OAASE,EAAT,MAEjB,2DAA4D,CAC1DF,gBAAgB,OAAD,OAASG,EAAT,MAEjB,aAAc,CACZ,eAAgB,CACd1S,MAAO,UACPC,OAAQ,YACRkO,SAAU,EACVoE,gBAAgB,OAAD,OAASjF,IAAT,OAGnB,UAAW,CACT,eAAgB,CACdtN,MAAO,YACPC,OAAQ,WACRkO,SAAU,EACVoE,gBAAgB,OAAD,OAAS/E,IAAT,OAGnB,YAAa,CACX,eAAgB,CACdvN,OAAQ,UACRD,MAAO,YACPmO,SAAU,EACVoE,gBAAgB,OAAD,OAAShF,IAAT,QAKrB,eAAgB,CACd9N,QAAS,OAETyP,QAAS,uBAEX,eAAgB,CACdN,YAAa,WACbiD,WAAY,GAEd,eAAgB,CACd3D,WAAY,SACZ+D,SAAU,EACV9D,SAAU,YACVC,WAAY,OACZrX,MAAOyC,GAET,uBAAwB,CACtB2W,YAAa,YACbP,OAAQ,GAEV,kBAAmB,CACjB3P,OAAQ,OACR+D,gBAAiB9K,EACjBgW,QAAS,YACTzP,QAAS,OACTwP,WAAY,SACZD,aAAc,SACdd,WAAY,MACZC,SAAU,WACVC,WAAY,UACZyC,SAAU,OACVlD,eAAgB,SAChB5W,MAAOoC,EACP2V,cAAe,UACf,QAAS,CACPH,WAAY,aAGhB,eAAgB,CACd+C,SAAU,OACVzR,OAAQ,qBAEV,OAAQ,CACNiO,WAAY,MACZC,SAAU,UACVC,WAAY,YACZU,cAAe,UACf8C,aAAc,UACd7a,MAAOyC,EACP0V,QAAS,eAEX,sBAAuB,CACrB,sBAAuB,CACrB,uBAAwB,CACtB,8BAA+B,CAC7B,sBAAuB,CACrB,iBAAkB,CAChB,kBAAmB,CACjB,QAAS,CACPyD,UAAW,0BAS3B,OAAQ,CACN5S,SAAU,WACV,YAAa,CACXmS,QAAS,KACTjS,OAAQ,uBACRD,MAAO,YACPD,SAAU,WACV6S,KAAM,YACN5D,aAAc,WACd6D,IAAK,aACLN,gBAAgB,OAAD,OAASO,EAAT,KACfC,iBAAkB,UAEpB,sBAAuB,CACrBhT,SAAU,WACV,YAAa,CACXmS,QAAS,KACTjS,OAAQ,WACRD,MAAO,YACPuS,gBAAgB,OAAD,OAASS,EAAT,KACfjT,SAAU,WACV8S,IAAK,UACLE,iBAAkB,YAClBH,KAAM,aAER,WAAY,CACVV,QAAS,KACTjS,OAAQ,YACR+O,aAAc,WACdhP,MAAO,SACPgE,gBAAiBlJ,EACjBiF,SAAU,WACV6S,KAAM,IACNC,IAAK,YACLpT,QAAS,QAEX,UAAW,CACTkR,WAAY,eAEd,iCAAkC,CAChC3M,gBAAiB,iBAIvB,mCAAoC,CAClC,YAAa,CACXvE,QAAS,QAEX,uBAAwB,CACtB0Q,YAAa,IACb,UAAW,CACTQ,WAAY,eAEd,UAAW,CACT3M,gBAAiB,gBAGrB,+BAAgC,CAC9BvE,QAAS,QAEX,uBAAwB,CACtB,YAAa,CACXA,QAAS,QAEX,WAAY,CACVA,QAAS,QAEX,UAAW,CACTkR,WAAY,eAEd,iCAAkC,CAChC3M,gBAAiB,eAEnB,iBAAkB,CAChB,0BAA2B,CACzB,wBAAyB,CACvB,SAAU,CACR,SAAU,CACR,QAAS,CACP2O,UAAW,wBAOvB,yBAA0B,CACxB,UAAW,CACThC,WAAY,gBAGhB,0BAA2B,CACzB,wBAAyB,CACvB,SAAU,CACR,MAAO,CACLxC,SAAU,UACVC,WAAY,YACZ6E,aAAc,WACdC,WAAY,SACZxB,SAAU,eAQtB,iBAAkB,CAChBvD,SAAU,UACV1O,QAAS,OACTwP,WAAY,SACZtB,eAAgB,SAChB1N,OAAQ,OACRiO,WAAY,MACZY,cAAe,UACf/X,MAAOoC,EACP6X,UAAW,WAGf,WAAY,CACVjB,UAAU,mCAAD,OAAqCjX,GAC9C2X,UAAU,mBAAD,OAAqBvX,GAC9BgY,WAAY,OACZnR,SAAU,WACVsS,OAAQ,IACR,yBAA0B,CACxB3C,UAAW,WACXR,QAAS,EACTlP,MAAO,OACP,qBAAsB,CACpBP,QAAS,SAGb,aAAc,CACZA,QAAS,OACTwP,WAAY,SACZtB,eAAgB,gBAChBa,UAAW,OACX0C,WAAY,OACZjR,OAAQ,YACRwQ,UAAU,mBAAD,OAAqBvX,GAC9B,MAAO,CACLuG,QAAS,OACTwP,WAAY,SACZd,SAAU,UACVW,cAAe,UACf/X,MAAO0B,IAAKe,WACZ0U,WAAY,MACZ,QAAS,CACPU,YAAa,gBAMvB,WAAY,CACV5K,gBAAiBhL,EACjBiZ,SAAU,EACVkB,YAAY,kBAAD,OAAoB7Y,GAC/B4U,QAAS,OACT,qBAAsB,CACpBkE,qBAAsB,EACtBC,wBAAyB,EACzBF,YAAa,SAGjB,gBAAiB,CACf1T,QAAS,OACTwP,WAAY,SACZhP,OAAQ,OACR0N,eAAgB,SAChBqD,UAAW,SACXrB,cAAe,SACf,OAAQ,CACNiC,aAAc,WAGlB,kBAAmB,CACjB,QAAS,CACPjB,WAAYnX,EACZwV,aAAc,QACdvP,QAAS,OACTwP,WAAY,SACZC,QAAS,QACTV,UAAW,QACX,UAAW,CACT,sCAAuC,CACrCxK,gBAAiB8J,GAEnB,MAAO,CACL/W,MAAO4C,GAET,WAAY,CACV5C,MAAO4C,IAGX,UAAW,CACTuV,QAAS,cACT+C,SAAU,IACVxS,QAAS,OACTkO,eAAgB,gBAChBoE,SAAU,OAEV,4BAA6B,CAC3B/R,MAAO,OACPwO,UAAW,YAGb,MAAO,CACLN,WAAY,MACZC,SAAU,SACVC,WAAY,UACZU,cAAe,UACf/X,MAAOyD,EACPyY,aAAc,WACdC,WAAY,SACZxB,SAAU,SACVM,SAAU,WAEZ,SAAU,CACR9D,WAAY,MACZC,SAAU,SACVC,WAAY,UACZU,cAAe,UACf/X,MAAOkD,GAET,WAAY,CACViU,WAAY,MACZC,SAAU,SACVC,WAAY,UACZU,cAAe,UACf/X,MAAO8C,IAGX,QAAS,CACPgY,WAAY,MAGhB,OAAQ,CACN3D,WAAY,MACZC,SAAU,SACVC,WAAY,UACZU,cAAe,UACf8C,aAAc,OACd7a,MAAOkD,IAIX,qBAAsB,CACpB+F,MAAO,OACP0P,UAAY,OACZjQ,QAAS,OACToS,WAAY,EACZlC,cAAe,SACf3L,gBAAiBxK,EACjBuG,SAAU,WACV+R,WAAY,sBAEZ,aAAc,CACZlD,YAAa,YACbkD,WAAY,uBAEd,eAAgB,CACd5C,QAAS,OACTnP,SAAU,SACV8S,IAAK,EACLR,OAAQ,IACR1B,WAAYnX,EACZ,uBAAwB,CACtB4U,WAAY,MACZ,MAAO,CACLrX,MAAOqD,EACPkL,OAAQ,UACR8I,WAAY,WAGhB,8BAA+B,CAC7BwB,OAAQ,YAGZ,SAAU,CACRqC,SAAU,EACVqB,UAAW,sBACXrT,OAAQ,OACRyR,SAAU,OACVP,cAAe,QAEjB,WAAY,CACV1R,QAAS,OACTQ,OAAQ,OACRgP,WAAY,SACZtB,eAAgB,SAChB5N,SAAU,QACVoS,MAAO,IACPC,OAAQ,IACRpS,MAAO,WACP2Q,WAAW,sDAAD,OAAwDnX,EAAxD,UACV,QAAS,CACP8L,OAAQ,YAIZ,OAAQ,CACN,8BAA+B,CAC7B7F,QAAS,SAGb,YAAa,CACXyS,QAAS,KACTvB,WAAYnX,EACZwG,MAAO,WACP6S,IAAK,EACLD,KAAM,YACN3S,OAAQ,WACRF,SAAU,WACVsS,QAAS,GAEX,WAAY,CACVH,QAAS,KACTvB,WAAYnX,EACZwG,MAAO,WACP4S,KAAM,YACNR,OAAQ,EACRnS,OAAQ,WACRF,SAAU,WACVsS,QAAS,GAEX,WAAY,CACVrB,UAAW,SAEX9B,QAAS,cACTwB,aAAa,kBAAD,OAAoBpW,GAChC,UAAW,CACTmF,QAAS,OACTwP,WAAY,SACZtB,eAAgB,gBAEhB,QAAS,CACPiC,OAAQ,IACRtK,OAAQ,YAGZ,QAAS,CACP7F,QAAS,QACTmQ,OAAQ,UAEV,OAAQ,CACN1B,WAAY,MACZC,SAAU,SACVC,WAAY,YACZwD,aAAc,SACdpD,UAAW,UAEb,QAAS,CACPN,WAAY,MACZC,SAAU,SACVC,WAAY,UACZU,cAAe,UACf/X,MAAOqD,IAIX,iBAAkB,CAChB8U,QAAS,YACT,kBAAmB,CACjBuB,UAAU,kBAAD,OAAoBnW,IAE/B,OAAQ,CACN6T,SAAU,WACVD,WAAY,MACZE,WAAY,WACZU,cAAe,UACf/X,MAAOkC,EACP2Y,aAAc,UAEhB,qBAAsB,CACpB,mBAAoB,CAClBF,SAAU,OACV9C,YAAa,SAEf,OAAQ,CACNnP,QAAS,cACT0O,SAAU,SACVC,WAAY,OACZrX,MAAO4B,EAEP,qBAAsB,CACpBiW,YAAa,UAGf,QAAS,CACPA,YAAa,WAGjB,sBAAuB,CACrBJ,UAAW,QAEb,UAAW,CACTN,WAAY,MACZzO,QAAS,QACT0O,SAAU,SACVC,WAAY,UACZU,cAAe,UACf/X,MAAO8D,EACP,OAAQ,CACN2T,UAAW,WAGf,OAAQ,CACNL,SAAU,SACVC,WAAY,OACZrX,MAAOkC,EACPsa,SAAU,cAGZ,kBAAmB,CACjBrE,QAAS,IACT,0BAA2B,CACzBU,OAAQ,IACR,2BAA4B,CAC1BpB,UAAW,SAEb,SAAU,CACR/O,QAAS,OACT,UAAW,CACTO,MAAO,SACPqQ,aAAc,QACd,OAAQ,CACNlC,SAAU,SACVC,WAAY,OACZI,UAAW,IACXzX,MAAOkC,UASvB,gBAAiB,CACfwG,QAAS,OACT+O,UAAW,SACXkD,SAAU,OACV,QAAS,CACPjS,QAAS,QACToS,WAAY,EACZlB,WAAY3X,EACZgW,aAAc,QACdE,QAAS,6BACT,qBAAsB,CACpBN,YAAa,SAEf,QAAS,CACPiD,WAAY,EACZjD,YAAa,UAEf,UAAW,CACTsE,WAAY,SACZ,WAAY,CACVzT,QAAS,QACT2O,WAAY,UACZD,SAAU,SACVpX,MAAOkC,GAET,SAAU,CACRwG,QAAS,QACT2O,WAAY,UACZD,SAAU,SACVpX,MAAOqD,MAKf,cAAe,CACb6F,OAAQ,QAEV,uBAAwB,CACtBD,MAAO,SACPD,SAAU,WACVqS,OAAQ,IACRC,OAAQ,YAOH7S,K,6YCvnCTgU,EAAa,IAIbC,EAAe,CACnBvoB,KAAM,UACNwoB,UAAY,SACZC,UAAW,UACXC,cAAe,UACfC,UAAW,QACXC,UAAW,WAEPC,EAAW,CACf/iB,MAAQ,WACRgjB,OAAS,KACTC,cAAgB,SAAC9V,GACf,OAAOA,EAAMvQ,gBACd,GAEGsmB,EAAa,CACjBljB,MAAQ,SACRgjB,OAAS,OACTC,cAAgB,SAAC9V,GACf,OAAOA,EAAMxQ,aACd,GAGGwmB,EAAY,SAACC,EAAKC,EAAGC,EAAGtU,EAAOC,EAAQ3G,EAAQvC,EAAOwd,GACtDvU,EAAQ,EAAI1G,IAAQA,EAAS0G,EAAQ,GACrCC,EAAS,EAAI3G,IAAQA,EAAS2G,EAAS,GAC3CmU,EAAII,YAAcD,GAAS,EAC3BH,EAAIK,UAAY1d,EAChBqd,EAAIM,YACJN,EAAIO,OAAON,EAAI/a,EAAQgb,GACvBF,EAAIQ,MAAMP,EAAIrU,EAAOsU,EAAGD,EAAIrU,EAAOsU,EAAIrU,EAAQ3G,GAC/C8a,EAAIQ,MAAMP,EAAIrU,EAAOsU,EAAIrU,EAAQoU,EAAGC,EAAIrU,EAAQ3G,GAChD8a,EAAIQ,MAAMP,EAAGC,EAAIrU,EAAQoU,EAAGC,EAAGhb,GAC/B8a,EAAIQ,MAAMP,EAAGC,EAAGD,EAAIrU,EAAOsU,EAAGhb,GAC9B8a,EAAIS,YACJT,EAAIU,MACL,EAiVcC,EA/UK,SAAC3T,GACnB,IAAM7E,EAAWC,cACXwY,EAAWrT,IAAM2E,OAAO,MAC9B,EAAkC7J,mBAAS,MAA3C,mBAAOwY,EAAP,KAAkBC,EAAlB,KACA,EAAwCzY,mBAAS,MAAjD,mBAAO0Y,EAAP,KAAqBC,EAArB,KACA,EAA4C3Y,mBAAS,IAAI4Y,KAAzD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA4C9Y,mBAAS,IAAI4Y,KAAzD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA4C9T,IAAMlF,SAASsX,GAA3D,mBAAO2B,EAAP,KAAuBC,EAAvB,KACA,EAA4ChU,IAAMlF,SAAS,MAA3D,mBAAOmZ,EAAP,KAAuBC,EAAvB,KACA,EAA4CpZ,mBAAS,CAAE4X,EAAI,EAAIC,EAAI,IAAnE,mBAAOwB,EAAP,KAAuBC,GAAvB,KACMpW,GAAOqW,QAAQJ,GACrB,GAA8BjU,IAAMlF,UAAS,GAA7C,qBAAOgB,GAAP,MAAgBC,GAAhB,MAEMwN,GAAepO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASmO,kBAAkBhc,UAArC,IAChC6kB,GAASlX,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASgX,MAAnB,IAM1BiC,GAAoB,WACxBJ,EAAkB,KACnB,EAEKK,GAAqB,SAAC5qB,GAC1B2qB,KACAN,EAAkBrqB,EACnB,EAyBK6qB,GAAuB,SAAC5uB,EAAMsZ,GAAW,IAAD,QACpC,OAARmU,QAAQ,IAARA,GAAA,UAAAA,EAAU9I,eAAV,mBAAmBkK,WAAnB,SAAwBlK,QAAQmK,SAAS9uB,EAAK8sB,EAAG9sB,EAAK+sB,EAAGd,GACjD,OAARwB,QAAQ,IAARA,GAAA,UAAAA,EAAU9I,eAAV,mBAAmBkK,WAAnB,SAAwBlK,QAAQoK,KAAK,EAAG9C,GACxCuC,GAAkB,CAAE1B,EAAK9sB,EAAK8sB,EAAIC,EAAK/sB,EAAK+sB,GAC7C,EAkCKiC,GAAc,WAAO,IAAD,QAChB,OAARvB,QAAQ,IAARA,GAAA,UAAAA,EAAU9I,eAAV,mBAAmBkK,WAAnB,SAAwBlK,QAAQsK,YAChC,IAAIC,EAAM,OAAIzB,QAAJ,IAAIA,GAAJ,UAAIA,EAAU9I,eAAd,iBAAI,EAAmBkK,WAAvB,aAAI,EAAwBlK,QAAQmK,WAC9CN,GAAkB,CAAE1B,EAAKoC,EAAOpC,EAAIC,EAAKmC,EAAOnC,GACjD,EAOD/T,qBAAU,WACR7C,IAAW,GACXgZ,YAAa,kBAAMhZ,IAAW,EAAjB,GAhJI,IAiJlB,GAAE,IAEH6C,qBAAU,WACR,GAAI2K,KAA4B,OAAZA,SAAY,IAAZA,QAAA,EAAAA,GAAc5gB,OAAd,OAAqB6qB,QAArB,IAAqBA,OAArB,EAAqBA,EAAc7qB,IAAI,CAAC,IAAD,MACrD/C,EAAI,OAAGytB,QAAH,IAAGA,GAAH,UAAGA,EAAU9I,eAAb,iBAAG,EAAmB9K,aAAtB,iBAAG,EAA0BrT,YAA7B,aAAG,EAAgC5F,MAAMgD,MAAM,SAAAd,GAAI,eAAIA,EAAKC,KAAO4gB,GAAa5gB,KAAM,UAAAD,EAAKoC,cAAL,eAAanC,OAAb,UAAoB4gB,GAAaze,cAAjC,aAAoB,EAAqBnC,GAA5E,IACvD/C,IACF4uB,GAAqB5uB,GACrB6tB,EAAgB7tB,GAChB2tB,EAAa3tB,GAEhB,CACF,GAAE,CAAC2jB,KAGJ3K,qBAAU,WAAO,IAAD,YAEN,OAARyU,QAAQ,IAARA,GAAA,UAAAA,EAAU9I,eAAV,mBAAmBkK,WAAnB,SAAwBlK,QAAQmK,SAASP,EAAezB,EAAGyB,EAAexB,GAClE,OAARU,QAAQ,IAARA,GAAA,UAAAA,EAAU9I,eAAV,mBAAmBkK,WAAnB,SAAwBlK,QAAQyK,QAAQ,UAAWC,eAAgB,IAC3D,OAAR5B,QAAQ,IAARA,GAAA,UAAAA,EAAU9I,eAAV,mBAAmBkK,WAAnB,SAAwBlK,QAAQyK,QAAQ,WAAYC,kBAAmBC,UAAU,KAClF,GAAC,CAAC7C,KAEH,IA+BM8C,GAAYnV,IAAMoV,aACtB,SAACxvB,EAAM6sB,GACL,IAAM3f,EAAO,GACPuiB,EAAgB,CAACviB,GAAYA,IAC7BwiB,EAAsB,CAACxiB,GAAUA,IACjCyiB,EAAoB,CAAC3vB,EAAK8sB,EAAI,GAAI9sB,EAAK+sB,EAAI,IAC3C6C,EAAoB,CACxBD,EAAkB,GAClBA,EAAkB,GAAKD,EAAoB,GAAK,GAGlD7C,EAAIM,YAEJ,IACEN,EAAIgD,UAAJ,MAAAhD,EAAG,QACD7sB,QADC,IACDA,OADC,EACDA,EAAMmL,IACNnL,EAAK8sB,EAAI5f,EAAO,EAChBlN,EAAK+sB,EAAI7f,GAHR,OAIEuiB,GAcN,CAZC,MAAO1nB,GACP,IAAMoD,EAAM,IAAI2E,MAChB3E,EAAIC,IAAM1M,IAAS0K,QAAQ4G,MAC3BhQ,EAAKmL,IAAMA,EAGX0hB,EAAIgD,UAAJ,MAAAhD,EAAG,QACD7sB,QADC,IACDA,OADC,EACDA,EAAMmL,IACNnL,EAAK8sB,EAAI5f,EAAO,EAChBlN,EAAK+sB,EAAI7f,GAHR,OAIEuiB,GAEN,CAED5C,EAAIiD,KAzOQ,4BA0OZjD,EAAIpD,UAAY,SAChBoD,EAAIkD,aAAe,SACnB,IAAIC,EAAWhwB,EAAKgI,KACpB,GAAIgoB,EAASzrB,OAAS,GACpByrB,EAAWA,EAASC,OAAO,EAAG,IAAI3mB,OAAO,YACpC,GAAK3G,MAAMC,QAAQotB,GAAW,CAAC,IAAD,EACnCA,EAAQ,UAAGA,EAAS,UAAZ,aAAG,EAAaC,OAAO,EAAG,IAAI3mB,OAAO,MAC9C,CACD,IAAM4mB,EAAY,CAACF,EAAUhwB,EAAK8sB,EAAI,EAAG8C,EAAkB,GAAK,KAC5D5vB,IAAS0tB,IAAiB,OAAJ1tB,QAAI,IAAJA,OAAA,EAAAA,EAAM+C,OAAN,OAAa6qB,QAAb,IAAaA,OAAb,EAAaA,EAAc7qB,MAAU,OAAJ/C,QAAI,IAAJA,OAAA,EAAAA,EAAM+C,OAAN,OAAa4gB,SAAb,IAAaA,QAAb,EAAaA,GAAc5gB,KAEpF6pB,EAAS,WAAT,GACEC,GADF,OAEK8C,EACAD,EAHL,CApC4B,EAyC1BxD,EAAaiE,SACb,MAGFvD,EAAS,WAAT,GACEC,GADF,OAEK+C,EAFL,CAGEF,EAAoB,GACpBA,EAAoB,GAAK,EAjDC,EAmD1BxD,EAAaG,iBAGfQ,EAAIK,UAAYhB,EAAaI,WAE7BO,EAAIK,UAAYhB,EAAaK,UAE/BM,EAAIuD,SAAJ,MAAAvD,EAAgBqD,EACjB,GACD,CAACxC,IAGChB,GAAgByB,EAAezB,cAAc/X,OAAOV,SAAS4F,EAAM7C,UAAUJ,OACjF,OACE,qBAAKuB,UAAW,aAAhB,SACIjC,GACF,cAACkL,EAAA,EAAD,CAAkB5F,MAAO,CACvBhD,SAAU,WACV6S,KAAM,EACNT,MAAO,EACPC,OAAQ,EACRS,IAAK,EACLjD,OAAQ,OACR7Y,MAAO,UACPtC,KAAM,WAGR,cAAC,IAAD,CACEsS,IAAKiO,EAELjnB,KAAMmO,OAAOV,SAAS4F,EAAM7C,UAAUJ,MAEtCyZ,IAAI,EACJC,YAAa,IACbC,cAAe,GACfC,aA5Je,WACnBxB,KACA7Y,IAAW,EACZ,EA2JKsa,UAxNkB,SAAA9sB,GACtB,IAAI8sB,EAAYvE,EAAavoB,KAK7B,OAJKsqB,EAAeyC,IAAI/sB,KACtB8sB,EAAY1C,EAAe2C,IAAI/sB,EAAKG,SAAWiqB,EAAe2C,IAAI/sB,EAAKI,QAAUmoB,EAAaC,UAAYD,EAAavoB,MAGlH8sB,CACR,EAkNKE,UAAW,EACXC,qBAAsC,GAAjBlE,GACrBmE,yBAA0B,EAC1BC,cAAe,SAAAntB,GACb,IAAIotB,EAAQ,EAeZ,OAbK5C,EAAe1B,SAAWE,EAAWF,SACnC9oB,EAAKG,OAAOktB,GAAKrtB,EAAKI,OAAOitB,GAChCD,IAAiB,EAGjBA,EADQptB,EAAKG,OAAOktB,KAAOrtB,EAAKI,OAAOitB,GAC/B,EACErtB,EAAKG,OAAOktB,IAAMrtB,EAAKI,OAAOitB,IAC/B,IAED,KAILD,CACR,EACDE,6BAA8B,SAAAttB,GAAI,OAAIsqB,EAAeyC,IAAI/sB,GAAQ,EAAI,CAAnC,EAClCutB,qBAAsB,UACtBC,YA3IkB,SAAAxtB,GAEtBoqB,EAAeqD,QACfnD,EAAemD,QAGXztB,IAEFsqB,EAAeoD,IAAI1tB,GACnBoqB,EAAesD,IAAI1tB,EAAKG,QACxBiqB,EAAesD,IAAI1tB,EAAKI,SAG1BmqB,EAAkBD,GAClBD,EAAkBD,EACnB,EA8HKuD,iBAAkB/B,GAClBgC,qBAAsB,SAAAvxB,GAAI,MAAI,SAAJ,EAC1BwxB,QAAY,SAAAxxB,GACLmuB,EAAe1B,SAAWE,EAAWF,SACxCzsB,EAAKgxB,GAAKhxB,EAAKmG,KACfnG,EAAKyxB,GAAK,IAAMzxB,EAAKqD,MAExB,EACDquB,YAnKkB,SAAC1xB,GAGZ,IAAD,KAFV+tB,EAAeqD,QACfnD,EAAemD,QACXpxB,KACF+tB,EAAesD,IAAIrxB,GACnB,UAAAA,EAAKuD,iBAAL,SAAgBb,SAAQ,SAAAkD,GAAQ,OAAImoB,EAAesD,IAAIzrB,EAAvB,IAChC,UAAA5F,EAAKkE,aAAL,SAAYxB,SAAQ,SAAAiB,GAAI,OAAIsqB,EAAeoD,IAAI1tB,EAAvB,KAG1BgqB,EAAa3tB,GACbkuB,EAAkBD,GAClBD,EAAkBD,EACnB,EAyJK4D,YAAa,SAAC3xB,EAAMsZ,GAAP,OArQS,SAACtZ,EAAMsZ,GAAW,IAAD,EAC3CtE,EAASd,YAAe,CACtB9S,WAAYyY,EAAM7C,SAClBpP,WAAY5H,EAAK+C,GACjB6K,UAAS,OAAE5N,QAAF,IAAEA,GAAF,UAAEA,EAAMoI,sBAAR,aAAE,EAAsBrF,GACjCe,OAAQqgB,MAEX,CA8PmCyN,CAAoB5xB,EAArC,EACb6xB,iBAAkB,SAAC7xB,EAAMsZ,GAAP,OAAiBsV,GAAqB5uB,EAAtC,EAElB8xB,QAAS3D,EAAe1B,OAExBsF,WAAY,SAACC,GAAkB,EAE/BC,gBAAgB,EAEhBC,0BAA0B,EAC1BC,0BAA0B,EAE1BC,SACE,sBAAKja,UAAU,sBAAf,UACE,cAACsK,EAAA,EAAD,CAAY,gBAAc,cAAc,gBAAc,OAAOhT,QAhS7C,SAAC6J,GACzBgV,EAAkBhV,EAAM+Y,cACzB,EA8RS,SACE,cAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CACEvvB,GAAG,cACHwvB,SAAUlE,EACVmE,aAAW,EACXpa,KAAMA,GACN8B,QAASwU,GALX,UAOE,cAAC+D,EAAA,EAAD,CAAUxW,SAAU0Q,EAAWF,SAAW0B,EAAe1B,OAAQhd,QAAS,kBAAMkf,GAAmBhC,EAAzB,EAA1E,SAAiHA,EAAWljB,QAC5H,cAACgpB,EAAA,EAAD,CAAUxW,SAAUuQ,EAASC,SAAW0B,EAAe1B,OAAQhd,QAAS,kBAAMkf,GAAmBnC,EAAzB,EAAxE,SAA6GA,EAAS/iB,WAExH,cAACgZ,EAAA,EAAD,CAAYhT,QAAS,SAACwP,GAAD,OA9PhB,SAAC3F,GACd,IAAIyV,EAAOtB,EAAS9I,QAAQkK,IAAIlK,QAAQoK,OACpC9mB,EAzGa,EA0Gb8mB,EAAO,IACT9mB,EA1GmB,IA4GrBwlB,EAAS9I,QAAQkK,IAAIlK,QAAQoK,KAAKA,EAAO9mB,EAAOgkB,IACjD,CAuPqCyG,EAAP,EAArB,SACE,cAAC,IAAD,MAEF,cAACjQ,EAAA,EAAD,CAAYhT,QAAS,SAACwP,GAAD,OAnPf,SAAC3F,GACf,IAAIyV,EAAOtB,EAAS9I,QAAQkK,IAAIlK,QAAQoK,OACpC9mB,EAvHa,EAwHb8mB,EAAO,IACT9mB,EAxHmB,IA0HrBwlB,EAAS9I,QAAQkK,IAAIlK,QAAQoK,KAAKA,EAAO9mB,EAAOgkB,IACjD,CA4OqC0G,EAAP,EAArB,SACE,cAAC,IAAD,MAEF,cAAClQ,EAAA,EAAD,CAAYhT,QAAS,SAACwP,GAAD,OAAO+P,IAAP,EAArB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,UAOX,E,gBCzYc,MAA0B,mCCY1B4D,EARI,WACjB,OACE,cAAC5V,EAAA,EAAD,CAAK7E,UAAU,2BAAf,SACE,qBAAK/M,IAAKynB,EAAQjjB,IAAI,YAG3B,E,QCVc,MAA0B,iC,QC8B1BkjB,EAzBM,SAACjZ,GAClB,IAAQ7Z,EAAS6Z,EAAT7Z,KACF+yB,EAAe,CACjBvjB,MAAO0B,IAAI,SAGX8hB,OAAQryB,EASZ,OAPIqyB,EADAhzB,EAAK4H,WACG5H,EAAK4H,WAAWI,KACjBhI,EAAK4N,UACJ5N,EAAK4N,UAAUO,KAEf,eAIR,eAAC6O,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UACI,qBAAK/M,IAAK6nB,EAAMrjB,IAAI,gBACpB,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAK4M,MAAOuX,EAAlC,SACKC,MAIhB,EC5Bc,MAA0B,kCC8B1BE,EAzBI,SAACrZ,GAChB,IAAQ7Z,EAAS6Z,EAAT7Z,KACF+yB,EAAe,CACjBvjB,MAAO0B,IAAI,OAGX8hB,OAAQryB,EASZ,OAPIqyB,EADAhzB,EAAK4N,WAAa5N,EAAK4H,YAEhB5H,EAAK4N,UADJ5N,EAAK4N,UAAUO,KAIfnO,EAAK4H,WAAWI,KAIxB,eAACgV,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UACI,qBAAK/M,IAAK6a,EAAMrW,IAAI,SACpB,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAK4M,MAAOuX,EAAlC,SACKC,MAIhB,EC5Bc,MAA0B,iCC+B1BF,EA1BM,SAACjZ,GAClB,IAAQ7Z,EAAS6Z,EAAT7Z,KACF+yB,EAAe,CACjBvjB,MAAO0B,IAAI,QACXqY,cAAe,cAGfyJ,OAAQryB,EASZ,OAPIqyB,EADAhzB,EAAK4N,WAAa5N,EAAK4H,YAEhB5H,EAAK4N,UADJ5N,EAAK4N,UAAUO,KAIfnO,EAAK4H,WAAWI,KAIxB,eAACgV,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UACI,qBAAK/M,IAAK+nB,EAAQvjB,IAAI,gBACtB,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAK4M,MAAOuX,EAAlC,SACKC,MAIhB,EC7Bc,MAA0B,oCC8B1BI,EAzBO,SAACvZ,GACnB,IAAQ7Z,EAAS6Z,EAAT7Z,KACF+yB,EAAe,CACjBvjB,MAAO0B,IAAI,SAGX8hB,OAAQryB,EASZ,OAPIqyB,EADAhzB,EAAK4N,WAAa5N,EAAK4H,YAEhB5H,EAAK4N,UADJ5N,EAAK4N,UAAUO,KAIfnO,EAAK4H,WAAWI,KAIxB,eAACgV,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UACI,qBAAK/M,IAAK2a,EAASnW,IAAI,YACvB,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAK4M,MAAOuX,EAAlC,SACKC,MAIhB,EC5Bc,MAA0B,mCC8B1BK,GAzBQ,SAACxZ,GACpB,IAAQ7Z,EAAS6Z,EAAT7Z,KACF+yB,EAAe,CACjBvjB,MAAO0B,IAAI,QAGX8hB,OAAQryB,EASZ,OAPIqyB,EADAhzB,EAAK4N,WAAa5N,EAAK4H,YAEhB5H,EAAK4N,UADJ5N,EAAK4N,UAAUO,KAIfnO,EAAK4H,WAAWI,KAIxB,eAACgV,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UACI,qBAAK/M,IAAKkoB,EAAQ1jB,IAAI,WACtB,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAK4M,MAAOuX,EAAlC,SACKC,MAIhB,ECEcO,GAzBU,SAAC1Z,GACtB,IAAQ7Z,EAAS6Z,EAAT7Z,KACF+yB,EAAe,CACjBvjB,MAAO0B,IAAI,QAGX8hB,OAAQryB,EASZ,OAPIqyB,EADAhzB,EAAK4N,WAAa5N,EAAK4H,YAEhB5H,EAAK4N,UADJ5N,EAAK4N,UAAUO,KAIfnO,EAAK4H,WAAWI,KAIxB,eAACgV,EAAA,EAAD,CAAK7E,UAAU,2BAAf,UACI,qBAAK/M,IAAKkoB,EAAQ1jB,IAAI,WACtB,cAACqN,EAAA,EAAD,CAAYrO,UAAU,KAAK4M,MAAOuX,EAAlC,SACKC,MAIhB,ECVcQ,GAZU,SAAC,GAA6B,IAA5B/pB,EAA2B,EAA3BA,MAAOxB,EAAoB,EAApBA,MAAOwrB,EAAa,EAAbA,QACvC,OACE,qCACIA,EAAU,cAACxW,EAAA,EAAD,CAAYrO,UAAU,KAAtB,SAA4B6kB,IAAwB,KAChE,eAACzW,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACE,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,SAA+BnF,IAC/B,cAACwT,EAAA,EAAD,UAAahV,SAIpB,ECmBcyrB,GA5BQ,SAAC7Z,GACpB,IAKsB,IALd7Z,EAAS6Z,EAAT7Z,KAEJgzB,EAAQ,GACRW,EAAY,GAEhB,UAAI3zB,QAAJ,IAAIA,KAAM4H,WACNorB,EAAK,UAAGhzB,EAAK4H,kBAAR,aAAG,EAAiBI,KACzB2rB,GAAY,UAAA3zB,EAAK4H,kBAAL,eAAiB7E,IAAK6wB,SAE/B,UAAI5zB,QAAJ,IAAIA,KAAM4N,UAAW,CAAC,IAAD,IACxBolB,EAAK,UAAGhzB,EAAK4N,iBAAR,aAAG,EAAgB3N,SACxB0zB,GAAY,UAAA3zB,EAAK4N,iBAAL,eAAgB7K,IAAK6wB,GAEpC,KAAM,CAAC,IAAD,EACHZ,EAAQ,eACRW,GAAY,UAAA3zB,EAAK4H,kBAAL,eAAiB7E,IAAK6wB,GACrC,CAED,OACI,cAAC5W,EAAA,EAAD,CAAK7E,UAAU,yBAAyBpV,GAAI4wB,EAA5C,SACI,cAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,SACI,cAAC,GAAD,CAAkB1O,MAAO,OAAQxB,MAAO+qB,EAAMa,WAAYJ,QAAS,eAIlF,E,8BCjCc,OAA0B,iCCc1BK,GARK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMf,EAAW,EAAXA,MAC1B,OACE,eAACgB,GAAA,EAAD,CAAMD,KAAMA,EAAMhwB,OAAO,SAAzB,UACE,qBAAKqH,IAAK6oB,GAAUrkB,IAAKojB,IACxBA,IAGN,E,UCGckB,GAVI,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACnB,OACE,cAACnX,EAAA,EAAD,CAAK7E,UAAU,4BAAf,gBACIgc,QADJ,IACIA,OADJ,EACIA,EAAO/wB,KAAI,SAACN,EAAM4C,GAAP,YAAiC/E,KAAX,OAAJmC,QAAI,IAAJA,OAAA,EAAAA,EAAMa,MAChC,cAACywB,GAAA,EAAD,CAAsC3qB,MAAK,OAAE3G,QAAF,IAAEA,OAAF,EAAEA,EAAMmF,OAAnD,iBAAcnF,QAAd,IAAcA,OAAd,EAAcA,EAAMmF,MAApB,YAA6BvC,IAC7B,cAAC0uB,GAAA,EAAD,CAAsC3qB,MAAK,OAAE3G,QAAF,IAAEA,OAAF,EAAEA,EAAMmF,MAAOwH,QAAS,kBAAMkF,OAAOyD,KAAKtV,EAAKa,KAAM,SAA7B,GAAnE,iBAAcb,QAAd,IAAcA,OAAd,EAAcA,EAAMmF,MAApB,YAA6BvC,GAFrB,KAMlB,EC6Fc2uB,GAhGK,SAACxa,GAAW,IAAD,sCACnB7Z,EAAS6Z,EAAT7Z,KAEJgzB,EAAQ,GACRW,EAAY,GAEhB,GAAQ,OAAJ3zB,QAAI,IAAJA,KAAM4N,WAAN,OAAmB5N,QAAnB,IAAmBA,KAAM4H,WACzBorB,EAAQhzB,EAAK4N,UAAU3N,SACvB0zB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,SAE7B,GAAI5zB,EAAK4H,WAAY,CAAC,IAAD,EACxB+rB,EAAY3zB,EAAK4H,WAAW7E,GAAK6wB,IACjCZ,EAAK,UAAGhzB,EAAK4H,WAAW7C,kBAAnB,aAAG,EAA4B0E,MAAM,EAE7C,MACGupB,EAAQhzB,EAAK4N,UAAU3N,SACvB0zB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,IAGpC,IACsD,EADlDU,EAAe,oBACwB3zB,KAAnC,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAM4N,iBAAN,eAAiBN,qBACjBgnB,EAAe,IAAIC,KAAJ,OAASv0B,QAAT,IAASA,GAAT,UAASA,EAAM4N,iBAAf,aAAS,EAAiBN,kBAAkB7F,MAAM,KAAK,KAG1E,IAAM+sB,EAAe,CACjB,CACIxB,MAAO,OACP/qB,MAAK,OAAEjI,QAAF,IAAEA,GAAF,UAAEA,EAAM4N,iBAAR,aAAE,EAAiBzI,MAE5B,CACI6tB,MAAO,WACP/qB,MAAK,OAAEjI,QAAF,IAAEA,GAAF,UAAEA,EAAM4N,iBAAR,aAAE,EAAiBR,UAE5B,CACI4lB,MAAO,aACP/qB,MAAK,OAAEjI,QAAF,IAAEA,GAAF,UAAEA,EAAM4N,iBAAR,aAAE,EAAiBT,aAIhC,OACI,cAAC6P,EAAA,EAAD,CAAK7E,UAAU,yBAAyBpV,GAAI4wB,EAA5C,SACI,eAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACM,UAAAnY,EAAK4H,WAAW7C,kBAAhB,SAA4B0vB,aAA8D,MAA/C,UAAAz0B,EAAK4H,WAAW7C,kBAAhB,eAA4B0vB,YAAY,IAC9E,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,KAAtB,SAA4B,iBAC5B,cAACqO,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAA+BX,KAAI,UAAE/zB,EAAK4H,kBAAP,iBAAE,EAAiB7C,kBAAnB,aAAE,EAA6B0vB,YAAY,GAAIzB,MAAOA,GAAzF,sBAEL,cAAC,GAAD,CAAkBvpB,MAAO,QAASxB,MAAO+qB,EAAOS,QAAS,iBAEhE,cAAC,GAAD,CAAkBhqB,MAAO,aAAcxB,MAAOqsB,EAAaT,aAE3D,eAAC7W,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC+lB,GAAD,CAAkBR,MAAK,OAAEn0B,QAAF,IAAEA,GAAF,UAAEA,EAAM4H,kBAAR,iBAAE,EAAkB7C,kBAApB,aAAE,EAA8ByE,kBAE1B7I,KAA3B,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAM4N,iBAAN,eAAiBgnB,WACZ,cAAC5X,EAAA,EAAD,CAAK7E,UAAU,kBAAf,SACK,cAACuc,GAAD,CAAOX,KAAI,OAAE/zB,QAAF,IAAEA,GAAF,UAAEA,EAAM4N,iBAAR,aAAE,EAAiBgnB,UAAW5B,MAAM,gBAEpD,8CAG0BryB,KAA3B,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAM4N,iBAAN,eAAiBinB,WACZ,qCACK,cAAC,GAAD,CAAkBprB,MAAO,WAAYxB,MAAK,OAAEjI,QAAF,IAAEA,GAAF,UAAEA,EAAM4N,iBAAR,aAAE,EAAiBinB,UAAU,GAAGC,MAC1E,cAAC,GAAD,CAAkBrrB,MAAO,qBAAsBxB,MAAK,OAAEjI,QAAF,IAAEA,GAAF,UAAEA,EAAM4N,iBAAR,aAAE,EAAiBinB,UAAU,GAAGE,YAEzF,yCAGP,cAAC/X,EAAA,EAAD,CAAK7E,UAAU,kBAAf,SACI,cAAC6c,GAAA,EAAD,CAAMpmB,UAAU,MAAM,aAAW,OAAjC,gBAEQ4lB,QAFR,IAEQA,OAFR,EAEQA,EAAcpxB,KAAI,SAACN,EAAM4C,GAAP,OACd,eAACuvB,GAAA,EAAD,WACI,cAAChY,EAAA,EAAD,CAAYrO,UAAU,QAAtB,gBAA+B9L,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMkwB,QACrC,cAAC/V,EAAA,EAAD,iBAAana,QAAb,IAAaA,OAAb,EAAaA,EAAMmF,UAFvB,sBAAkCvC,GADpB,aAUkB/E,KAA1C,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAM4H,kBAAN,mBAAkB7C,kBAAlB,eAA8B0vB,aACzB,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAAoCX,KAAI,OAAE/zB,QAAF,IAAEA,GAAF,UAAEA,EAAM4H,kBAAR,iBAAE,EAAkB7C,kBAApB,aAAE,EAA8B0vB,YAAY,GAAIzB,MAAM,WAA9F,2BAEN,6CAKrB,EChEckC,GAjCO,SAACrb,GAAW,IAAD,EACrB7Z,EAAS6Z,EAAT7Z,KAEJgzB,EAAQ,GACRW,EAAY,GAehB,OAbQ,OAAJ3zB,QAAI,IAAJA,KAAM4N,WAAN,OAAmB5N,QAAnB,IAAmBA,KAAM4H,YACzBorB,EAAQhzB,EAAK4H,WAAWI,KACxB2rB,EAAY3zB,EAAK4H,WAAW7E,GAAK6wB,KAE9B,OAAI5zB,QAAJ,IAAIA,KAAM4N,WACbolB,EAAQhzB,EAAK4N,UAAU3N,SACvB0zB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,MAGhCZ,EAAQhzB,EAAK4H,WAAWI,KACxB2rB,EAAY3zB,EAAK4H,WAAW7E,GAAK6wB,KAIjC,cAAC5W,EAAA,EAAD,CAAKja,GAAI4wB,EAAT,SACI,eAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,KAAtB,4BACA,eAACoO,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,kBACA,cAAC8lB,GAAD,CAA8BX,KAAI,UAAE/zB,EAAK4H,kBAAP,aAAE,EAAiB7E,GAAIiwB,MAAOA,EAAMa,YAAtE,yBAMnB,ECtCYsB,GAAqB,SAAC1rB,EAAOxB,GACtC,YAActH,IAAVsH,EACgBA,EAAM7E,KAAK,SAACN,EAAM4C,GAC9B,OAAQ,cAAC,GAAD,CAAgD+D,MAAOA,EAAOxB,MAAOnF,GAA9C2G,EAAQ,QAAU/D,EACpD,IAGO,wCAEf,EAEY0vB,GAAc,SAAC3rB,EAAOxB,GAC/B,YAActH,IAAVsH,EACQ,cAAC,GAAD,CAA8BwB,MAAOA,EAAOxB,MAAOA,GAA5BwB,GAEvB,wCAEf,ECsCc4rB,GA/CO,SAACxb,GAAW,IAAD,8BACrB7Z,EAAS6Z,EAAT7Z,KAEJgzB,EAAQ,GACRW,EAAY,GAEhB,GAAQ,OAAJ3zB,QAAI,IAAJA,KAAM4N,WAAN,OAAmB5N,QAAnB,IAAmBA,KAAM4H,WACzB+rB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,IAChCZ,EAAQhzB,EAAK4N,UAAU3N,cAEpB,UAAID,QAAJ,IAAIA,KAAM4H,WAAY,CAAC,IAAD,IACzB+rB,EAAY3zB,EAAK4H,WAAW7E,GAAK6wB,IACjCZ,EAAQ,UAAAhzB,EAAK4H,WAAW7C,kBAAhB,SAA4B0E,MAA5B,UAAoCzJ,EAAK4H,WAAW7C,kBAApD,aAAoC,EAA4B0E,MAAM,GAAK,EAEtF,MACGkqB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,IAChCZ,EAAQ,wBAGZ,OACI,cAAChW,EAAA,EAAD,CAAKja,GAAI4wB,EAAT,SACI,eAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACM,UAAAnY,EAAK4H,WAAW7C,kBAAhB,SAA4B0vB,aAA8D,MAA/C,UAAAz0B,EAAK4H,WAAW7C,kBAAhB,eAA4B0vB,YAAY,IAC9E,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,KAAtB,SAA4B,mBAC5B,cAACqO,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAA+BX,KAAI,UAAE/zB,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4B0vB,YAAY,GAAIzB,MAAOA,GAAxF,sBAEL,cAAC,GAAD,CAAkBvpB,MAAO,QAASxB,MAAO+qB,EAAOS,QAAS,mBAG9D0B,GAAmB,iBAAD,OAAmBn1B,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAM4H,kBAAzB,iBAAmB,EAAkB7C,kBAArC,aAAmB,EAA8BuwB,kBAEjE,eAACtY,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,SAA+B,wBAC/B,cAAC8lB,GAAD,CAAOX,KAAI,OAAE/zB,QAAF,IAAEA,GAAF,UAAEA,EAAM4H,kBAAR,iBAAE,EAAkB7C,kBAApB,aAAE,EAA8BwwB,mCAAoCvC,MAAM,0CAG3FmC,GAAmB,mBAAD,OAAqBn1B,QAArB,IAAqBA,GAArB,UAAqBA,EAAM4H,kBAA3B,iBAAqB,EAAkB7C,kBAAvC,aAAqB,EAA8BywB,iCACrEL,GAAmB,gCAAD,OAAkCn1B,QAAlC,IAAkCA,GAAlC,UAAkCA,EAAM4H,kBAAxC,iBAAkC,EAAkB7C,kBAApD,aAAkC,EAA8B0wB,4BAClFN,GAAmB,uBAAD,OAAyBn1B,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAM4H,kBAA/B,iBAAyB,EAAkB7C,kBAA3C,aAAyB,EAA8B2wB,uBACzEP,GAAmB,mCAAD,OAAqCn1B,QAArC,IAAqCA,GAArC,UAAqCA,EAAM4H,kBAA3C,iBAAqC,EAAkB7C,kBAAvD,aAAqC,EAA8B4wB,sCAItG,EC6EcC,GAvHQ,SAAC/b,GAAW,IAAD,4BASW,QARjC7Z,EAAS6Z,EAAT7Z,KACFY,EAAQ+T,OAAOV,SAASjU,EAAKoB,YAAYkV,SAAS1V,MAEpDoyB,EAAQ,GACRvpB,EAAQ,GACRkqB,EAAY,GACZkC,EAAc,GAElB,GAAQ,OAAJ71B,QAAI,IAAJA,KAAM4N,WAAN,OAAmB5N,QAAnB,IAAmBA,KAAM4H,WACzB+rB,GAAY,UAAA3zB,EAAK4H,kBAAL,eAAiB7E,IAAK6wB,IAClCnqB,EAAK,OAAGzJ,QAAH,IAAGA,GAAH,UAAGA,EAAM4H,WAAW7C,kBAApB,aAAG,EAA6B0E,MAAM,GAC3CupB,EAAK,OAAGhzB,QAAH,IAAGA,GAAH,UAAGA,EAAM4H,WAAW7C,kBAApB,aAAG,EAA6BiuB,MAAM,GAC3C6C,EAAW,OAAG71B,QAAH,IAAGA,GAAH,UAAGA,EAAM4H,WAAW7C,kBAApB,aAAG,EAA6B8wB,YAAY,QAEpD,UAAI71B,QAAJ,IAAIA,KAAM4N,UAAW,CAAC,IAAD,IACxBnE,EAAK,OAAGzJ,QAAH,IAAGA,GAAH,UAAGA,EAAM4N,iBAAT,aAAG,EAAiB3N,SACzB0zB,GAAgB,OAAJ3zB,QAAI,IAAJA,GAAA,UAAAA,EAAM4N,iBAAN,eAAiB7K,IAAK6wB,GAErC,KAAM,CAAC,IAAD,MACHD,GAAY,UAAA3zB,EAAK4H,kBAAL,eAAiB7E,IAAK6wB,IAClCnqB,EAAK,UAAGzJ,EAAK4H,kBAAR,iBAAG,EAAiB7C,kBAApB,aAAG,EAA6B0E,MAAM,EAC9C,CAED,IAC8D,EAD1D6qB,EAAe,oBACgC3zB,KAA3C,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAM4H,kBAAN,mBAAkB7C,kBAAlB,eAA8BuvB,gBAC9BA,EAAe,IAAIC,KAAJ,UAASv0B,EAAK4H,WAAW7C,kBAAzB,aAAS,EAA4BuvB,aAAa,KAGrE,IACmF,EAYnB,EAb5DwB,EAAgB,QACoDn1B,KAApE,UAAAX,EAAK4H,WAAW7C,kBAAhB,eAA4BgxB,uCAC5B,UAAA/1B,EAAK4H,WAAW7C,kBAAhB,SAA4BgxB,oCAAoC3yB,KAAI,SAAA4yB,GAChE,IAAMj3B,EAAc6B,EAAMiH,IAAImuB,GAM9B,OALAF,EAAcxzB,KAAK,CACf0F,KAAI,OAAEjJ,QAAF,IAAEA,OAAF,EAAEA,EAAaiJ,KACnBiuB,YAAa,yBACb9qB,IAAK+qB,IAEFF,CACV,UAGgDr1B,KAAjD,UAAAX,EAAK4H,WAAW7C,kBAAhB,eAA4BoxB,oBAC5B,UAAAn2B,EAAK4H,WAAW7C,kBAAhB,SAA4BoxB,iBAAiB/yB,KAAI,SAAA4yB,GAC7C,IAAMj3B,EAAc6B,EAAMiH,IAAImuB,GAM9B,OALAF,EAAcxzB,KAAK,CACf0F,KAAI,OAAEjJ,QAAF,IAAEA,OAAF,EAAEA,EAAaiJ,KACnBiuB,YAAa,cACb9qB,IAAK+qB,IAEFF,CACV,KAGL,IAAMxB,EAAe,CACjB,CACIxB,MAAO,cACP/qB,MAAK,UAAEjI,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4BqxB,YAEvC,CACIpD,MAAO,0BACP/qB,MAAK,UAAEjI,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4BsxB,iCAEvC,CACIrD,MAAO,sBACP/qB,MAAK,UAAEjI,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4BuxB,0BAI3C,OACI,cAACtZ,EAAA,EAAD,CAAKja,GAAI4wB,EAAT,SACI,eAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACI,cAAC,GAAD,CAAkB1O,MAAO,QAASxB,MAAO+qB,EAAOS,QAAS,oBACvD,UAAAzzB,EAAK4H,WAAW7C,kBAAhB,SAA4B0vB,aAA8D,MAA/C,UAAAz0B,EAAK4H,WAAW7C,kBAAhB,eAA4B0vB,YAAY,IAC9E,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAA+BX,KAAI,UAAE/zB,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4B0vB,YAAY,GAAIzB,MAAOvpB,GAAxF,sBAEL,cAAC,GAAD,CAAkBA,MAAO,QAASxB,MAAOwB,IAEhD,cAAC,GAAD,CAAkBA,MAAO,cAAexB,MAAO4tB,IAE/C,cAAC,GAAD,CAAkBpsB,MAAO,aAAcxB,MAAOqsB,EAAaT,aAE3D,eAAC7W,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC+lB,GAAD,CAAkBR,MAAK,UAAEn0B,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4ByE,aAGzD,eAACwT,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,iCACA,cAAC+lB,GAAD,CAAkBR,MAAK,UAAEn0B,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4B4E,8BAGzD,cAACqT,EAAA,EAAD,CAAK7E,UAAU,kBAAf,SACI,cAAC6c,GAAA,EAAD,CAAMpmB,UAAU,MAAM,aAAW,OAAjC,gBAEQ4lB,QAFR,IAEQA,OAFR,EAEQA,EAAcpxB,KAAI,SAACN,EAAM4C,GAAP,OACd,eAACuvB,GAAA,EAAD,WACI,cAAChY,EAAA,EAAD,CAAYrO,UAAU,QAAtB,gBAA+B9L,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMkwB,QACrC,cAAC/V,EAAA,EAAD,iBAAana,QAAb,IAAaA,OAAb,EAAaA,EAAMmF,UAFvB,sBAAkCvC,GADpB,aAUgB/E,KAA5C,UAAAX,EAAK4H,WAAW7C,kBAAhB,eAA4B0vB,aACvB,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAAoCX,KAAI,UAAE/zB,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4B0vB,YAAY,GAAIzB,MAAM,WAA5F,2BAEN,6CAKrB,ECrHckB,GAPI,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACnB,OACE,cAACnX,EAAA,EAAD,CAAK7E,UAAU,4BAAf,gBACIgc,QADJ,IACIA,OADJ,EACIA,EAAO/wB,KAAI,SAACN,EAAM4C,GAAP,OAAiB,cAAC0uB,GAAA,EAAD,CAA+B3qB,MAAO3G,GAAtC,UAAcA,EAAd,YAAsB4C,GAAvC,KAGlB,ECiGc6wB,GAhGQ,SAAC1c,GAAW,IAAD,kGAMS,MAL/B7Z,GAAS6Z,EAAT7Z,KAEJgzB,GAAQ,GACRW,GAAY,GAEhB,GAAI3zB,GAAK4N,WAAa5N,GAAK4H,WACvB+rB,IAAgB,OAAJ3zB,SAAI,IAAJA,IAAA,WAAAA,GAAM4N,iBAAN,iBAAiB7K,IAAK6wB,IAClCZ,GAAK,OAAGhzB,SAAH,IAAGA,IAAH,WAAGA,GAAM4N,iBAAT,cAAG,GAAiB3N,cAEtB,UAAID,SAAJ,IAAIA,OAAM4H,WAAY,CAAC,IAAD,GACzB+rB,IAAgB,OAAJ3zB,SAAI,IAAJA,IAAA,WAAAA,GAAM4H,kBAAN,iBAAkB7E,IAAK6wB,IACnCZ,GAAQhzB,GAAK4H,WAAWI,IAE3B,MACG2rB,GAAY3zB,GAAK4N,UAAU7K,GAAK6wB,IAChCZ,GAAQhzB,GAAK4N,UAAU3N,SAMd,UAAED,GAAK4H,WAAW7C,kBAAlB,OAAE,EAA4ByxB,WAI9B,UAAEx2B,GAAK4H,WAAW7C,kBAAlB,OAAE,EAA4B0xB,YAI3C,OACI,cAACzZ,EAAA,EAAD,CAAKja,GAAI4wB,GAAT,SACI,eAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACM,UAAAnY,GAAK4H,WAAW7C,kBAAhB,SAA4B0vB,aAA8D,MAA/C,UAAAz0B,GAAK4H,WAAW7C,kBAAhB,eAA4B0vB,YAAY,IAC9E,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,KAAtB,SAA4B,oBAC5B,cAACqO,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAA+BX,KAAI,UAAE/zB,GAAK4H,WAAW7C,kBAAlB,aAAE,EAA4B0vB,YAAY,GAAIzB,MAAOA,IAAxF,sBAEL,cAAC,GAAD,CAAkBvpB,MAAO,QAASxB,MAAO+qB,GAAOS,QAAS,oBAG9D0B,GAAmB,eAAD,OAAiBn1B,SAAjB,IAAiBA,IAAjB,UAAiBA,GAAM4H,kBAAvB,iBAAiB,EAAkB7C,kBAAnC,aAAiB,EAA8B2xB,gBAChE,UAAA12B,GAAK4H,WAAW7C,kBAAhB,SAA4B4xB,UAA5B,UAAwC32B,GAAK4H,WAAW7C,kBAAxD,OAAwC,EAA4B6xB,QACjExB,GAAY,OAAO,UAAAp1B,GAAK4H,WAAW7C,kBAAhB,eAA4B4xB,UAAW,KAAvC,UAA6C32B,GAAK4H,WAAW7C,kBAA7D,aAA6C,EAA4B6xB,UAC3F,UAAA52B,GAAK4H,WAAW7C,kBAAhB,SAA4B8xB,aAA5B,UAA2C72B,GAAK4H,WAAW7C,kBAA3D,OAA2C,EAA4B+xB,aACpE1B,GAAY,OAAO,UAAAp1B,GAAK4H,WAAW7C,kBAAhB,eAA4B+xB,cAAe,KAA3C,UAAiD92B,GAAK4H,WAAW7C,kBAAjE,aAAiD,EAA4B8xB,cAChG,yCAGP,UAAA72B,GAAK4H,WAAW7C,kBAAhB,SAA4ByxB,YAA5B,UAA0Cx2B,GAAK4H,WAAW7C,kBAA1D,OAA0C,EAA4B0xB,YACnErB,GAAY,UAAU,UAAAp1B,GAAK4H,WAAW7C,kBAAhB,eAA4B0xB,aAAc,KAA1C,UAAgDz2B,GAAK4H,WAAW7C,kBAAhE,aAAgD,EAA4ByxB,aAClG,yCAGJrB,GAAmB,iBAAD,OAAmBn1B,SAAnB,IAAmBA,IAAnB,UAAmBA,GAAM4H,kBAAzB,iBAAmB,EAAkB7C,kBAArC,aAAmB,EAA8BgG,eACnEoqB,GAAmB,sBAAD,OAAwBn1B,SAAxB,IAAwBA,IAAxB,UAAwBA,GAAM4H,kBAA9B,iBAAwB,EAAkB7C,kBAA1C,aAAwB,EAA8B8F,uBAExE,UAAA7K,GAAK4H,kBAAL,mBAAiB7C,kBAAjB,SAA6B+F,iBAAkB,UAAA9K,GAAK4H,kBAAL,mBAAiB7C,kBAAjB,eAA6B+F,eAAevG,QAAS,EAC9F,eAACyY,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,qBACA,cAAC,GAAD,CAAYulB,MAAK,UAAEn0B,GAAK4H,kBAAP,iBAAE,EAAiB7C,kBAAnB,aAAE,EAA6B+F,oBAEtD,yCAEJ,UAAA9K,GAAK4H,kBAAL,mBAAiB7C,kBAAjB,SAA6BgyB,gBAAiB,UAAA/2B,GAAK4H,kBAAL,mBAAiB7C,kBAAjB,eAA6BgyB,cAAcxyB,QAAS,EAC5F,eAACyY,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,qBACA,cAAC,GAAD,CAAYulB,MAAK,UAAEn0B,GAAK4H,kBAAP,iBAAE,EAAiB7C,kBAAnB,aAAE,EAA6BgyB,mBAEtD,yCAEJ,UAAA/2B,GAAK4H,kBAAL,mBAAiB7C,kBAAjB,SAA6BuwB,mBAAoB,UAAAt1B,GAAK4H,kBAAL,mBAAiB7C,kBAAjB,eAA6BuwB,iBAAiB/wB,QAAS,EAClG,eAACyY,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACI,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,QAAtB,6BACA,cAAC,GAAD,CAAYulB,MAAK,UAAEn0B,GAAK4H,kBAAP,iBAAE,EAAiB7C,kBAAnB,aAAE,EAA6BuwB,sBAEtD,8CAEiE30B,KAAjE,OAAJX,SAAI,IAAJA,IAAA,UAAAA,GAAM4H,kBAAN,mBAAkB7C,kBAAlB,eAA8BwwB,oCACzB,cAACvY,EAAA,EAAD,CAAK7E,UAAU,kBAAf,SACK,cAACuc,GAAD,CAAOX,KAAI,OAAE/zB,SAAF,IAAEA,IAAF,UAAEA,GAAM4H,kBAAR,iBAAE,EAAkB7C,kBAApB,aAAE,EAA8BwwB,mCAAoCvC,MAAM,yCAE3F,kCAEyDryB,KAAzD,OAAJX,SAAI,IAAJA,IAAA,UAAAA,GAAM4H,kBAAN,mBAAkB7C,kBAAlB,eAA8B0wB,4BACzB,cAACzY,EAAA,EAAD,CAAK7E,UAAU,kBAAf,SACK,cAACuc,GAAD,CAAOX,KAAI,OAAE/zB,SAAF,IAAEA,IAAF,UAAEA,GAAM4H,kBAAR,iBAAE,EAAkB7C,kBAApB,aAAE,EAA8B0wB,2BAA4BzC,MAAM,oCAEnF,6CAKrB,EC7DcgE,GApCS,SAACnd,GAAW,IAAD,UACvB7Z,EAAS6Z,EAAT7Z,KAEJgzB,EAAQ,GACRW,EAAY,GAEhB,GAAQ,OAAJ3zB,QAAI,IAAJA,KAAM4N,WAAN,OAAmB5N,QAAnB,IAAmBA,KAAM4H,WACzB+rB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,IAChCZ,EAAQhzB,EAAK4N,UAAU3N,cAEpB,UAAID,QAAJ,IAAIA,KAAM4H,WAAY,CAAC,IAAD,IACzB+rB,EAAY3zB,EAAK4H,WAAW7E,GAAK6wB,IACjCZ,EAAK,UAAGhzB,EAAK4H,WAAW7C,kBAAnB,iBAAG,EAA4B0E,aAA/B,aAAG,EAAoC,EAE/C,MACGkqB,EAAY3zB,EAAK4N,UAAU7K,GAAK6wB,IAChCZ,EAAQ,qBAGZ,OACI,cAAChW,EAAA,EAAD,CAAKja,GAAI4wB,EAAT,SACI,eAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,UACM,UAAAnY,EAAK4H,WAAW7C,kBAAhB,SAA4B0vB,aAA8D,MAA/C,UAAAz0B,EAAK4H,WAAW7C,kBAAhB,eAA4B0vB,YAAY,IAC9E,eAACzX,EAAA,EAAD,CAAK7E,UAAU,kBAAf,UACK,cAAC8E,EAAA,EAAD,CAAYrO,UAAU,KAAtB,SAA4B,qBAC5B,cAACqO,EAAA,EAAD,CAAYrO,UAAU,QAAtB,mBACA,cAAC8lB,GAAD,CAA+BX,KAAI,UAAE/zB,EAAK4H,WAAW7C,kBAAlB,aAAE,EAA4B0vB,YAAY,GAAIzB,MAAOA,GAAxF,sBAEL,cAAC,GAAD,CAAkBvpB,MAAO,QAASxB,MAAO+qB,EAAOS,QAAS,qBAE9D0B,GAAmB,kBAAD,OAAoBn1B,QAApB,IAAoBA,GAApB,UAAoBA,EAAM4H,kBAA1B,iBAAoB,EAAkB7C,kBAAtC,aAAoB,EAA8BkyB,8BAIrF,ECTcC,GA5BW,SAACrd,GACvB,IAKyC,IALjC7Z,EAAS6Z,EAAT7Z,KAEJgzB,EAAQ,GACRW,EAAY,GAEhB,GAAQ,OAAJ3zB,QAAI,IAAJA,KAAM4N,WAAN,OAAmB5N,QAAnB,IAAmBA,KAAM4H,WACzBorB,EAAK,UAAGhzB,EAAK4H,kBAAR,aAAG,EAAiBI,KACzB2rB,GAAY,UAAA3zB,EAAK4H,kBAAL,eAAiB7E,IAAK6wB,SAE/B,UAAI5zB,QAAJ,IAAIA,KAAM4N,UAAW,CAAC,IAAD,IACxBolB,EAAK,UAAGhzB,EAAK4N,iBAAR,aAAG,EAAgB3N,SACxB0zB,GAAY,UAAA3zB,EAAK4N,iBAAL,eAAgB7K,IAAK6wB,GAEpC,KAAM,CAAC,IAAD,IACHZ,EAAK,UAAGhzB,EAAK4H,kBAAR,aAAG,EAAiBI,KACzB2rB,GAAY,UAAA3zB,EAAK4H,kBAAL,eAAiB7E,IAAK6wB,GACrC,CAED,OACI,cAAC5W,EAAA,EAAD,CAAK7E,UAAU,yBAAyBpV,GAAI4wB,EAA5C,SACI,cAAC3W,EAAA,EAAD,CAAK7E,UAAU,cAAf,SACI,cAAC,GAAD,CAAkB1O,MAAO,QAASxB,MAAO+qB,EAAOS,QAAS,0BAIxE,ECsBKrlB,GAAa,SAAUpO,GACzB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAkBn3B,KAAMA,KAGnC,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAmBn3B,KAAMA,KAGpC,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,GAAD,CAAkBn3B,KAAMA,IACxB,cAAC,GAAD,CAAmBA,KAAMA,MAGpC,GACD,OAAOm3B,CACV,EAEKnmB,GAAU,SAAUhR,GACtB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,EAAD,CAAen3B,KAAMA,KAGhC,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAgBn3B,KAAMA,KAGjC,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,EAAD,CAAen3B,KAAMA,IACrB,cAAC,GAAD,CAAgBA,KAAMA,MAGjC,GACD,OAAOm3B,CACV,EAEK53B,GAAW,SAAUS,GACvB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAgBn3B,KAAMA,KAGjC,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAiBn3B,KAAMA,KAGlC,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,GAAD,CAAgBn3B,KAAMA,IACtB,cAAC,GAAD,CAAiBA,KAAMA,MAGlC,GACD,OAAOm3B,CACV,EAEK5sB,GAAS,SAAUvK,GACrB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAkBn3B,KAAMA,KAGnC,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAen3B,KAAMA,KAGhC,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,GAAD,CAAkBn3B,KAAMA,IACxB,cAAC,GAAD,CAAeA,KAAMA,MAGhC,GACD,OAAOm3B,CACV,EAEK9sB,GAAU,SAAUrK,GACtB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAkBn3B,KAAMA,KAGnC,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAgBn3B,KAAMA,KAGjC,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,GAAD,CAAkBn3B,KAAMA,IACxB,cAAC,GAAD,CAAgBA,KAAMA,MAGjC,GACD,OAAOm3B,CACV,EAEK9oB,GAAO,SAAUrO,GACnB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,EAAD,CAAYn3B,KAAMA,KAG7B,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAan3B,KAAMA,KAG9B,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,EAAD,CAAYn3B,KAAMA,IAClB,cAAC,GAAD,CAAaA,KAAMA,MAG9B,GACD,OAAOm3B,CACV,EAEK7sB,GAAS,SAAUtK,GACrB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,EAAD,CAAcn3B,KAAMA,KAG/B,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAAC,GAAD,CAAen3B,KAAMA,KAGhC,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,EAAD,CAAcn3B,KAAMA,IACpB,cAAC,GAAD,CAAeA,KAAMA,MAGhC,GACD,OAAOm3B,CACV,EAEK/tB,GAAU,SAAUpJ,GACtB,IAAMm3B,EAAa,CACfn3B,KAAMA,EAEVm3B,UAAuB,WACnB,OACI,mCACI,cAAC,EAAD,CAAYn3B,KAAMA,KAG7B,EAEDm3B,UAAuB,WACnB,OACI,mCACI,cAACC,GAAD,CAASp3B,KAAMA,KAG1B,EAEDm3B,OAAoB,WAChB,OACI,qCACI,cAAC,EAAD,CAAYn3B,KAAMA,IAClB,cAACo3B,GAAD,CAASp3B,KAAMA,MAG1B,GACD,OAAOm3B,CACV,EAEcE,GA/RM,WACjBl3B,KAAKm3B,cAAgB,SAAUt3B,GAC3B,IAAIu3B,EAAU,KAOd,YALwB52B,IAApBX,EAAK4H,YAAgD,OAApB5H,EAAK4H,WAC/B5H,EAAK4H,WAAWzC,KAEhBnF,EAAK4N,UAAUzI,MAGtB,KAAKzG,IAAS0P,WAAW5P,IACrB+4B,EAAU,IAAInpB,GAAWpO,GACzB,MACJ,KAAKtB,IAASsS,QAAQxS,IAClB+4B,EAAU,IAAIvmB,GAAQhR,GACtB,MACJ,KAAKtB,IAASa,SAASf,IACnB+4B,EAAU,IAAIh4B,GAASS,GACvB,MACJ,KAAKtB,IAAS6L,OAAO/L,IACjB+4B,EAAU,IAAIhtB,GAAOvK,GACrB,MACJ,KAAKtB,IAAS2L,QAAQ7L,IAClB+4B,EAAU,IAAIltB,GAAQrK,GACtB,MACJ,KAAKtB,IAAS2P,KAAK7P,IACf+4B,EAAU,IAAIlpB,GAAKrO,GACnB,MACJ,KAAKtB,IAAS4L,OAAO9L,IACjB+4B,EAAU,IAAIjtB,GAAOtK,GACrB,MACJ,QACIu3B,EAAU,IAAInuB,GAAQpJ,GAG9B,OAAOu3B,CACV,CACJ,ECrDc,OAA0B,oC,UCoC1BC,GA7BW,SAAC3d,GAAW,IAAD,EAC3B3V,EAAU2V,EAAV3V,MACFuzB,EAAW,SAAA10B,GACI0W,SAASie,eAAe30B,EAAK6wB,KACrC+D,eAAe,CAAEC,SAAU,UACvC,EAED,OACE,cAAC5a,EAAA,EAAD,CAAK7E,UAAU,OAAf,SACE,eAAC0f,GAAA,EAAD,CACE1Q,UAAW,qBAAK/b,IAAK0sB,GAASloB,IAAI,YAClC,aAAW,aAFb,UAKI1L,GAASA,EAAM6zB,MAAf,OACE7zB,QADF,IACEA,GADF,UACEA,EAAO6zB,aADT,aACE,EAAc30B,KAAI,SAAC40B,EAAMtyB,GAAP,OAChB,cAACsuB,GAAA,EAAD,CAAMxkB,MAAM,UAAUC,QAAS,WAAOgoB,EAASO,EAAKj1B,GAAI,EAAxD,gBACGi1B,QADH,IACGA,OADH,EACGA,EAAMhF,OADT,4BAA6EgF,QAA7E,IAA6EA,OAA7E,EAA6EA,EAAMhF,MAAnF,YAA4FttB,GAD5E,IAKhB,KAEN,cAACuX,EAAA,EAAD,CAAY5N,QAAQ,YAAYI,QAAS,WAAOgoB,EAAQ,OAACvzB,QAAD,IAACA,OAAD,EAACA,EAAOygB,QAAQ5hB,GAAI,EAAEoV,UAAU,sBAAxF,gBAA+GjU,QAA/G,IAA+GA,OAA/G,EAA+GA,EAAOygB,QAAQxW,WAKrI,ECtBc8pB,GALM,CACjB,eAAkBzK,EAClB,SCDmB,SAAC3T,GACtB,IAAIqe,OAAev3B,EACbP,EAAU,IAAIi3B,GACd1T,EAAepO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASmO,iBAAnB,IAChCuU,EAAc/3B,EAAQk3B,cAAc3T,GACtCzf,EAAQ,CACV6zB,MAAO,GACPpT,QAAS,CACP5hB,QAAIpC,EACJwN,KAAM,KAGNG,EAAO,GACX,QAA+B3N,IAA3BgjB,EAAa/V,WAAsD,OAA3B+V,EAAa/V,WACvDU,EAAI,YAAOqV,EAAa/V,UAAUU,OAC7B4S,QACLgX,EAAe5pB,EAAK7I,UAAUrC,KAAK,SAAAg1B,GACjC,IAAMxqB,EAAY+G,OAAOV,SAAS0P,EAAaviB,YAAYkV,SAASvV,SAAS8G,IAAIuwB,GAC3EtrB,EAAW,CACf1L,WAAYuiB,EAAaviB,WACzBwG,WAAYgG,EAAUC,gBACtBD,UAAWA,GAIb,OAAId,EAASc,UAAU7K,KAAO+G,KACzBgD,EAASc,UAAU7K,KAAOmH,KAC1B4C,EAASc,UAAU7K,KAAOiH,KACM,YAAhC8C,EAASc,UAAU3N,UACa,eAAhC6M,EAASc,UAAU3N,UACtBiE,EAAM6zB,MAAMz1B,KAAK,CACfS,GAAIq1B,EACJpF,MAAOplB,EAAUO,KACjB4lB,KAAM,MAED3zB,EAAQk3B,cAAcxqB,GAAUurB,aAElC,wCACR,IACDn0B,EAAMygB,QAAU,CACd5hB,GAAI4gB,EAAa/V,UAAU7K,GAC3BoL,KAAMwV,EAAa/V,UAAUO,UAE1B,CACLG,EAAO,GAEP,IADA,IAAIgqB,EAAoB3U,OACwBhjB,IAAxC23B,EAAkB1wB,WAAW1C,QACnCoJ,EAAKhM,KAAKg2B,EAAkB1wB,WAAW1C,OAAOnC,IAC9Cu1B,EAAoB,CAClB1qB,eAAWjN,EACXiH,WAAY0wB,EAAkB1wB,WAAW1C,QAI7CgzB,EAAe5pB,EAAK7I,UAAUrC,KAAK,SAAAg1B,GACjC,IAAMxwB,EAAa+M,OAAOV,SAAS0P,EAAaviB,YAAYkV,SAAS1V,MAAMiH,IAAIuwB,GACzEtrB,EAAW,CACf1L,WAAYuiB,EAAaviB,WACzBwG,WAAYA,EACZgG,UAAWhG,EAAWQ,gBAExB,OAAI0E,EAASlF,WAAW7E,KAAO+G,KAC1BgD,EAASlF,WAAW7E,KAAOmH,KAC3B4C,EAASlF,WAAW7E,KAAOiH,KAC9B9F,EAAM6zB,MAAMz1B,KAAK,CACfS,GAAIq1B,EACJpF,MAAOprB,EAAWI,KAClB+rB,KAAM,MAED3zB,EAAQk3B,cAAcxqB,GAAUurB,aAElC,wCACR,IACDn0B,EAAMygB,QAAU,CACd5hB,GAAI4gB,EAAa/b,WAAW7E,GAC5BoL,KAAMwV,EAAa/b,WAAWI,KAEjC,CAED,OACE,eAACgV,EAAA,EAAD,CAAK7E,UAAW,qBAAuB0B,EAAMzB,KAAO,MAAQ,IAA5D,UACE,cAAC4E,EAAA,EAAD,CAAK7E,UAAU,+BAAf,SACE,cAAC,GAAD,CAAaogB,OAAO,EAAOr0B,MAAOA,MAGlCg0B,EACAC,EAAYE,YACd,cAAC,EAAD,MAGL,G,SC3FD,IAAMG,GAAW,CACf,SCYa,WAA+C,IAArBhjB,EAAoB,uDAAZ,CAAC,EAAGijB,EAAQ,uCACzD,OAAQA,EAAOtzB,MACX,KAAKuzB,IACD,QAAoB/3B,IAAhB83B,EAAOjyB,KAAoB,CAC3B,IAAM8P,EAAW3B,OAAOV,SAASwkB,EAAOjyB,KAAKpF,YAAYkV,SACnD1O,EAAa0O,EAAS1V,MAAMiH,IAAI4wB,EAAOjyB,KAAKoB,YAC5CgG,EAAY0I,EAASvV,SAAS8G,IAAI4wB,EAAOjyB,KAAKoH,WACpD,OAAO,6BACA4H,GADP,IAEIoO,kBAAmB,CACfxiB,WAAYq3B,EAAOjyB,KAAKpF,WACxBwG,WAAYA,GAA0B,KACtCgG,UAAWA,GAAwB,KACnC9J,OAAQ20B,EAAOjyB,KAAK1C,SAG/B,CACD,MACJ,KAAK40B,IACD,QAAoB/3B,IAAhB83B,EAAOjyB,MAAuBgP,EAAMvB,SAAS/T,SAASu4B,EAAOjyB,KAAKxH,QAAQ+D,IAoB1E,OAAOyS,OAnBiB7U,IAApBgU,OAAOV,WACPU,OAAOV,SAAW,CAAC,GAEvBU,OAAOV,SAASwkB,EAAOjyB,KAAKxH,QAAQ+D,IAAM,CACtC6T,MAAO6hB,EAAOjyB,KAAKxH,QAAQ4X,MAC3BlW,KAAM+3B,EAAOjyB,KAAKxH,QAAQ0B,KAC1B4V,SAAUmiB,EAAOjyB,KAAKxH,QAAQsX,UAElC,IAAMqiB,EAAG,sBAAOnjB,EAAMvB,UAAb,CAAuBwkB,EAAOjyB,KAAKxH,QAAQ+D,KACpD,OAAO,6BACAyS,GADP,IAEIvB,SAAU0kB,EACV/U,kBAAmB,CACfxiB,WAAYq3B,EAAOjyB,KAAKxH,QAAQ+D,GAChC6E,WAAY6wB,EAAOjyB,KAAKxH,QAAQ4X,MAAMhW,MAAM,GAC5CgN,UAAW6qB,EAAOjyB,KAAKxH,QAAQ4X,MAAMhW,MAAM,GAAGwH,kBAM1D,KAAKswB,IACD,OAAO,6BACAljB,GADP,IAEIwC,mBAAoBygB,EAAOjyB,KAAKyN,WAE5C,KAAKykB,IACD,QAAoB/3B,IAAhB83B,EAAOjyB,KAAoB,QACpBmO,OAAOV,SAASwkB,EAAOjyB,KAAKpF,YACnC,IAAMsE,EAAQ8P,EAAMvB,SAASpL,QAAQ4vB,EAAOjyB,KAAKpF,YAC3Cu3B,EAAG,sBAAOnjB,EAAMvB,SAAS2kB,MAAM,EAAGlzB,IAA/B,YAA0C8P,EAAMvB,SAAS2kB,MAAMlzB,EAAQ,KAChF,OAAO,6BACA8P,GADP,IAEIvB,SAAU0kB,GAEjB,CACD,MACJ,KAAKD,IACD,QAAkC/3B,IAA9B83B,EAAOjyB,KAAK8N,cACZ,OAAO,6BACAkB,GADP,IAEIlB,cAAemkB,EAAOjyB,KAAK8N,gBAGnC,MACJ,KAAKukB,gBAA4BC,WAC7B,OAAO,6BAAKtjB,GAAZ,IAAmBiX,OAASgM,EAAOjyB,KAAKimB,SAC5C,QACI,OAAOjX,EAElB,GDnEclU,GAPDy3B,sBACZP,GCd6B,CAC3B,SAAY,CACRvkB,SAAU,GACV+D,mBAAqB,GACrBghB,SAAU,GACV1kB,cAAe,KACfsP,kBAAmB,CACfxiB,WAAY,KACZwG,WAAY,KACZgG,UAAW,KACX9J,OAAQ,IAEZ2oB,OAAS,CAAC,IDIhB,CEb2B,SAAAnrB,GAAK,OAAI,SAAA23B,GAAI,OAAI,SAAAR,GAC1C,OAAQA,EAAOtzB,MACX,KAAK0zB,gBAA4BK,cAC7B,IAAMn2B,EAAK01B,EAAOjyB,KAAKzD,GACTzB,EAAM63B,WACV1jB,SAASxB,SAAS/T,SAAS6C,IACjCzB,EAAM0T,SAAS0jB,IAAsB31B,IAG7C,KAAK81B,gBAA4BC,WAEjC,KAAKJ,IAEL,KAAKA,IAEL,KAAKA,IAEL,KAAKA,KAMTO,EAAKR,EACR,CAxByC,CAAR,GFchC,CAAEW,WGfkB,CAClBC,OAAQ,CACJC,gBAAgB,EAChBC,mBAAoB,GACpBC,qBAAsB,GACtBC,gBAAgB,EAChBC,YAAa,GAWjB,OAAU,CACN,KAAQ,SACR,OAAU,IACV,GAAM,OACN,SAAY,CACR,CACI,KAAQ,MACR,OAAU,GACV,SAAY,CACR,CACI,KAAQ,SACR,OAAU,IACV,GAAM,YACN,uBAAyB,EACzB,SAAY,MAIxB,CACI,KAAQ,MACR,OAAU,GACV,SAAY,CACR,CACI,KAAQ,SACR,OAAU,IACV,GAAM,aACN,uBAAyB,EACzB,YAAc,EACd,YAAc,EACd,cAAgB,EAChB,gBAAkB,EAClB,gBAAkB,EAClB,eAAkB,MAClB,SAAY,SHnCpBzB,kBIRIxJ,QACW,cAA7B9Z,OAAOC,SAAS+kB,UAEe,UAA7BhlB,OAAOC,SAAS+kB,UAEhBhlB,OAAOC,SAAS+kB,SAAS/hB,MACvB,2DCVNgiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUx4B,MAAOA,GAAjB,SACE,cAACy4B,EAAA,EAAD,QAGJtgB,SAASie,eAAe,SDqHpB,kBAAmBsC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,YACd,G,udEtICC,EAAQ76B,EAAQ,KAED0X,E,8FAEjB,SAAe7I,EAAM4M,EAAUqf,GAC3B,QAAa55B,IAAT2N,EAAJ,CAGA,IAAMksB,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAASC,GACrBzf,EAASyf,EAAS52B,OAAO62B,OAC5B,EAEDJ,EAAOK,WAAa,SAAUr0B,GAC1B,GAAIA,EAAKs0B,iBAAkB,CACvB,IAAIhe,EAAWie,SAAUv0B,EAAKw0B,OAASx0B,EAAKy0B,MAAS,IAAK,IAC1DV,EAAiBzd,EACpB,CACJ,EAED0d,EAAOU,WAAW5sB,EAfd,CAgBP,G,6BAED,SAAgB+I,EAAK6D,EAAUigB,GAC3Bb,EAAMzyB,IAAIwP,EAAK,CACX+jB,aAAa,EACbC,aAAc,SACdC,mBAAoB,SAACC,GAEpB,IACFpB,MAAK,SAAAQ,GACJzf,EAAS7D,EAAKsjB,EAASn0B,KAC1B,IAAEg1B,OAAM,SAAAzzB,GACLxC,QAAQC,IAAIuC,GACZozB,GAAiBA,OAAcx6B,EAClC,GACJ,K,qCCrCL,oVAAO,IAAMoZ,EAAc,qBACdtG,EAAc,eAEduG,EAAiB,iBACjB0E,EAAqB,CAChCC,uBAAwB,CAAC,OAAQ,OACjCC,YAAa,QACbiB,SAAU,GAIC+T,EAAe,WAEf9pB,EAAc,eACdE,EAAgB,gBAChBE,EAAmB,mBAEnBia,EAAe,QACfH,EAAc,M","file":"static/js/main.3ad6150f.chunk.js","sourcesContent":["export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\n\nexport const RDF_TO_JSON_TYPES = [\n    {key: 'sparc:Subject', toTrim: 'subject'}\n];\n\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"title\",\n                \"property\": \"title\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"dc\",\n                \"key\": \"description\",\n                \"property\": \"description\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDoi\",\n                \"property\": \"hasDoi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriApi\",\n                \"property\": \"hasUriApi\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"subjectSpecies\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"subjectStrain\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"age\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"biologicalSex\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ],\n        \"additional_properties\": [\n            {\n                \"label\": \"Age unit\",\n                \"property\": \"ageUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age value\",\n                \"property\": \"ageValue\",\n                \"path\": [ \"TEMP:hasAge\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Age base unit\",\n                \"property\": \"ageBaseUnit\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Age base value\",\n                \"property\": \"ageBaseValue\",\n                \"path\": [ \"TEMP:hasAge\", \"TEMP:asBaseUnits\", \"rdf:value\" ],\n                \"innerPath\": \"@value\",\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            },\n            {\n                \"label\": \"Weight unit\",\n                \"property\": \"weightUnit\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"TEMP:hasUnit\", \"@id\" ],\n                \"trimType\": \"unit:\",\n                \"type\": \"string\"\n            },\n            {\n                \"label\": \"Weight value\",\n                \"property\": \"weightValue\",\n                \"path\": [ \"sparc:animalSubjectHasWeight\", \"rdf:value\", \"@value\" ],\n                \"trimType\": \"\",\n                \"type\": \"digit\"\n            }\n        ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from the subject\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"To be filled\"\n            },\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"RRID\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"RRID\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"NCBITaxon\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"NCBITaxon\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"PATO\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"PATO\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"UBERON\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"UBERON\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        },\n        RRID: {\n            \"type\": \"RRID\",\n        }\n    },\n    \"Class\": {\n        NCBITaxon: {\n            \"type\": \"NCBITaxon\",\n        },\n        PATO: {\n            \"type\": \"PATO\",\n        },\n        UBERON: {\n            \"type\": \"UBERON\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n","import NodesFactory from './nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel,\n    RDF_TO_JSON_TYPES\n} from './graphModel';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key\n} from '../constants';\n\nconst N3 = require('n3');\nconst ttl2jsonld = require('@frogcat/ttl2jsonld').parse;\n\nconst TMP_FILE = \".tmp\";\n\nconst SUBJECTS_LEVEL = 4;\nconst PROTOCOLS_LEVEL = 2, CRONTRIBUTORS_LEVEL = 2;\n\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n        this.rdf_to_json = undefined;\n        this.rdf_to_json_map = undefined;\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n        this.tree_parents_map2 = new Map();\n        this.rdf_to_json_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    convertRDFToJson () {\n        this.rdf_to_json = ttl2jsonld(this.turtleFile);\n        this.rdf_to_json['@graph'].forEach(node => {\n            let found = false;\n            let toTrim = '';\n            if (Array.isArray(node['@type'])) {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'].includes(item.key)) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            } else {\n                found = RDF_TO_JSON_TYPES.some( item => {\n                    if (node['@type'] === item.key) {\n                        toTrim = item.toTrim;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            if (found) {\n                let id = this.types[toTrim].iri.id + node['@id'].replace(toTrim + ':', '');\n                this.rdf_to_json_map.set(id, node);\n            }\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n    updateLevels(n, previousLevel) {\n        n.map( node => {\n            if ( node.level > previousLevel ){\n                this.updateLevels(node.neighbors, node.level);\n                node.level = node.level + 1;\n            }\n        });\n\n        return;\n    }\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let cleanLinks = [];\n        let self = this;\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = self.forced_nodes.find( node => node.id === link.source );\n                const b = self.forced_nodes.find( node => node.id === link.target );\n                !a.neighbors && (a.neighbors = []);\n                !b.neighbors && (b.neighbors = []);\n                a.neighbors.push(b);\n                b.neighbors.push(a);\n\n                !a.links && (a.links = []);\n                !b.links && (b.links = []);\n                a.links.push(link);\n                b.links.push(link);\n\n                cleanLinks.push(link);\n            }\n        });\n\n        // Calculate level with max amount of nodes\n        let maxLevel = Object.keys(this.levelsMap).reduce((a, b) => this.levelsMap[a].length > this.levelsMap[b].length ? a : b);\n        // Space between nodes\n        let nodeSpace = 50;\n        // The furthestLeft a node can be\n        let furthestLeft = 0 - (Math.ceil(this.levelsMap[maxLevel].length)/2  * nodeSpace );\n        let positionsMap = {};\n\n        let levelsMapKeys = Object.keys(this.levelsMap);\n\n        levelsMapKeys.forEach( level => {\n            positionsMap[level] = furthestLeft + nodeSpace/2;\n            this.levelsMap[level].sort((a, b) => a.attributes?.relativePath?.localeCompare(b.attributes?.relativePath));\n        });\n\n        this.levelsMap[3]?.sort((a, b) => a.parent?.type?.localeCompare(b.parent?.type));\n\n        for ( let i = SUBJECTS_LEVEL; i <= maxLevel ; i++ ){\n            this.levelsMap[i]?.sort( (a, b) => { \n                let aSubject = a\n                while (aSubject.type !== \"Subject\" ){\n                    aSubject = aSubject.parent;\n                }\n                let bSubject = b;\n                while (bSubject.type !== \"Subject\" ){\n                    bSubject = bSubject.parent;\n                }\n                return aSubject?.id > bSubject.id ? 1 : -1;\n            });\n        }\n\n        console.log(\"Levels map \", this.levelsMap);\n        \n        // Start assigning the graph from the bottom up\n        let neighbors = 0;\n        levelsMapKeys.reverse().forEach( level => {\n            this.levelsMap[level].forEach ( (n, index) => {\n                neighbors = n?.neighbors?.filter(neighbor => { return neighbor.level > n.level });\n                // FIXME : Fix this, beter way to create positioning\n                if ( n.level === SUBJECTS_LEVEL + 1 ){\n                    this.updateLevels(n.neighbors, n.level);\n                    if ( neighbors.length > 0 ) n.level = n.level + 1;\n                }\n                if ( neighbors.length > 0 ) {\n                    let max = Number.MIN_SAFE_INTEGER, min = Number.MAX_SAFE_INTEGER;\n                    neighbors.forEach( neighbor => {\n                        if ( neighbor.xPos > max ) { max = neighbor.xPos };\n                        if ( neighbor.xPos < min ) { min = neighbor.xPos };\n                    });\n                    n.xPos = min === max ? min : min + (max - min) * .5;\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                } else {\n                    n.xPos = positionsMap[n.level] + nodeSpace;\n                    positionsMap[n.level] = n.xPos;\n                }\n            })\n        });\n\n        console.log(this.levelsMap);\n\n        return {\n            nodes: this.forced_nodes,\n            links: cleanLinks,\n            radialVariant : this.levelsMap[maxLevel].length,\n            hierarchyVariant : maxLevel * 20\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.convertRDFToJson();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } if (type.type === this.types.owl.iri.id + \"Class\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.Class[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.Class[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        const additional_properties = this.rdf_to_json_map.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0,\n                additional_properties: additional_properties,\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        let updatedAbout = [];\n        dataset_node.attributes.isAbout.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updatedAbout.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updatedAbout.push({\"value\": a});\n                }\n            } else {\n                updatedAbout.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.isAbout = updatedAbout;\n\n        let updateTechniques = [];\n        dataset_node.attributes.protocolEmploysTechnique?.forEach( (a) => {\n            if( a.includes(rdfTypes.NCBITaxon.key) || a.includes(rdfTypes.PATO.key) || a.includes(rdfTypes.UBERON.key) ) {\n                let node = this.nodes.get(a);\n                if (node) {\n                    updateTechniques.push({\"value\": node?.attributes.label[0], \"link\": node?.id});\n                } else {\n                    updateTechniques.push({\"value\": a});\n                }\n            } else {\n                updateTechniques.push({\"value\": a});\n            }\n        });\n        dataset_node.attributes.protocolEmploysTechnique = updateTechniques;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges?.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.subject.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                link.source = subject_key;\n                target_node.level = subjects.level + 1;\n                target_node.parent = subjects;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && target_node.type === rdfTypes.Sample.key) {\n                link.source = target_node.attributes.derivedFrom[0];\n                target_node.level = subjects.level + 2;\n                target_node.parent = this.nodes.get(target_node.attributes.derivedFrom[0]);\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n\n    fix_links() {\n        let nodesToRemove = [];\n\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.Subject.key) {\n                if (node.attributes?.specimenHasIdentifier !== undefined) {\n                    let source = this.nodes.get(node.attributes.specimenHasIdentifier[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.specimenHasIdentifier[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.subjectSpecies !== undefined) {\n                    let source = this.nodes.get(node.attributes.subjectSpecies[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.subjectSpecies[0] = source.attributes.label[0];\n                    }\n                }\n                if (node.attributes?.biologicalSex !== undefined) {\n                    let source = this.nodes.get(node.attributes.biologicalSex[0]);\n                    if ( source !== undefined ) {\n                        node.attributes.biologicalSex[0] = source.attributes.label[0];\n                    }\n                }\n            }\n\n            if (node.type === rdfTypes.RRID.key || node.type === rdfTypes.NCBITaxon?.key || node.type === rdfTypes.PATO?.key) {\n                nodesToRemove.unshift(index);\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n\n        nodesToRemove.forEach(element => {\n            this.forced_nodes.splice(element, 1);\n        })\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n                this.tree_parents_map2.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                value.attributes.hasFolderAboutIt.forEach(folder => {\n                    let jsonNode = this.tree_map.get(folder);\n                    let newNode = this.buildFolder(jsonNode, value);\n                    let folderChildren = this.tree_parents_map2.get(newNode.parent_id)?.map(child => {\n                        child.parent_id = newNode.uri_api\n                        return child;\n                    });\n\n                    if (!this.filterNode(newNode) && (this.nodes.get(newNode.remote_id)) === undefined) {\n                        this.linkToNode(newNode, value);\n                    }\n\n                    if (this.tree_parents_map2.get(newNode.uri_api) === undefined) {\n                        this.tree_parents_map2.set(newNode.uri_api, folderChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        folderChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    } else {\n                        let tempChildren = folderChildren === undefined ? [...this.tree_parents_map2.get(newNode.uri_api)] : [...this.tree_parents_map2.get(newNode.uri_api), ...folderChildren];;\n                        this.tree_parents_map2.set(newNode.uri_api, tempChildren);\n                        this.tree_parents_map2.delete(newNode.parent_id);\n                        tempChildren?.forEach(child => {\n                            const child_node = this.nodes.get(this.proxies_map.get(child.uri_api));\n                            if (!this.filterNode(child) && child_node?.type !== rdfTypes.Sample.key) {\n                                this.linkToNode(child, this.nodes.get(newNode.remote_id));\n                            }\n                        });\n                    }\n                })\n            }\n        });\n    }\n\n    buildFolder(item) {\n        let copiedItem = {...item};\n        let newName = copiedItem.dataset_relative_path.split('/')[0];\n        copiedItem.parent_id = copiedItem.remote_id;\n        copiedItem.remote_id = copiedItem.basename + '_' + newName;\n        copiedItem.uri_api = copiedItem.remote_id;\n        copiedItem.basename = newName;\n        // copiedItem.basename = copiedItem.remote_id;\n        return copiedItem;\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map2.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root?.remote_id);\n        this.tree_parents_map?.delete(tree_root?.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node?.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node?.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose, enabledButton }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n      disabled={enabledButton}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)].image : rdfTypes.Unknown.image\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node.additional_properties) {\n        for (const json_prop of rdfTypes[node.type].additional_properties) {\n            let new_attribute = node.additional_properties;\n            for (const step of json_prop.path) {\n                if (new_attribute[step] !== undefined) {\n                    new_attribute = new_attribute[step];\n                } else {\n                    new_attribute = undefined;\n                    break;\n                }\n            }\n            if (new_attribute !== undefined) {\n                if (typeof new_attribute === 'object' && new_attribute !== null && new_attribute[json_prop.innerPath]) {\n                    new_attribute = new_attribute[json_prop.innerPath];\n                }\n\n                node.attributes[json_prop.property] = [];\n                if (json_prop.type === 'string') {\n                    node.attributes[json_prop.property].push(new_attribute.replace(json_prop.trimType, ''));\n                } else {\n                    node.attributes[json_prop.property].push(parseFloat(new_attribute));\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: 8,\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: 'rgba(46, 58, 89, 0.4)',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n};\n\nexport default vars;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","import NodesFactory from './../../utils/nodesFactory';\n\nimport {\n    rdfTypes,\n    type_key,\n    typesModel\n} from './../../utils/graphModel';\n\nimport {\n    subject_key,\n    protocols_key,\n    contributors_key\n} from './../../constants';\n\nconst N3 = require('n3');\n\nconst TMP_FILE = \".tmp\";\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.proxies_map = undefined;\n        this.forced_nodes = undefined;\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.proxies_map = new Map();\n    }\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            };\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        return {\n            nodes: this.forced_nodes\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.create_graph();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            });\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.subject.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                link.source = subject_key;\n                target_node.level = subjects.level + 1;\n                target_node.parent = subjects;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    fix_links() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n                value.proxies.every(proxy => {\n                    return true;\n                })\n            \n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SET_DATASET_LIST = 'SET_DATASET_LIST'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const setDatasetsList = datasets => ({\n    type: SET_DATASET_LIST,\n    data: { datasets: datasets },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});","import './flexlayout.css';\nimport theme from './theme';\nimport { useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport Splinter from './utils/Splinter';\nimport MainLayout from './app/mainLayout';\nimport FileHandler from './utils/filesHandler';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport DatasetsListDialog from './components/DatasetsListViewer/DatasetsListDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { addDataset } from './redux/actions';\nimport { NodeViewWidget } from './app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport DatasetsListSplinter from \"./components/DatasetsListViewer/DatasetsListSplinter\";\n\nimport config from './config/app.json';\n\nconst App = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const datasetID = queryParams.get('id');\n  const doi = queryParams.get('doi');\n\n  const dispatch = useDispatch();\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  const [openDatasetsListDialog, setOpenDatasetsListDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n  const [_turtle, setTurtle] = useState(undefined);\n  const [_json, setJson] = useState(undefined);\n  const [doiMatch, setDoiMatch] = useState(true);\n  const [initialised, setInitialised] = useState(false);\n  const [loading, setLoading] = useState(() => {\n    if (datasetID && datasetID !== \"\") {\n      return true;\n    }\n    if (doi && doi !== \"\") {\n      return true;\n    }\n    return false;\n  });\n\n\n  let turtle_url = '';\n  let json_url = '';\n  let splinter = undefined;\n\n  const fillDataset = async () => {\n    splinter = new Splinter(_json, _turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(addWidget({\n      id: _dataset.id,\n      name: _dataset.id.substring(0,10) + \"... Graph\",\n      component: \"graphComponent\",\n      panelName: \"leftPanel\",\n      enableClose: true,\n      enableRename: true,\n      enableDrag: true,\n      status: WidgetStatus.ACTIVE,\n      config: {\n        graph_id: _dataset.id,\n        component: \"graphComponent\",\n      }\n    }));\n    dispatch(addWidget(NodeViewWidget));\n    setLoading(false);\n  }\n\n  const loadTurtleFile = async () => {\n    turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n    const ttlHandler = new FileHandler();\n    ttlHandler.get_remote_file(turtle_url, (url, data) => {\n      if (data) {\n        setTurtle(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadJSONFile = async (datasetID) => {\n    json_url = config.datasets_url + datasetID + '/LATEST/path-metadata.json';    \n    const jsonHandler = new FileHandler();\n    jsonHandler.get_remote_file(json_url, (url, data) => {\n      if (data) {\n        setJson(data);\n      }\n    }, () => {\n      setLoading(false);\n    });\n  };\n\n  const loadDatsetFromDOI = async (url, fileData) => {\n    let file = {\n      id: \"ttl\",\n      url: url,\n      data: fileData,\n      file: { name: \"ttl\", type: \"text/turtle\" },\n    };\n    const splinter = new DatasetsListSplinter(undefined, file.data);\n    let graph = await splinter.getGraph();\n    let datasets = graph.nodes.filter((node) => node?.attributes?.hasDoi);\n    const match = datasets.find( node => node.attributes?.hasDoi?.[0]?.includes(doi) );\n    if ( match ) {\n      const datasetID = match.name;\n      turtle_url = config.datasets_url + datasetID + \"/LATEST/curation-export.ttl\";\n      const ttlHandler = new FileHandler();\n      ttlHandler.get_remote_file(turtle_url, (url, data) => {\n        if (data) {\n          setTurtle(data);\n          loadJSONFile(datasetID);\n        }\n      },null);\n    } else {\n      setLoading(false);\n      setInitialised(false);\n    }\n  };\n\n  if (datasetID && datasetID !== \"\" && _turtle === undefined) {\n    loadTurtleFile();\n  }\n\n  if (datasetID && datasetID !== \"\" && _json === undefined) {\n    loadJSONFile(datasetID);\n  }\n\n  if (doi && doi !== \"\" && doiMatch) {\n    if ( doiMatch ){\n      const fileHandler = new FileHandler();\n      const summaryURL = config.repository_url + config.available_datasets;\n      fileHandler.get_remote_file(summaryURL, loadDatsetFromDOI);\n      setDoiMatch(false)\n    }\n  }\n\n  if (_turtle && _json && !initialised) {\n    fillDataset();\n    setInitialised(true);\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" className='main-structure'>\n        <Sidebar\n          openUploadDialog={openUploadDialog}\n          setOpenUploadDialog={setOpenUploadDialog}\n          openDatasetsListDialog={openDatasetsListDialog}\n          setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n        />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                loading={loading}\n                openUploadDialog={openUploadDialog}\n                setOpenUploadDialog={setOpenUploadDialog}\n                openDatasetsListDialog={openDatasetsListDialog}\n                setOpenDatasetsListDialog={setOpenDatasetsListDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openUploadDialog}\n        handleClose={() => setOpenUploadDialog(false)}\n      />\n\n      <DatasetsListDialog\n        open={openDatasetsListDialog}\n        handleClose={() => setOpenDatasetsListDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    const event = new CustomEvent('nodeResized', {\n                        detail: node\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport Loader from '@metacell/geppetto-meta-ui/loader/Loader';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT, SPARC_DATASETS } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      { (props.loading)\n        ? <>\n          <Loader active={props.loading} />\n        </>\n        : <>\n            <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n            <Button\n              variant='outlined'\n              disableElevation\n              color='primary'\n              onClick={() => props.setOpenDatasetsListDialog(true)}\n            >\n              + { SPARC_DATASETS }\n            </Button>\n        </>\n      }\n\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Dialog,\n  DialogActions,\n  Box,\n  Typography,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  TextField,\n  DialogTitle,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { addDataset, setDatasetsList } from \"../../redux/actions\";\nimport Splinter from \"./../../utils/Splinter\";\nimport { NodeViewWidget } from \"../../app/widgets\";\nimport { addWidget } from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport DatasetsListSplinter from \"./DatasetsListSplinter\";\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport FileHandler from \"../../utils/filesHandler\";\nimport UploadSubmit from \"./../FileUploader/UploadSubmit\";\nimport CLOSE from '../../images/close.svg';\n\nimport config from \"./../../config/app.json\";\n\nconst DatasetsListDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(undefined);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const datasets = useSelector((state) => state.sdsState.available_datasets);\n  const [filteredDatasets, setFilteredDatasets] = React.useState(datasets);\n\n  let turtle_url = \"\";\n  let json_url = \"\";\n  let splinter = undefined;\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const fillDataset = async (turtle, json) => {\n    splinter = new Splinter(json, turtle);\n    const _dataset = {\n      id: splinter.getDatasetId(),\n      graph: await splinter.getGraph(),\n      tree: await splinter.getTree(),\n      splinter: splinter,\n    };\n    dispatch(addDataset(_dataset));\n    dispatch(\n      addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0, 10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        },\n      })\n    );\n    dispatch(addWidget(NodeViewWidget));\n  };\n\n  const handleDone = (dataset) => {\n    turtle_url =\n      config.datasets_url + dataset + \"/LATEST/curation-export.ttl\";\n    const fileHandler = new FileHandler();\n    fileHandler.get_remote_file(turtle_url, (url, turtleData) => {\n      if (turtleData) {\n        json_url =\n          config.datasets_url +\n          dataset +\n          \"/LATEST/path-metadata.json\";\n        fileHandler.get_remote_file(json_url, (url, data) => {\n          if (data) {\n            fillDataset(turtleData, data);\n            setFilteredDatasets(datasets);\n            setSelectedIndex(undefined);\n            handleClose();\n          }\n        });\n      }\n    });\n  };\n\n  const loadDatasets = () => {\n    const fileHandler = new FileHandler();\n    const callback = async (url, fileData) => {\n      let file = {\n        id: \"ttl\",\n        url: url,\n        data: fileData,\n        file: { name: \"ttl\", type: \"text/turtle\" },\n      };\n      const splinter = new DatasetsListSplinter(undefined, file.data);\n      let graph = await splinter.getGraph();\n      let datasets = graph.nodes.filter((node) => node?.attributes?.hasUriApi);\n      datasets.forEach( node => node.attributes ? node.attributes.lowerCaseLabel = node.attributes?.label?.[0]?.toLowerCase() : null );\n      dispatch(setDatasetsList(datasets));\n      setFilteredDatasets(datasets);\n    };\n    const summaryURL = config.repository_url + config.available_datasets;\n    fileHandler.get_remote_file(summaryURL, callback);\n  };\n\n  const handleChange = (event) => {\n    const lowerCaseSearch = event.target.value.toLowerCase();\n    let filtered = datasets.filter((dataset) =>\n      dataset.attributes.lowerCaseLabel.includes(lowerCaseSearch) || dataset.name.includes(lowerCaseSearch)\n    );\n    setSearchField(lowerCaseSearch);\n    setFilteredDatasets(filtered);\n  };\n\n  const closeDialog = () => {\n    setFilteredDatasets(datasets);\n    setSelectedIndex(undefined);\n    handleClose();\n  }\n\n  const getFormattedListTex = (label) => {\n    const reg = new RegExp(searchField, 'gi');\n\n    return searchField === undefined || searchField === \"\" \n      ? \n      label \n      :\n      label.replace(reg, function(str) {return '<b>'+str+'</b>'});\n  }\n\n  useEffect(() => {\n    open && datasets.length === 0 && loadDatasets();\n  });\n\n  return (\n    <Dialog \n      className=\"datasets_dialog\"\n      open={open}\n      handleClose={closeDialog}\n      PaperProps={{\n        style: {\n          width : '50rem'\n        },\n      }}\n    >\n      <DialogTitle align=\"center\">\n        <img\n          className=\"dialog_close\"\n          src={CLOSE}\n          onClick={handleClose}\n          alt=\"Close\"\n        />\n        <Typography variant=\"h3\">{config.text.datasetsButtonText}</Typography>\n        <Typography variant=\"subtitle1\">{config.text.datasetsButtonSubtitleText}</Typography>\n      </DialogTitle>\n      {datasets.length > 0 ? (\n        <>\n          <Box className=\"datasets_list\">\n            <TextField\n              fullWidth\n              disabled={datasets.length === 0}\n              label={config.text.datasetsDialogSearchText}\n              id=\"fullWidth\"\n              onChange={handleChange}\n            />\n          </Box>\n          {filteredDatasets.length > 0 ? (\n            <Box className=\"datasets_list datasets_list_results\" align=\"right\">\n              <Typography>{filteredDatasets.length} found</Typography>\n            </Box>\n          )\n          :\n          null\n          }\n          <Box className=\"datasets_list\">\n            <Paper className=\"datasets_dialog_list\">\n              <List className=\"datasets_list\">\n                {filteredDatasets.map((dataset) => (\n                  <>\n                    <ListItem\n                      className=\"dataset_item\"\n                      key={`item-${dataset.name}`}\n                      selected={selectedIndex === dataset.name}\n                      onClick={(event) =>\n                        handleListItemClick(event, dataset.name)\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Typography\n                            type=\"caption\"\n                            className=\"dataset_list_text\"\n                            dangerouslySetInnerHTML={{\n                              __html:\n                                getFormattedListTex(dataset.attributes?.label[0])\n                            }}\n                          />\n                        }\n                      />\n                    </ListItem>\n                    <Divider />\n                  </>\n                ))}\n              </List>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <Box className=\"datasets_list\">\n          <CircularProgress className=\"datasets_loader\" />\n        </Box>\n      )}\n      <Box className=\"datasets_list\">\n        <UploadSubmit\n          handleClose={() => handleDone(selectedIndex)}\n          enabledButton={selectedIndex === undefined}\n        />\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default DatasetsListDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport FileHandler from '../../../utils/filesHandler';\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Done'\n        />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [rdf, setRdf] = useState(undefined);\n  const [json, setJson] = useState(undefined);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf({\n        ...rdf, data\n      })\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson({\n        ...json, data\n      })\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  }\n\n  const onDelete = (file)  => {\n    if (rdf?.file === file && (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1])) {\n      setRdf(undefined);\n    } else if (json?.file === file && (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0])) {\n      setJson(undefined);\n    } else {\n      console.error(\"something weird happened!\")\n    }\n  };\n\n  const onDrop = (files, accept = true) => {\n    for (const file of files) {\n      if (file.type === \"text/turtle\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[1]) {\n        setRdf({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else if (file.type === \"application/json\" || file.name.split('.').pop() === FILE_UPLOAD_PARAMS.acceptedFileExtensions[0]) {\n        setJson({\n          file,\n          errors: file.size > FILE_UPLOAD_PARAMS.maxFileSize ? [{ message: 'Error: File is too large' }] : [] ,\n          id: Math.random(),\n        })\n      } else {\n        console.error(\"something weird happened!\")\n      }\n    }\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  const files = [rdf, json].filter(item => item !== undefined);\n\n  return (\n    <>\n      {json !== undefined && rdf !== undefined \n        ? <> </>\n        : <DropzoneArea\n        fileObjects={files.map(item => item.file)}\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      /> }\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {json !== undefined && rdf !== undefined && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\nimport FileHandler from '../../utils/filesHandler';\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback, () => {});\n    fileHandler2.get_remote_file(getJsonURL(url), callback, () => {});\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/toggle-right.ce5f8e9f.svg\";","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport ToggleRight from '../../images/toggle-right.svg';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\n\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)}>\n          <img src={!expand ? ToggleRight : ToggleLeft} alt='Toggle' />\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if (nodeIds.length === 0) {\n      return;\n    }\n\n    if ((nodes.length !== nodeIds.length) && (nodes[0] === nodeIds[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n        selected={[nodeSelected?.tree_node?.id]}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '../../images/search.svg';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\n\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n        >\n          <img src={Search} alt='Search' />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","export default __webpack_public_path__ + \"static/media/plus.f6839d16.svg\";","import Plus from '../../images/plus.svg';\nimport { ADD_DATASET } from '../../constants';\nimport { Box, Button } from '@material-ui/core';\nimport config from \"./../../config/app.json\";\n\nconst SidebarFooter = (props) => {\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\">\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\",\"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenUploadDialog(true)}\n      >\n        <img src={Plus} alt='Plus' />\n        {ADD_DATASET}\n      </Button>\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        style={{ \"width\" : \"45%\", \"minWidth\" : \"45%\" }}\n        onClick={() => props.setOpenDatasetsListDialog(true)}\n      >\n        {config.text.datasetsButtonText}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openUploadDialog={props.openUploadDialog}\n        setOpenUploadDialog={props.setOpenUploadDialog}\n        openDatasetsListDialog={props.openDatasetsListDialog}\n        setOpenDatasetsListDialog={props.setOpenDatasetsListDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.25rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0 .375rem',\n          fontSize: '.75rem',\n          color: primaryTextColor,\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: lightBorderColor,\n        height: '2.375rem',\n        borderRadius: `${radius}px !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: lightBorderColor,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: inputTextColor,\n        '&::placeholder': {\n          color: inputTextColor,\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: secondaryColor,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              fontSize: 0,\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: lightBorderColor,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: noInstanceColor,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: noInstanceColor,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                color: placeHolderColor,\n                cursor: 'pointer',\n                lineHeight: 'normal',\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '0',\n          zIndex: '100',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import * as d3 from 'd3';\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState, useEffect } from 'react';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { selectInstance } from '../../redux/actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport { GRAPH_SOURCE } from '../../constants';\nimport { rdfTypes } from '../../utils/graphModel';\n\nconst NODE_FONT = '500 6px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 3000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n};\nconst TOP_DOWN = {\n  label : \"Top Down\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(TOP_DOWN);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n  const layout = useSelector(state => state.sdsState.layout);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n  };\n\n  const handleNodeLeftClick = (node, event) => {\n    dispatch(selectInstance({\n      dataset_id: props.graph_id,\n      graph_node: node.id,\n      tree_node: node?.tree_reference?.id,\n      source: GRAPH_SOURCE\n    }));\n  };\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n    let center =  graphRef?.current?.ggv?.current.centerAt();\n    setCameraPosition({ x :  center.x , y :  center.y });\n  };\n\n  const onEngineStop = () => {\n    resetCamera();\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout ( () => setLoading(false) , LOADING_TIME);\n  }, []);\n\n  useEffect(() => {\n    if (nodeSelected && nodeSelected?.id !== selectedNode?.id) {\n      let node = graphRef?.current?.props?.data?.nodes.find( item => item.id === nodeSelected.id && item.parent?.id === nodeSelected.parent?.id );\n      if (node) {\n        handleNodeRightClick(node, null);\n        setSelectedNode(node);\n        setHoverNode(node);\n      }\n    }\n  }, [nodeSelected]);\n\n  //Resume animation after component is updated, fixes issue with graphics going crazy.\n  useEffect(() => {\n    // selectedNode && handleNodeRightClick(selectedNode, null);\n    graphRef?.current?.ggv?.current.centerAt(cameraPosition.x, cameraPosition.y);\n    graphRef?.current?.ggv?.current.d3Force('collide', d3.forceCollide(4));\n    graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(-100))\n  },[layout]);\n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 10;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 4, size * 4];\n      const hoverRectPosition = [node.x - 20, node.y - 14];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1] + 2,\n      ];\n      const hoverRectBorderRadius = 2;\n      ctx.beginPath();\n\n      try {\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      } catch (error) {\n        const img = new Image();\n        img.src = rdfTypes.Unknown.image;\n        node.img = img;\n\n        // Add default icon if new icon wasn't found under images\n        ctx.drawImage(\n          node?.img,\n          node.x - size - 1,\n          node.y - size,\n          ...nodeImageSize\n        );\n      }\n\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 10).concat('...');\n      } else if ( Array.isArray(nodeName) ){\n        nodeName = nodeName[0]?.substr(0, 10).concat('...');\n      }\n      const textProps = [nodeName, node.x + 2, textHoverPosition[1] + 4.5];\n      if (node === hoverNode || node?.id === selectedNode?.id || node?.id === nodeSelected?.id ) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0],\n          hoverRectDimensions[0] / 4,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n    },\n    [hoverNode]\n  );\n\n  let maxNodesLevel = selectedLayout.maxNodesLevel(window.datasets[props.graph_id].graph);\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={graphRef}\n        // Graph data with Nodes and Links to populate\n        data={window.datasets[props.graph_id].graph}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        warmupTicks={1000}\n        cooldownTicks={50}\n        onEngineStop={onEngineStop}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        forceChargeStrength={maxNodesLevel * -10}\n        linkDirectionalParticles={1}\n        linkCurvature={link => {\n          let curve = 0;\n\n          if ( selectedLayout.layout !== RADIAL_OUT.layout ){\n            if ( link.source.fx > link.target.fx ) {\n              curve = curve * -1;\n            }\n            else if ( link.source.fx === link.target.fx ) {\n              curve = 0;\n            } else if ( link.source.fx >= link.target.fx ) {\n              curve = -.05;\n            } else {\n              curve = .05;\n            }\n          }\n\n          return curve;\n        }}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => {\n          if ( selectedLayout.layout !== RADIAL_OUT.layout ){\n            node.fx = node.xPos;\n            node.fy = 100 * node.level;\n          }\n        }}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div className='graph-view_controls'>\n            <IconButton aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <FormatAlignCenterIcon />\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n            </Menu>\n            <IconButton onClick={(e) => zoomIn()}>\n              <ZoomInIcon />\n            </IconButton>\n            <IconButton onClick={(e) => zoomOut()}>\n              <ZoomOutIcon />\n            </IconButton>\n            <IconButton onClick={(e) => resetCamera()}>\n              <RefreshIcon />\n            </IconButton>\n            <LayersIcon />\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => (item?.link === undefined\n        ? (<Chip key={`${item?.value}_${index}`} label={item?.value} />)\n        : (<Chip key={`${item?.value}_${index}`} label={item?.value} onClick={() => window.open(item.link, '_blank')}/>)))\n      }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.tree_node?.timestamp_updated !== undefined) {\n        latestUpdate = new Date(node?.tree_node?.timestamp_updated.split(\",\")[0]);\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Type',\n            value: node?.tree_node?.type\n        },\n        {\n            title: 'Mimetype',\n            value: node?.tree_node?.mimetype\n        },\n        {\n            title: 'Size Bytes',\n            value: node?.tree_node?.size_bytes\n        }\n    ];\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"File Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node?.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'File Details'} />)\n                }\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node?.graph_node?.attributes?.isAbout} />\n                </Box>\n                { node?.tree_node?.uri_human !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.tree_node?.uri_human} title=\"Human URI\" />\n                       </Box>)\n                    : (<> </>)\n                }\n\n                { node?.tree_node?.checksums !== undefined\n                    ? (<>\n                            <SimpleLabelValue label={'Checksum'} value={node?.tree_node?.checksums[0].hex} />\n                            <SimpleLabelValue label={'Checksum Algorithm'} value={node?.tree_node?.checksums[0].cypher} />\n                        </>)\n                    : (<> </>)\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node?.graph_node?.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node?.graph_node?.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <Typography component=\"h3\">Person Details</Typography>\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Name</Typography>\n                    <Links key={`name_href_link`} href={node.graph_node?.id} title={title.toString()} />\n                    {/* <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} /> */}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={item} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n\nexport const simpleValue = (label, value) => {\n    if (value !== undefined) {\n        return (<SimpleLabelValue key={label} label={label} value={value} />);\n    } else {\n        return (<> </>);\n    }\n}\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label ? node.graph_node.attributes?.label[0] : \"\";\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined Sample name\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Sample Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Sample Details'} />)\n                }\n\n                { iterateSimpleValue('Assigned group', node?.graph_node?.attributes?.hasAssignedGroup) }\n                {\n                    <Box className=\"tab-content-row\">\n                        <Typography component=\"label\">{\"Derived Information\"}</Typography>\n                        <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                    </Box>\n                }\n                { iterateSimpleValue('Digital artifact', node?.graph_node?.attributes?.hasDigitalArtifactThatIsAboutIt) }\n                { iterateSimpleValue('Participant in performance of', node?.graph_node?.attributes?.participantInPerformanceOf) }\n                { iterateSimpleValue('Derived from subject', node?.graph_node?.attributes?.wasDerivedFromSubject) }\n                { iterateSimpleValue('Extracted from Anatomical region', node?.graph_node?.attributes?.wasExtractedFromAnatomicalRegion) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleLinkedChip from './Views/SimpleLinkedChip';\nimport USER from \"../../../images/user.svg\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n    const nodes = window.datasets[node.dataset_id].splinter.nodes;\n\n    let title = \"\";\n    let label = \"\";\n    let idDetails = \"\";\n    let description = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node?.graph_node.attributes?.label[0];\n        title = node?.graph_node.attributes?.title[0];\n        description = node?.graph_node.attributes?.description[0];\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        label = node?.tree_node?.basename;\n        idDetails = node?.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.graph_node?.id + detailsLabel;\n        label = node.graph_node?.attributes?.label[0];\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.graph_node?.attributes?.latestUpdate !== undefined) {\n        latestUpdate = new Date(node.graph_node.attributes?.latestUpdate[0])\n    }\n\n    let contactPerson = [];\n    if (node.graph_node.attributes?.hasResponsiblePrincipalInvestigator !== undefined) {\n        node.graph_node.attributes?.hasResponsiblePrincipalInvestigator.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Principal Investigator',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    if (node.graph_node.attributes?.hasContactPerson !== undefined) {\n        node.graph_node.attributes?.hasContactPerson.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor?.name,\n                designation: 'Contributor',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Error Index',\n            value: node.graph_node.attributes?.errorIndex\n        },\n        {\n            title: 'Template Schema Version',\n            value: node.graph_node.attributes?.hasDatasetTemplateSchemaVersion\n        },\n        {\n            title: 'Experiment Modality',\n            value: node.graph_node.attributes?.hasExperimentalModality\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Title'} value={title} heading={'Dataset Details'} />\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={label} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={label} />)\n                }\n                <SimpleLabelValue label={'Description'} value={description} />\n\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.isAbout} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">Protocol Techniques</Typography>\n                    <SimpleLinkedChip chips={node.graph_node.attributes?.protocolEmploysTechnique} />\n                </Box>\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node.graph_node.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node.graph_node.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => <Chip key={`${item}_${index}`} label={item} /> ) }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue, simpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node.tree_node && node.graph_node) {\n        idDetails = node?.tree_node?.id + detailsLabel;\n        title = node?.tree_node?.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node?.graph_node?.id + detailsLabel;\n        title = node.graph_node.name;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Weight Unit',\n            value: node.graph_node.attributes?.weightUnit\n        },\n        {\n            title: 'Weight Value',\n            value: node.graph_node.attributes?.weightValue\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Subject Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Subject Details'} />)\n                }\n\n                { iterateSimpleValue('Age Category', node?.graph_node?.attributes?.hasAgeCategory) }\n                { (node.graph_node.attributes?.ageValue && node.graph_node.attributes?.ageUnit)\n                    ? simpleValue('Age', node.graph_node.attributes?.ageValue + ' ' + node.graph_node.attributes?.ageUnit)\n                    : (node.graph_node.attributes?.ageBaseUnit && node.graph_node.attributes?.ageBaseValue)\n                        ? simpleValue('Age', node.graph_node.attributes?.ageBaseValue + ' ' + node.graph_node.attributes?.ageBaseUnit)\n                        : <> </>\n                }\n\n                { (node.graph_node.attributes?.weightUnit && node.graph_node.attributes?.weightValue)\n                    ? simpleValue('Weight', node.graph_node.attributes?.weightValue + ' ' + node.graph_node.attributes?.weightUnit)\n                    : <> </>\n                }\n\n                { iterateSimpleValue('Biological Sex', node?.graph_node?.attributes?.biologicalSex) }\n                { iterateSimpleValue('Specimen identifier', node?.graph_node?.attributes?.specimenHasIdentifier) }\n\n                { node.graph_node?.attributes?.subjectSpecies && node.graph_node?.attributes?.subjectSpecies.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Species</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectSpecies} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.subjectStrain && node.graph_node?.attributes?.subjectStrain.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Strains</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.subjectStrain} />\n                        </Box>)\n                    : <> </>\n                }\n                { node.graph_node?.attributes?.hasAssignedGroup && node.graph_node?.attributes?.hasAssignedGroup.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Assigned Groups</Typography>\n                            <SimpleChip chips={node.graph_node?.attributes?.hasAssignedGroup} />\n                        </Box>)\n                    : <> </>\n                }\n                { node?.graph_node?.attributes?.hasDerivedInformationAsParticipant !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                        </Box>)\n                    : <></>\n                }\n                { node?.graph_node?.attributes?.participantInPerformanceOf !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.graph_node?.attributes?.participantInPerformanceOf} title=\"Participant in performance of\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label?.[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                { node.graph_node.attributes?.hasUriHuman && node.graph_node.attributes?.hasUriHuman[0] !== \"\"\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"h3\">{\"Protocol Details\"}</Typography>\n                            <Typography component=\"label\">Label</Typography>\n                            <Links key={`label_href_link`} href={node.graph_node.attributes?.hasUriHuman[0]} title={title} />\n                        </Box>)\n                    : (<SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />)\n                }\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst CollectionDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Collection Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default CollectionDetails;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport CollectionDetails from './Details/CollectionDetails';\n\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <CollectionDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <CollectionDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        separator={<img src={DIVIDER} alt=\"DIVIDER\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography variant=\"subtitle2\" onClick={() => {goToLink(links?.current.id)}} className=\"breadcrumb_selected\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport { useSelector } from 'react-redux'\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\n\nconst NodeDetailView = (props) => {\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  if (nodeSelected.tree_node !== undefined && nodeSelected.tree_node !== null) {\n    path = [...nodeSelected.tree_node.path]\n    path.shift();\n    otherDetails = path.reverse().map( singleNode => {\n      const tree_node = window.datasets[nodeSelected.dataset_id].splinter.tree_map.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: tree_node.graph_reference,\n        tree_node: tree_node\n      }\n      // I don't like the check on primary and derivative below since this depends on the data\n      // but it's coming as a feature request, so I guess it can stay there.\n      if (new_node.tree_node.id !== subject_key\n        && new_node.tree_node.id !== contributors_key\n        && new_node.tree_node.id !== protocols_key\n        && new_node.tree_node.basename !== 'primary'\n        && new_node.tree_node.basename !== 'derivative') {\n        links.pages.push({\n          id: singleNode,\n          title: tree_node.text,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.tree_node.id,\n      text: nodeSelected.tree_node.text\n    };\n  } else {\n    path = [];\n    var latestNodeVisited = nodeSelected;\n    while ( latestNodeVisited.graph_node.parent !== undefined ) {\n      path.push(latestNodeVisited.graph_node.parent.id);\n      latestNodeVisited = {\n        tree_node: undefined,\n        graph_node: latestNodeVisited.graph_node.parent\n      };\n    };\n\n    otherDetails = path.reverse().map( singleNode => {\n      const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: graph_node,\n        tree_node: graph_node.tree_reference\n      }\n      if (new_node.graph_node.id !== subject_key\n        && new_node.graph_node.id !== contributors_key\n        && new_node.graph_node.id !== protocols_key) {\n        links.pages.push({\n          id: singleNode,\n          title: graph_node.name,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.graph_node.id,\n      text: nodeSelected.graph_node.name\n    };\n  }\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\">\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      {/**{ nodeDetails.getHeader() }*/}\n      { otherDetails }\n      { nodeDetails.getDetail() }\n      <NodeFooter />\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        available_datasets : [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {}\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n            case Actions.SET_DATASET_LIST:\n                return {\n                    ...state,\n                    available_datasets: action.data.datasets\n                };\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        default:\n            return state;\n    }\n}\n","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        case Actions.SET_DATASET_LIST:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const axios = require('axios');\n\nexport default class FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback, errorCallback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            errorCallback && errorCallback(undefined);\n        });\n    }\n}\n","export const IMPORT_TEXT = 'Load a new dataset';\nexport const ADD_DATASET = 'Load Dataset';\nexport const LIST_DATASETS = 'List Datasets';\nexport const SPARC_DATASETS = 'SPARC Datasets';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['json', 'ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\n"],"sourceRoot":""}